[
  "error AdapterCallFailed(bytes res)",
  "error AdapterNotWhitelisted(address adapter)",
  "error CannotBridgeToSameNetwork()",
  "error InsufficientBalance(uint256 amount, uint256 contractBalance)",
  "error IntegratorNotAllowed()",
  "error InvalidAmount()",
  "error InvalidContract()",
  "error InvalidLength()",
  "error InvalidPermit()",
  "error InvalidPermitData()",
  "error InvalidSwapDetails()",
  "error NativeTransferFailed()",
  "error NoSwapFromZeroBalance()",
  "error NoTransferToNullAddress()",
  "error NullAddrIsNotAValidSpender()",
  "error NullAddrIsNotAnERC20Token()",
  "error SlippageTooLow(uint256 minAmount, uint256 returnAmount)",
  "error SwapCallFailed(bytes reason)",
  "error UnAuthorizedCall(address)",
  "event BatchBridgeTransferStart(bytes32 transactionId, address integrator, address indexed sender, tuple(string bridge, bytes to, bytes receiver, address from, bool hasSourceSwaps, bool hasDestinationCall, uint256 minAmountIn, uint256 destinationChainId)[] bridgeData)",
  "event BatchSwapAndBridgeTransferStart(bytes32 transactionId, address integrator, address indexed sender, tuple(string bridge, bytes to, bytes receiver, address from, bool hasSourceSwaps, bool hasDestinationCall, uint256 minAmountIn, uint256 destinationChainId)[] bridgeData, tuple(address dex, address fromToken, address toToken, uint256 fromAmount, uint256 leftOverFromAmount, uint256 returnToAmount)[] swapInfo)",
  "function batchBridge(bytes32 _transactionId, address _integrator, tuple(string bridge, bytes to, bytes receiver, address from, bool hasSourceSwaps, bool hasDestinationCall, uint256 minAmountIn, uint256 destinationChainId)[] _bridgeData, tuple(address adapter, bytes data, bytes permit)[] _data) payable",
  "function batchSwapAndBridge(bytes32 _transactionId, address _integrator, tuple(string bridge, bytes to, bytes receiver, address from, bool hasSourceSwaps, bool hasDestinationCall, uint256 minAmountIn, uint256 destinationChainId)[] _bridgeData, tuple(address callTo, address approveTo, address from, address to, uint256 fromAmount, uint256 minToAmount, bytes swapCallData, bytes permit)[] _swapData, tuple(address adapter, bytes data, bytes permit)[] _data) payable"
]
