[
  "error BridgeCallFailed(bytes reason)",
  "error CannotBridgeToSameNetwork()",
  "error ContractCallNotAllowed()",
  "error InformationMismatch()",
  "error InsufficientBalance(uint256 amount, uint256 contractBalance)",
  "error IntegratorNotAllowed()",
  "error InvalidAmount()",
  "error InvalidContract()",
  "error InvalidPermit()",
  "error InvalidPermitData()",
  "error InvalidReceiver()",
  "error InvalidSwapDetails()",
  "error NativeTransferFailed()",
  "error NoSwapFromZeroBalance()",
  "error NoTransferToNullAddress()",
  "error NotAContract()",
  "error NullAddrIsNotAValidSpender()",
  "error NullAddrIsNotAnERC20Token()",
  "error PartialSwap(uint256 leftOverAmount)",
  "error ReentrancyError()",
  "error SliceOutOfBounds()",
  "error SliceOverflow()",
  "error SlippageTooHigh(uint256 minAmount, uint256 returnAmount)",
  "error SwapCallFailed(bytes reason)",
  "error UnAuthorized()",
  "error UnAuthorizedCallToFunction()",
  "error ZeroAddress()",
  "event BridgeTransferStarted(bytes32 transactionId, address indexed integrator, address indexed sender, address refundee, tuple(string bridge, address from, address to, address receiver, uint256 minAmount, uint256 destinationChainId, bool hasSourceSwaps, bool hasDestinationCall) bridgeData)",
  "event MultiTokenBridgeTransferStarted(bytes32 transactionId, address indexed integrator, address indexed sender, address refundee, tuple(string bridge, address from, address to, address receiver, uint256 minAmount, uint256 destinationChainId, bool hasSourceSwaps, bool hasDestinationCall)[] bridgeData)",
  "event SelectorToInfoUpdated(address[] routers, bytes4[] selectors, tuple(bool isAvailable, uint256 offset)[] info)",
  "event SwapBridgeTransferStarted(bytes32 transactionId, address indexed integrator, address indexed sender, address refundee, tuple(string bridge, address from, address to, address receiver, uint256 minAmount, uint256 destinationChainId, bool hasSourceSwaps, bool hasDestinationCall)[] bridgeData, tuple(address dex, address fromToken, address toToken, uint256 fromAmount, uint256 leftOverFromAmount, uint256 returnToAmount)[] swapInfo)",
  "event SwappedTokens(bytes32 transactionId, address dex, address fromAssetId, address toAssetId, uint256 fromAmount, uint256 toAmount, uint256 leftoverFromAmount, uint256 timestamp)",
  "function bridge(bytes32 _transactionId, address _integrator, address _refundee, tuple(string bridge, address from, address to, address receiver, uint256 minAmount, uint256 destinationChainId, bool hasSourceSwaps, bool hasDestinationCall) _bridgeData, tuple(address callTo, address approveTo, uint256 extraNative, bytes permit, bytes callData) _genericData) payable",
  "function bridgeMultipleTokens(bytes32 _transactionId, address _integrator, address _refundee, tuple(string bridge, address from, address to, address receiver, uint256 minAmount, uint256 destinationChainId, bool hasSourceSwaps, bool hasDestinationCall)[] _bridgeData, tuple(address callTo, address approveTo, uint256 extraNative, bytes permit, bytes callData)[] _genericData) payable",
  "function swapAndBridge(bytes32 _transactionId, address _integrator, address _refundee, tuple(string bridge, address from, address to, address receiver, uint256 minAmount, uint256 destinationChainId, bool hasSourceSwaps, bool hasDestinationCall)[] _bridgeData, tuple(address callTo, address approveTo, address from, address to, uint256 fromAmount, uint256 minToAmount, bytes swapCallData, bytes permit)[] _swapData, tuple(address callTo, address approveTo, uint256 extraNative, bytes permit, bytes callData)[] _genericData) payable",
  "function updateSelectorInfo(address[] _routers, bytes4[] _selectors, tuple(bool isAvailable, uint256 offset)[] _infos)"
]
