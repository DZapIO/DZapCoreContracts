[
  "error AdapterCallFailed(address adapter, bytes res)",
  "error AdapterNotWhitelisted(address adapter)",
  "error DexNotWhitelised(address dex)",
  "error InsufficientBalance(uint256 amount, uint256 contractBalance)",
  "error InvalidPermit(string)",
  "error InvalidPermitType()",
  "error NativeTransferFailed()",
  "error NoSwapFromZeroAmount()",
  "error NoTransferToNullAddress()",
  "error NullAddrIsNotAValidRecipient()",
  "error NullAddrIsNotAValidSpender()",
  "error SigDeadlineExpired()",
  "error SlippageTooHigh(uint256 minAmount, uint256 returnAmount)",
  "error SwapCallFailed(address target, bytes4 funSig, bytes reason)",
  "error UnauthorizedSigner()",
  "event BridgeStarted(bytes indexed transactionId, address indexed user, bytes receiver, string bridge, address bridgeAddress, address from, bytes to, uint256 amount, uint256 destinationChainId, bool hasDestinationCall)",
  "event DZapBatchTokenSwapped(bytes indexed transactionId, address indexed sender, tuple(string dex, address callTo, address recipient, address fromToken, address toToken, uint256 fromAmount, uint256 returnToAmount)[] swapInfo)",
  "event DZapBridgeStarted(bytes indexed transactionId, address indexed user, address indexed integrator)",
  "event DZapGasLessStarted(bytes indexed _transactionId, address indexed executor, address indexed _user)",
  "event DZapTokenSwapped(bytes indexed transactionId, address indexed sender, tuple(string dex, address callTo, address recipient, address fromToken, address toToken, uint256 fromAmount, uint256 returnToAmount) swapInfo)",
  "function executeBridge(bytes _transactionId, bytes _bridgeFeeData, bytes _userIntentSignature, bytes _feeVerificationSignature, uint256 _userIntentDeadline, uint256 _bridgeFeeDeadline, address _user, tuple(address token, uint256 amount, bytes permit) _inputToken, tuple(address token, uint256 amount) _executorFeeInfo, tuple(address adapter, bytes adapterData) _adapterInfo) payable",
  "function executeMultiBridge(bytes _transactionId, bytes _bridgeFeeData, bytes _userIntentSignature, bytes _feeVerificationSignature, uint256 _userIntentDeadline, uint256 _bridgeFeeDeadline, address _user, tuple(address token, uint256 amount, bytes permit)[] _inputTokens, tuple(address token, uint256 amount)[] _executorFeeInfo, tuple(address recipient, address from, address to, uint256 fromAmount, uint256 minToAmount, bool updateBridgeInAmount)[] _swapData, tuple(string dex, address callTo, address approveTo, bytes swapCallData, bool isDirectTransfer)[] _swapExecutionData, tuple(address adapter, bytes adapterData)[] _adapterInfo) payable",
  "function executeMultiBridgeBatchWithPermit2Witness(bytes _transactionId, bytes _bridgeFeeData, bytes _userIntentSignature, bytes _feeVerificationSignature, uint256 _bridgeFeeDeadline, address _user, tuple(tuple(address token, uint256 amount)[] permitted, uint256 nonce, uint256 deadline) _tokenDepositDetails, tuple(address token, uint256 amount)[] _executorFeeInfo, tuple(address recipient, address from, address to, uint256 fromAmount, uint256 minToAmount, bool updateBridgeInAmount)[] _swapData, tuple(string dex, address callTo, address approveTo, bytes swapCallData, bool isDirectTransfer)[] _swapExecutionData, tuple(address adapter, bytes adapterData)[] _adapterInfo) payable",
  "function executeMultiSwap(bytes _transactionId, bytes _userIntentSignature, uint256 _userIntentDeadline, address _user, tuple(address token, uint256 amount, bytes permit)[] _inputTokens, tuple(address token, uint256 amount)[] _executorFeeInfo, tuple(address recipient, address from, address to, uint256 fromAmount, uint256 minToAmount)[] _swapData, tuple(string dex, address callTo, address approveTo, bytes swapCallData, bool isDirectTransfer)[] _swapExecutionData)",
  "function executeMultiSwapWithPermit2Witness(bytes _transactionId, bytes _userIntentSignature, address _user, tuple(tuple(address token, uint256 amount)[] permitted, uint256 nonce, uint256 deadline) _tokenDepositDetails, tuple(address token, uint256 amount)[] _executorFeeInfo, tuple(address recipient, address from, address to, uint256 fromAmount, uint256 minToAmount)[] _swapData, tuple(string dex, address callTo, address approveTo, bytes swapCallData, bool isDirectTransfer)[] _swapExecutionData)",
  "function executeSwap(bytes _transactionId, bytes _userIntentSignature, bytes _tokenApprovalData, uint256 _userIntentDeadline, address _user, tuple(address token, uint256 amount) _executorFeeInfo, tuple(address recipient, address from, address to, uint256 fromAmount, uint256 minToAmount) _swapData, tuple(string dex, address callTo, address approveTo, bytes swapCallData, bool isDirectTransfer) _swapExecutionData)"
]
