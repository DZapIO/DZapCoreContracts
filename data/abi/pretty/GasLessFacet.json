[
  "error AdapterCallFailed(address adapter, bytes res)",
  "error AdapterNotWhitelisted(address adapter)",
  "error ContractIsNotPaused()",
  "error ContractIsPaused()",
  "error DexNotWhitelised(address dex)",
  "error InsufficientBalance(uint256 amount, uint256 contractBalance)",
  "error InvalidPermit(string reason)",
  "error InvalidPermitType()",
  "error NativeTransferFailed()",
  "error NoSwapFromZeroAmount()",
  "error NoTransferToNullAddress()",
  "error NullAddrIsNotAValidRecipient()",
  "error NullAddrIsNotAValidSpender()",
  "error ReentrancyError()",
  "error SigDeadlineExpired()",
  "error SlippageTooHigh(uint256 minAmount, uint256 returnAmount)",
  "error SwapCallFailed(address target, bytes4 funSig, bytes reason)",
  "error UnauthorizedSigner()",
  "event BridgeStarted(bytes32 indexed transactionId, address indexed user, bytes receiver, string bridge, address bridgeAddress, address from, bytes to, uint256 amount, uint256 destinationChainId, bytes destinationCalldata)",
  "event DZapBatchTokenSwapped(bytes32 indexed transactionId, address indexed sender, address indexed integrator, tuple(string dex, address callTo, address recipient, address fromToken, address toToken, uint256 fromAmount, uint256 returnToAmount)[] swapInfo)",
  "event DZapBridgeStarted(bytes32 indexed transactionId, address indexed user, address indexed integrator)",
  "event DZapGasLessStarted(bytes32 indexed _transactionId, address indexed executor, address indexed _user)",
  "event DZapTokenSwapped(bytes32 indexed transactionId, address indexed sender, address indexed integrator, tuple(string dex, address callTo, address recipient, address fromToken, address toToken, uint256 fromAmount, uint256 returnToAmount) swapInfo)",
  "function executeBridge(bytes32 _transactionId, bytes _bridgeFeeData, bytes _userIntentSignature, bytes _feeVerificationSignature, uint256 _userIntentDeadline, uint256 _bridgeFeeDeadline, address _user, tuple(address token, uint256 amount, bytes permit) _inputToken, tuple(address token, uint256 amount) _executorFeeInfo, tuple(address adapter, bytes adapterData) _adapterInfo) payable",
  "function executeMultiBridge(bytes32 _transactionId, bytes _bridgeFeeData, bytes _userIntentSignature, bytes _feeVerificationSignature, uint256 _bridgeFeeDeadline, address _user, tuple(tuple(address token, uint256 amount)[] permitted, uint256 nonce, uint256 deadline) _tokenDepositDetails, tuple(address token, uint256 amount)[] _executorFeeInfo, tuple(address recipient, address from, address to, uint256 fromAmount, uint256 minToAmount, bool updateBridgeInAmount)[] _swapData, tuple(string dex, address callTo, address approveTo, bytes swapCallData, bool isDirectTransfer)[] _swapExecutionData, tuple(address adapter, bytes adapterData)[] _adapterInfo) payable",
  "function executeMultiBridge(bytes32 _transactionId, bytes _bridgeFeeData, bytes _userIntentSignature, bytes _feeVerificationSignature, uint256 _userIntentDeadline, uint256 _bridgeFeeDeadline, address _user, tuple(address token, uint256 amount, bytes permit)[] _inputTokens, tuple(address token, uint256 amount)[] _executorFeeInfo, tuple(address recipient, address from, address to, uint256 fromAmount, uint256 minToAmount, bool updateBridgeInAmount)[] _swapData, tuple(string dex, address callTo, address approveTo, bytes swapCallData, bool isDirectTransfer)[] _swapExecutionData, tuple(address adapter, bytes adapterData)[] _adapterInfo) payable",
  "function executeMultiSwap(bytes32 _transactionId, address _user, address _integrator, bytes _userIntentSignature, tuple(tuple(address token, uint256 amount)[] permitted, uint256 nonce, uint256 deadline) _tokenDepositDetails, tuple(address token, uint256 amount)[] _executorFeeInfo, tuple(address recipient, address from, address to, uint256 fromAmount, uint256 minToAmount)[] _swapData, tuple(string dex, address callTo, address approveTo, bytes swapCallData, bool isDirectTransfer)[] _swapExecutionData)",
  "function executeMultiSwap(bytes32 _transactionId, address _user, address _integrator, uint256 _userIntentDeadline, bytes _userIntentSignature, tuple(address token, uint256 amount, bytes permit)[] _inputTokens, tuple(address token, uint256 amount)[] _executorFeeInfo, tuple(address recipient, address from, address to, uint256 fromAmount, uint256 minToAmount)[] _swapData, tuple(string dex, address callTo, address approveTo, bytes swapCallData, bool isDirectTransfer)[] _swapExecutionData)",
  "function executeSwap(bytes32 _transactionId, address _user, address _integrator, uint256 _userIntentDeadline, bytes _userIntentSignature, bytes _tokenApprovalData, tuple(address token, uint256 amount) _executorFeeInfo, tuple(address recipient, address from, address to, uint256 fromAmount, uint256 minToAmount) _swapData, tuple(string dex, address callTo, address approveTo, bytes swapCallData, bool isDirectTransfer) _swapExecutionData)"
]
