[
  "constructor(address _depositAddress)",
  "error InsufficientBalance(uint256 amount, uint256 contractBalance)",
  "error IntegratorNotAllowed()",
  "error InvalidAmount()",
  "error InvalidContract()",
  "error InvalidPermit()",
  "error InvalidPermitData()",
  "error NativeCallFailed(bytes reason)",
  "error NativeTransferFailed()",
  "error NoSwapFromZeroBalance()",
  "error NoTransferToNullAddress()",
  "error NotNativeToken()",
  "error NullAddrIsNotAValidSpender()",
  "error NullAddrIsNotAnERC20Token()",
  "error SlippageTooLow(uint256 minAmount, uint256 returnAmount)",
  "error SwapCallFailed(bytes reason)",
  "error UnAuthorizedCall(address)",
  "event GasZipBridgeTransferStarted(bytes32 indexed transactionId, address indexed integrator, address indexed sender, tuple(bytes data, uint256 depositAmount) gasZipData)",
  "event GasZipSwapBridgeTransferStarted(bytes32 indexed transactionId, address indexed integrator, address indexed sender, tuple(bytes data, uint256 depositAmount) gasZipData, tuple(address dex, address fromToken, address toToken, uint256 fromAmount, uint256 leftOverFromAmount, uint256 returnToAmount)[] swapInfo)",
  "function bridgeTokensViaGasZip(bytes32 _transactionId, address _integrator, tuple(bytes data, uint256 depositAmount) _gasZipData) payable",
  "function getGasZipDepositAddress() view returns (address)",
  "function swapAndBridgeTokensViaGasZip(bytes32 _transactionId, address _integrator, tuple(address callTo, address approveTo, address from, address to, uint256 fromAmount, uint256 minToAmount, bytes swapCallData, bytes permit)[] _swapData, tuple(bytes data, uint256 depositAmount) _gasZipData) payable"
]
