[
  "event BridgeTransferStarted(bytes32 indexed transactionId, address indexed integrator, address indexed sender, tuple(string bridge, bytes to, bytes receiver, address from, bool hasSourceSwaps, bool hasDestinationCall, uint256 minAmountIn, uint256 destinationChainId) bridgeData)",
  "event MultiTokenBridgeTransferStarted(bytes32 indexed transactionId, address indexed integrator, address indexed sender, tuple(string bridge, bytes to, bytes receiver, address from, bool hasSourceSwaps, bool hasDestinationCall, uint256 minAmountIn, uint256 destinationChainId)[] bridgeData)",
  "event SwapBridgeTransferStarted(bytes32 indexed transactionId, address indexed integrator, address indexed sender, tuple(string bridge, bytes to, bytes receiver, address from, bool hasSourceSwaps, bool hasDestinationCall, uint256 minAmountIn, uint256 destinationChainId)[] bridgeData, tuple(address dex, address fromToken, address toToken, uint256 fromAmount, uint256 leftOverFromAmount, uint256 returnToAmount)[] swapInfo)",
  "function bridgeMultipleTokensViaTransfer(bytes32 _transactionId, address _integrator, tuple(string bridge, bytes to, bytes receiver, address from, bool hasSourceSwaps, bool hasDestinationCall, uint256 minAmountIn, uint256 destinationChainId)[] _bridgeData, tuple(address transferTo, bytes permit)[] _transferData) payable",
  "function bridgeViaTransfer(bytes32 _transactionId, address _integrator, tuple(string bridge, bytes to, bytes receiver, address from, bool hasSourceSwaps, bool hasDestinationCall, uint256 minAmountIn, uint256 destinationChainId) _bridgeData, tuple(address transferTo, bytes permit) _transferData) payable",
  "function swapAndBridgeViaTransfer(bytes32 _transactionId, address _integrator, tuple(string bridge, bytes to, bytes receiver, address from, bool hasSourceSwaps, bool hasDestinationCall, uint256 minAmountIn, uint256 destinationChainId)[] _bridgeData, tuple(address callTo, address approveTo, address from, address to, uint256 fromAmount, uint256 minToAmount, bytes swapCallData, bytes permit)[] _swapData, tuple(address transferTo, bytes permit)[] _transferData) payable"
]
