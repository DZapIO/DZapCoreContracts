[
  "error ContractIsNotPaused()",
  "error ContractIsPaused()",
  "error DexNotWhitelisted(address dex)",
  "error InsufficientBalance(uint256 amount, uint256 contractBalance)",
  "error InvalidPermit(string reason)",
  "error InvalidPermitType()",
  "error NativeTransferFailed()",
  "error NoSwapFromZeroAmount()",
  "error NoTransferToNullAddress()",
  "error NullAddrIsNotAValidRecipient()",
  "error NullAddrIsNotAValidSpender()",
  "error ReentrancyError()",
  "error SlippageTooHigh(uint256 minAmount, uint256 returnAmount)",
  "error SwapCallFailed(address target, bytes4 funSig, bytes reason)",
  "event DZapBatchTokenSwapped(bytes32 indexed transactionId, address indexed sender, address indexed integrator, tuple(string dex, address callTo, address recipient, address fromToken, address toToken, uint256 fromAmount, uint256 returnToAmount)[] swapInfo)",
  "event DZapTokenSwapped(bytes32 indexed transactionId, address indexed sender, address indexed integrator, tuple(string dex, address callTo, address recipient, address fromToken, address toToken, uint256 fromAmount, uint256 returnToAmount) swapInfo)",
  "function swap(bytes32 _transactionId, address _integrator, tuple(address token, uint256 amount, bytes permit)[] _inputTokens, tuple(address recipient, address from, address to, uint256 fromAmount, uint256 minToAmount)[] _swapData, tuple(string dex, address callTo, address approveTo, bytes swapCallData, bool isDirectTransfer)[] _swapExecutionData, bool withoutRevert) payable",
  "function swap(bytes32 _transactionId, address _integrator, bytes _batchDepositSignature, tuple(tuple(address token, uint256 amount)[] permitted, uint256 nonce, uint256 deadline) _tokenDepositDetails, tuple(address recipient, address from, address to, uint256 fromAmount, uint256 minToAmount)[] _swapData, tuple(string dex, address callTo, address approveTo, bytes swapCallData, bool isDirectTransfer)[] _swapExecutionData, bool withoutRevert) payable",
  "function swap(bytes32 _transactionId, address _integrator, bytes _tokenApprovalData, tuple(address recipient, address from, address to, uint256 fromAmount, uint256 minToAmount) _swapData, tuple(string dex, address callTo, address approveTo, bytes swapCallData, bool isDirectTransfer) _swapExecutionData) payable"
]
