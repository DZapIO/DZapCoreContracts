[
  "event DexAdded(address indexed dexAddress)",
  "event DexRemoved(address indexed dexAddress)",
  "event FunctionSignatureApprovalChanged(address indexed dex, bytes4 indexed functionSignature, bool indexed approved)",
  "event AdaptersAdded(address[] adapters)",
  "event AdaptersRemoved(address[] adapters)",
  "event BridgeAdded(address[] bridges)",
  "event BridgeRemoved(address[] bridges)",
  "event SelectorToInfoUpdated(address[] bridges, bytes4[] selectors, uint256[] info)",
  "event SetDzapFixedNativeFeeAmount(uint256 fee)",
  "event SetDzapTokenFee(uint256 fee)",
  "event SetFixedNativeFee(uint256 fee)",
  "event SetIntegrator(address integrator, uint8[] feeType, tuple(uint256 tokenFee, uint256 fixedNativeFeeAmount, uint256 dzapTokenShare, uint256 dzapFixedNativeShare)[] info)",
  "event SetMaxPlatformFee(uint256 fee)",
  "event SetPlatformFee(uint256 fee)",
  "event MultiSwapped(bytes32 indexed transactionId, address indexed integrator, address indexed sender, address recipient, tuple(address dex, address fromToken, address toToken, uint256 fromAmount, uint256 leftOverFromAmount, uint256 returnToAmount)[] swapInfo)",
  "event Swapped(bytes32 indexed transactionId, address indexed integrator, address indexed sender, address recipient, tuple(address dex, address fromToken, address toToken, uint256 fromAmount, uint256 leftOverFromAmount, uint256 returnToAmount) swapInfo)",
  "event SwappedSingleToken(bytes32 indexed transactionId, address indexed sender, address recipient, tuple(address dex, address fromToken, address toToken, uint256 fromAmount, uint256 leftOverFromAmount, uint256 returnToAmount) swapInfo)",
  "event BridgeTransferStarted(bytes32 indexed transactionId, address indexed integrator, address indexed sender, tuple(string bridge, bytes to, bytes receiver, address from, bool hasSourceSwaps, bool hasDestinationCall, uint256 minAmountIn, uint256 destinationChainId) bridgeData)",
  "event MultiTokenBridgeTransferStarted(bytes32 indexed transactionId, address indexed integrator, address indexed sender, tuple(string bridge, bytes to, bytes receiver, address from, bool hasSourceSwaps, bool hasDestinationCall, uint256 minAmountIn, uint256 destinationChainId)[] bridgeData)",
  "event SwapBridgeTransferStarted(bytes32 indexed transactionId, address indexed integrator, address indexed sender, tuple(string bridge, bytes to, bytes receiver, address from, bool hasSourceSwaps, bool hasDestinationCall, uint256 minAmountIn, uint256 destinationChainId)[] bridgeData, tuple(address dex, address fromToken, address toToken, uint256 fromAmount, uint256 leftOverFromAmount, uint256 returnToAmount)[] swapInfo)",
  "event BatchBridgeTransferStart(bytes32 indexed transactionId, address indexed integrator, address indexed sender, tuple(string bridge, bytes to, bytes receiver, address from, bool hasSourceSwaps, bool hasDestinationCall, uint256 minAmountIn, uint256 destinationChainId)[] bridgeData)",
  "event BatchSwapAndBridgeTransferStart(bytes32 indexed transactionId, address indexed integrator, address indexed sender, tuple(string bridge, bytes to, bytes receiver, address from, bool hasSourceSwaps, bool hasDestinationCall, uint256 minAmountIn, uint256 destinationChainId)[] bridgeData, tuple(address dex, address fromToken, address toToken, uint256 fromAmount, uint256 leftOverFromAmount, uint256 returnToAmount)[] swapInfo)",
  "event GasZipBridgeTransferStarted(bytes32 indexed transactionId, address indexed integrator, address indexed sender, tuple(bytes32 recipient, uint256 destChains, uint256 depositAmount) gasZipData)",
  "event GasZipSwapBridgeTransferStarted(bytes32 indexed transactionId, address indexed integrator, address indexed sender, tuple(bytes32 recipient, uint256 destChains, uint256 depositAmount) gasZipData, tuple(address dex, address fromToken, address toToken, uint256 fromAmount, uint256 leftOverFromAmount, uint256 returnToAmount)[] swapInfo)"
]