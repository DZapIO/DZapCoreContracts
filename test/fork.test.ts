import { ethers } from 'hardhat'
import { parseUnits } from 'viem'

import { CHAIN_IDS } from '../config'
import { CONTRACTS } from '../constants'
import { forkNetwork, impersonate, updateBalance } from './utils'
import { decodePermitData, getAllDiamondFacets, getRpcUrl } from '../utils'

import { ERC20, Permit2 } from '../typechain-types/'

describe.skip('fork.test.ts', async () => {
  it('arb RELAY ', async () => {
    const jsonRpcUrl = getRpcUrl(CHAIN_IDS.ETH_MAINNET)
    console.log(jsonRpcUrl)
    await forkNetwork(jsonRpcUrl, 21971736)

    const user = await impersonate('0x4ab9F97585B0161f1aDa8484B209C44be54dad73')
    await updateBalance(user.address)

    // ------------------------------------

    const dZapAddress = '0xF708e11A7C94abdE8f6217B13e6fE39C8b9cC0a6'
    const contract = await getAllDiamondFacets(dZapAddress, user)

    // ------------------------------------

    // const encodedData = ethers.utils.defaultAbiCoder.encode(
    //   ['bytes32', 'uint256'],
    //   [reciever, destChains]
    // )
    // const decodeData = ethers.utils.defaultAbiCoder.decode(
    //   ['bytes32', 'uint256'],
    //   '0x46b24b781f9ac1344e594a313671e5cdb1459646000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a'
    // )
    // console.log(decodeData[0])
    // console.log(decodeData[1].toString())

    // ------------------------------------

    const tx = await contract.relayBridgeFacet.connect(user).bridgeViaRelay(
      '0x3078346162392d3464616437332d313734313036393732383530350000000000',
      '0x45Dd5eC28dbF5296DFFAe428D7f484Ab02Ee7BaD',
      {
        bridge: 'relayLink',
        to: '0xaf88d065e77c8cc2239327c5edb3a432268e5831',
        receiver: '0x4ab9f97585b0161f1ada8484b209c44be54dad73',
        from: '0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE',
        hasSourceSwaps: false,
        hasDestinationCall: false,
        minAmountIn: 3625142374928710n,
        destinationChainId: 42161n,
      },
      {
        requestId:
          '0xf6f5f63e87a2bbf984daa6035864339335af98a3b3db757c4d012a0a1859da54',
        permit:
          '0x000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000000',
      },
      {
        value: parseUnits('0.00374514237492871', 18),
      }
    )

    console.log(tx.hash)

    // await user.sendTransaction({
    //   to: dZapAddress,
    //   data: '0x8ef704c13078346162392d3464616437332d31373431303639373238353035000000000000000000000000000000000045dd5ec28dbf5296dffae428d7f484ab02ee7bad00000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000240000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000001400000000000000000000000000000000000000000000000000000000000000180000000000000000000000000eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ce10c3b849146000000000000000000000000000000000000000000000000000000000000a4b1000000000000000000000000000000000000000000000000000000000000000972656c61794c696e6b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000014af88d065e77c8cC2239327C5EDb3A432268e583100000000000000000000000000000000000000000000000000000000000000000000000000000000000000144ab9F97585B0161f1aDa8484B209C44be54dad73000000000000000000000000f6f5f63e87a2bbf984daa6035864339335af98a3b3db757c4d012a0a1859da5400000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000060000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000000',
    //   value: parseUnits('0.00012', 9),
    // })
  })

  it('arb RELAY ', async () => {
    const jsonRpcUrl = getRpcUrl(CHAIN_IDS.ARBITRUM_MAINNET)
    console.log(jsonRpcUrl)
    await forkNetwork(jsonRpcUrl, 305886727)

    const user = await impersonate('0x46b24b781f9Ac1344e594A313671e5CDb1459646')
    await updateBalance(user.address)

    // ------------------------------------

    const dzapAddress = '0x53fEa6E30CE675d8D79d7610D66AD921001b7E63'
    const dzap = await ethers.getContractAt(
      CONTRACTS.BatchBridgeCallFacet,
      dzapAddress
    )

    // ------------------------------------

    // const encodedData = ethers.utils.defaultAbiCoder.encode(
    //   ['bytes32', 'uint256'],
    //   [reciever, destChains]
    // )
    const decodeData = ethers.utils.defaultAbiCoder.decode(
      ['bytes32', 'uint256'],
      '0x46b24b781f9ac1344e594a313671e5cdb1459646000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a'
    )
    console.log(decodeData[0])
    console.log(decodeData[1].toString())

    await user.sendTransaction({
      data: '
      to: dzapAddress,
      value: 46819244496548 + 46819244496548 + 48238009481293,
    })
  })

  it('fork ', async () => {
    const chainId = CHAIN_IDS.POLYGON_MAINNET
    const jsonRpcUrl = getRpcUrl(chainId)
    await forkNetwork(jsonRpcUrl, 68791060)

    const user = await impersonate('0x12480616436DD6D555f88B8d94bB5156E28825B1')
    await updateBalance(user.address)

    // ------------------------------------

    // const dzapAddress = getDZapAddress(chainId)
    const dzapAddress = '0xF708e11A7C94abdE8f6217B13e6fE39C8b9cC0a6'
    const { swapFacet } = await getAllDiamondFacets(dzapAddress, user)
    // const swapTransferFacet = (await ethers.getContractAt(
    //   CONTRACTS.SwapTransferFacet,
    //   dzapAddress
    // )) as SwapTransferFacet

    // ------------------------------------

    // await user.sendTransaction({
    //   data: '0x6022b00b3078343662322d3435393634362d31373431323636303538343138000000000000000000000000000000000046b24b781f9ac1344e594a313671e5cdb1459646000000000000000000000000000000000000000000000000000000000000006000000000000000000000000068b3465833fb72a70ecdf485e0e4c7bd8665fc4500000000000000000000000068b3465833fb72a70ecdf485e0e4c7bd8665fc450000000000000000000000002791bca1f2de4661ed88a30c99a7a9449aa84174000000000000000000000000c2132d05d31c914a87c6611c10748aeb04b58e8f00000000000000000000000000000000000000000000000000000000002a1c06000000000000000000000000000000000000000000000000000000000029aef1000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000002e000000000000000000000000000000000000000000000000000000000000001a45ae401dc0000000000000000000000000000000000000000000000000000000067c9c6b800000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000e404e45aaf0000000000000000000000002791bca1f2de4661ed88a30c99a7a9449aa84174000000000000000000000000c2132d05d31c914a87c6611c10748aeb04b58e8f000000000000000000000000000000000000000000000000000000000000006400000000000000000000000046b24b781f9ac1344e594a313671e5cdb145964600000000000000000000000000000000000000000000000000000000002a1ca1c06000000000000000000000000000000000000000000000000000000000000000b0000000000000000000000000000000000000000000000000000ffffffffffff0000000000000000000000000000000000000000000000000000000067d2838100000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000415f6af7fc5b1c1b2eb2afab2fb93547ff030cda914093d7cca794f832c9b5256e78fa1a0396ccc8515db1fa9422c323afe6020e3387d42d5b06b8dad3c4f2ba481b00000000000000000000000000000000000000000000000000000000000000',
    //   to: dzapAddress,
    // })

    const tokenAddress = '0xc2132D05D31c914a87C6611C10748AEb04B58e8F'
    const token = await ethers.getContractAt(CONTRACTS.ERC20, tokenAddress)

    await swapFacet
      .connect(user)
      .swapErc20ToErc20(
        '0x3078313234382d3838323542312d313734313432353031373032370000000000',
        '0x12480616436DD6D555f88B8d94bB5156E28825B1',
        {
          callTo: '0x15392211222B46A0eA85a9A800830486D144848D',
          approveTo: '0x15392211222B46A0eA85a9A800830486D144848D',
          from: '0xc2132D05D31c914a87C6611C10748AEb04B58e8F',
          to: '0x3c499c542cEF5E3811e1192ce70d8cC03d5c3359',
          fromAmount: 100000n,
          minToAmount: 98977n,
          swapCallData:
            '0x73fc44570000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000018d0170006012480616436dd6d555f88b8d94bb5156e28825b1c2132d05d31c914a87c6611c10748aeb04b58e8f3c499c542cef5e3811e1192ce70d8cc03d5c3359e000d4e800d9f800dde800df3e3c5ab4e193e2b53218095123cd1ce9537f8c8019a82c07b36d3203c6a09b2005efacd7c4986f018562e2451e104087b5a23ae86492a2f87cb9532048bb648a1c0000e067cc0aa5e80182a1f800e80186a0060300de128acb08000000000000000000000000fffd8963efd1fc6a506488495d951d5263988d2500000000000000000000000000000000000000000000000000000000000000a00000000000000000000000000000000000000000000000000000000000000014c2132d05d31c914a87c6611c10748aeb04b58e8f0000000000000000000000000100e602004803008a0300de0400ea008031083a78e11b18e450fd139f9abea98cd53181b700070a00000000000000000000000000000000000000000000000000000000000003018f05000002000000e200e60000000040016a017b017b07002001b001b6000000000000000000000000000000000000000000',
          permit:
            '0x000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000000',
        }
      )
  })

  it('sig ', async () => {
    const jsonRpcUrl = getRpcUrl(CHAIN_IDS.ARBITRUM_MAINNET)
    console.log(jsonRpcUrl)
    await forkNetwork(jsonRpcUrl, 310358277)

    const user = await impersonate('0x2467eBaF6860532384639836cA40706Cd8F2Cd17')
    await updateBalance(user.address)

    // ------------------------------------

    const dZapAddress = '0xF708e11A7C94abdE8f6217B13e6fE39C8b9cC0a6'
    const { swapFacet } = await getAllDiamondFacets(dZapAddress, user)
    // const dzap = await ethers.getContractAt(
    //   CONTRACTS.BatchBridgeCallFacet,
    //   dzapAddress
    // )

    // ------------------------------------

    // const encodedData = ethers.utils.defaultAbiCoder.encode(
    //   ['bytes32', 'uint256'],
    //   [reciever, destChains]
    // )
    // const decodeData = ethers.utils.defaultAbiCoder.decode(
    //   ['bytes32', 'uint256'],
    //   '0x46b24b781f9ac1344e594a313671e5cdb1459646000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a'
    // )
    // console.log(decodeData[0])
    // console.log(decodeData[1].toString())

    {
      const permit2 = (await ethers.getContractAt(
        CONTRACTS.Permit2,
        '0x000000000022D473030F116dDEE9F6B43aC78BA3'
      )) as Permit2

      const userAddress = '0x2467eBaF6860532384639836cA40706Cd8F2Cd17'
      const tokenAddress = '0x6ab707Aca953eDAeFBc4fD23bA73294241490620'
      const spender = dZapAddress

      // uint48 oldNonce = allowance[msg.sender][tokenAddress][spender].nonce;
      // if (newNonce <= oldNonce) revert InvalidNonce();

      const token = (await ethers.getContractAt(
        CONTRACTS.ERC20,
        tokenAddress
      )) as ERC20

      const allowanceInfo = await permit2.allowance(
        userAddress,
        tokenAddress,
        spender
      )
      const balance = await token.balanceOf(userAddress)
      const allowance = await token.allowance(userAddress, permit2.address)
      console.log({
        allowanceInfo,
        nonce: allowanceInfo.nonce.toString(),
        balance: balance.toString(),
        allowance: allowance.toString(),
      })

      const data =
        '0x0000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000001200000000000000000000000000000000000000000000000000000000ba52d71a6000000000000000000000000000000000000000000000000000000000000000e0000000000000000000000000000000000000000000000000000ffffffffffff0000000000000000000000000000000000000000000000000000000067c946d600000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000411875d250db0f30dedb1ced26d3bfd5a3cf28025d1216255a4baa240073032c142be6b3124aa66700d1e9829f4cd87a258fd0984e748169d1e702ce2360b4f8ae1c00000000000000000000000000000000000000000000000000000000000000'

      const permit2Data = decodePermitData(data)

      const decodeData = ethers.utils.defaultAbiCoder.decode(
        ['uint160', 'uint48', 'uint48', 'uint256', 'bytes'],
        permit2Data[1]
      )

      // 1908727 + 1908726 = 3817453
      console.dir(
        {
          decodeData,
          allowanceAmount: decodeData[0].toString(),
          nonce: decodeData[1],
          expiration: decodeData[2],
          sigDeadline: decodeData[3].toString(),
          signature: decodeData[4],
        },
        { depth: null }
      )

      await permit2[
        'permit(address,((address,uint160,uint48,uint48),address,uint256),bytes)'
      ](
        // 50015860563
        // 50015859110
        userAddress,
        {
          details: {
            token: tokenAddress,
            amount: 50015859110,
            expiration: 281474976710655,
            nonce: 14,
          },
          spender: dZapAddress,
          sigDeadline: 1741244118,
        },
        '0x1875d250db0f30dedb1ced26d3bfd5a3cf28025d1216255a4baa240073032c142be6b3124aa66700d1e9829f4cd87a258fd0984e748169d1e702ce2360b4f8ae1c'
      )
    }

    // await swapFacet
    //   .connect(user)
    //   .swapErc20ToErc20(
    //     '0x3078323436372d4632436431372d313734303633393332373634350000000000',
    //     '0x2467eBaF6860532384639836cA40706Cd8F2Cd17',
    //     {
    //       callTo: '0x6352a56caadC4F1E25CD6c75970Fa768A3304e64',
    //       approveTo: '0x6352a56caadC4F1E25CD6c75970Fa768A3304e64',
    //       from: '0x6ab707Aca953eDAeFBc4fD23bA73294241490620',
    //       to: '0xFd086bC7CD5C481DCC9C85ebE478A1C0b69FCbb9',
    //       fromAmount: 50015859110n,
    //       minToAmount: 49990851180n,
    //       swapCallData:
    //         '0x90411a32000000000000000000000000f851d3d46237ec552a4c6e383a973115e781b1a5000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000001c00000000000000000000000006ab707aca953edaefbc4fd23ba73294241490620000000000000000000000000fd086bc7cd5c481dcc9c85ebe478a1c0b69fcbb9000000000000000000000000f851d3d46237ec552a4c6e383a973115e781b1a50000000000000000000000002467ebaf6860532384639836ca40706cd8f2cd170000000000000000000000000000000000000000000000000000000ba52d71a60000000000000000000000000000000000000000000000000000000b101e5f2a0000000000000000000000000000000000000000000000000000000ba52d71a60000000000000000000000000000000000000000000000000000000000000002000000000000000000000000b7cdc127881e88e4c47d5bdc63fd22a21fbff85f000000000000000000000000000000000000000000000000000000000000014000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000001a000000000000000000000000000000000000000000000000000000000000002c000000000000000000000000000000000000000000000000000000000000003e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000064eb5625d90000000000000000000000006ab707aca953edaefbc4fd23ba73294241490620000000000000000000000000794a61358d6845594f94dc1db02a252b5b4814ad0000000000000000000000000000000000000000000000000000000ba52d71a600000000000000000000000000000000000000000000000000000000000000000000000000000000794a61358d6845594f94dc1db02a252b5b4814ad000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000006469328dec000000000000000000000000fd086bc7cd5c481dcc9c85ebe478a1c0b69fcbb90000000000000000000000000000000000000000000000000000000ba52d71a6000000000000000000000000f851d3d46237ec552a4c6e383a973115e781b1a500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000648a6a1e85000000000000000000000000fd086bc7cd5c481dcc9c85ebe478a1c0b69fcbb9000000000000000000000000922164bbbd36acf9e854acbbf32facc949fcaeef0000000000000000000000000000000000000000000000000000000ba52d71a600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000001a49f865422000000000000000000000000fd086bc7cd5c481dcc9c85ebe478a1c0b69fcbbd1660f99000000000000000000000000fd086bc7cd5c481dcc9c85ebe478a1c0b69fcbb90000000000000000000000002467ebaf6860532384639836ca40706cd8f2cd1700000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
    //       permit:
    //         '0x0000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000001200000000000000000000000000000000000000000000000000000000ba52d71a6000000000000000000000000000000000000000000000000000000000000000e0000000000000000000000000000000000000000000000000000ffffffffffff0000000000000000000000000000000000000000000000000000000067c946d600000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000411875d250db0f30dedb1ced26d3bfd5a3cf28025d1216255a4baa240073032c142be6b3124aa66700d1e9829f4cd87a258fd0984e748169d1e702ce2360b4f8ae1c00000000000000000000000000000000000000000000000000000000000000',
    //     }
    // )

    // await user.sendTransaction({
    //   data: '0x6022b00b3078323436372d4632436431372d3137343036333933323736343500000000000000000000000000000000002467ebaf6860532384639836ca40706cd8f2cd1700000000000000000000000000000000000000000000000000000000000000600000000000000000000000006352a56caadc4f1e25cd6c75970fa768a3304e640000000000000000000000006352a56caadc4f1e25cd6c75970fa768a3304e640000000000000000000000006ab707aca953edaefbc4fd23ba73294241490620000000000000000000000000fd086bc7cd5c481dcc9c85ebe478a1c0b69fcbb90000000000000000000000000000000000000000000000000000000ba52d71a60000000000000000000000000000000000000000000000000000000ba3afda6c00000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000960000000000000000000000000000000000000000000000000000000000000082490411a32000000000000000000000000f851d3d46237ec552a4c6e383a973115e781b1a5000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000001c00000000000000000000000006ab707aca953edaefbc4fd23ba73294241490620000000000000000000000000fd086bc7cd5c481dcc9c85ebe478a1c0b69fcbb9000000000000000000000000f851d3d46237ec552a4c6e383a973115e781b1a50000000000000000000000002467ebaf6860532384639836ca40706cd8f2cd170000000000000000000000000000000000000000000000000000000ba52d71a60000000000000000000000000000000000000000000000000000000b101e5f2a0000000000000000000000000000000000000000000000000000000ba52d71a60000000000000000000000000000000000000000000000000000000000000002000000000000000000000000b7cdc127881e88e4c47d5bdc63fd22a21fbff85f000000000000000000000000000000000000000000000000000000000000014000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000001a000000000000000000000000000000000000000000000000000000000000002c000000000000000000000000000000000000000000000000000000000000003e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000064eb5625d90000000000000000000000006ab707aca953edaefbc4fd23ba73294241490620000000000000000000000000794a61358d6845594f94dc1db02a252b5b4814ad0000000000000000000000000000000000000000000000000000000ba52d71a600000000000000000000000000000000000000000000000000000000000000000000000000000000794a61358d6845594f94dc1db02a252b5b4814ad000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000006469328dec000000000000000000000000fd086bc7cd5c481dcc9c85ebe478a1c0b69fcbb90000000000000000000000000000000000000000000000000000000ba52d71a6000000000000000000000000f851d3d46237ec552a4c6e383a973115e781b1a500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000648a6a1e85000000000000000000000000fd086bc7cd5c481dcc9c85ebe478a1c0b69fcbb9000000000000000000000000922164bbbd36acf9e854acbbf32facc949fcaeef0000000000000000000000000000000000000000000000000000000ba52d71a600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000001a49f865422000000000000000000000000fd086bc7cd5c481dcc9c85ebe478a1c0b69fcbbd1660f99000000000000000000000000fd086bc7cd5c481dcc9c85ebe478a1c0b69fcbb90000000000000000000000002467ebaf6860532384639836ca40706cd8f2cdba52d71a6000000000000000000000000000000000000000000000000000000000000000e0000000000000000000000000000000000000000000000000000ffffffffffff0000000000000000000000000000000000000000000000000000000067c946d600000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000411875d250db0f30dedb1ced26d3bfd5a3cf28025d1216255a4baa240073032c142be6b3124aa66700d1e9829f4cd87a258fd0984e748169d1e702ce2360b4f8ae1c00000000000000000000000000000000000000000000000000000000000000',
    //   to: dZapAddress,
    // })
  })
})
