/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  CrossChainFacet,
  CrossChainFacetInterface,
} from "../../../../contracts/Bridge/Facets/CrossChainFacet";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes",
        name: "reason",
        type: "bytes",
      },
    ],
    name: "BridgeCallFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "CannotBridgeToSameNetwork",
    type: "error",
  },
  {
    inputs: [],
    name: "ContractCallNotAllowed",
    type: "error",
  },
  {
    inputs: [],
    name: "InformationMismatch",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "contractBalance",
        type: "uint256",
      },
    ],
    name: "InsufficientBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "IntegratorNotAllowed",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidContract",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidPermit",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidPermitData",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidReceiver",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidSwapDetails",
    type: "error",
  },
  {
    inputs: [],
    name: "NativeTransferFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "NoSwapFromZeroBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "NoTransferToNullAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "NotAContract",
    type: "error",
  },
  {
    inputs: [],
    name: "NullAddrIsNotAValidSpender",
    type: "error",
  },
  {
    inputs: [],
    name: "NullAddrIsNotAnERC20Token",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "leftOverAmount",
        type: "uint256",
      },
    ],
    name: "PartialSwap",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyError",
    type: "error",
  },
  {
    inputs: [],
    name: "SliceOutOfBounds",
    type: "error",
  },
  {
    inputs: [],
    name: "SliceOverflow",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "minAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "returnAmount",
        type: "uint256",
      },
    ],
    name: "SlippageTooHigh",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "reason",
        type: "bytes",
      },
    ],
    name: "SwapCallFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "UnAuthorized",
    type: "error",
  },
  {
    inputs: [],
    name: "UnAuthorizedCallToFunction",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAddress",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "transactionId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "integrator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "refundee",
        type: "address",
      },
      {
        components: [
          {
            internalType: "string",
            name: "bridge",
            type: "string",
          },
          {
            internalType: "address",
            name: "from",
            type: "address",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "minAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "destinationChainId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "hasSourceSwaps",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "hasDestinationCall",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct BridgeData",
        name: "bridgeData",
        type: "tuple",
      },
    ],
    name: "BridgeTransferStarted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "transactionId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "integrator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "refundee",
        type: "address",
      },
      {
        components: [
          {
            internalType: "string",
            name: "bridge",
            type: "string",
          },
          {
            internalType: "address",
            name: "from",
            type: "address",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "minAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "destinationChainId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "hasSourceSwaps",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "hasDestinationCall",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct BridgeData[]",
        name: "bridgeData",
        type: "tuple[]",
      },
    ],
    name: "MultiTokenBridgeTransferStarted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address[]",
        name: "routers",
        type: "address[]",
      },
      {
        indexed: false,
        internalType: "bytes4[]",
        name: "selectors",
        type: "bytes4[]",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "isAvailable",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "offset",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct CallToFunctionInfo[]",
        name: "info",
        type: "tuple[]",
      },
    ],
    name: "SelectorToInfoUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "transactionId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "integrator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "refundee",
        type: "address",
      },
      {
        components: [
          {
            internalType: "string",
            name: "bridge",
            type: "string",
          },
          {
            internalType: "address",
            name: "from",
            type: "address",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "minAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "destinationChainId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "hasSourceSwaps",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "hasDestinationCall",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct BridgeData[]",
        name: "bridgeData",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "address",
            name: "dex",
            type: "address",
          },
          {
            internalType: "address",
            name: "fromToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "toToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "fromAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "leftOverFromAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "returnToAmount",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct SwapInfo[]",
        name: "swapInfo",
        type: "tuple[]",
      },
    ],
    name: "SwapBridgeTransferStarted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "transactionId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "dex",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "fromAssetId",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "toAssetId",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fromAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "toAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "leftoverFromAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "SwappedTokens",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_transactionId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "_integrator",
        type: "address",
      },
      {
        internalType: "address",
        name: "_refundee",
        type: "address",
      },
      {
        components: [
          {
            internalType: "string",
            name: "bridge",
            type: "string",
          },
          {
            internalType: "address",
            name: "from",
            type: "address",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "minAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "destinationChainId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "hasSourceSwaps",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "hasDestinationCall",
            type: "bool",
          },
        ],
        internalType: "struct BridgeData",
        name: "_bridgeData",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "callTo",
            type: "address",
          },
          {
            internalType: "address",
            name: "approveTo",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "extraNative",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "permit",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
        ],
        internalType: "struct CrossChainData",
        name: "_genericData",
        type: "tuple",
      },
    ],
    name: "bridge",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_transactionId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "_integrator",
        type: "address",
      },
      {
        internalType: "address",
        name: "_refundee",
        type: "address",
      },
      {
        components: [
          {
            internalType: "string",
            name: "bridge",
            type: "string",
          },
          {
            internalType: "address",
            name: "from",
            type: "address",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "minAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "destinationChainId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "hasSourceSwaps",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "hasDestinationCall",
            type: "bool",
          },
        ],
        internalType: "struct BridgeData[]",
        name: "_bridgeData",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "address",
            name: "callTo",
            type: "address",
          },
          {
            internalType: "address",
            name: "approveTo",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "extraNative",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "permit",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
        ],
        internalType: "struct CrossChainData[]",
        name: "_genericData",
        type: "tuple[]",
      },
    ],
    name: "bridgeMultipleTokens",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_transactionId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "_integrator",
        type: "address",
      },
      {
        internalType: "address",
        name: "_refundee",
        type: "address",
      },
      {
        components: [
          {
            internalType: "string",
            name: "bridge",
            type: "string",
          },
          {
            internalType: "address",
            name: "from",
            type: "address",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "minAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "destinationChainId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "hasSourceSwaps",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "hasDestinationCall",
            type: "bool",
          },
        ],
        internalType: "struct BridgeData[]",
        name: "_bridgeData",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "address",
            name: "callTo",
            type: "address",
          },
          {
            internalType: "address",
            name: "approveTo",
            type: "address",
          },
          {
            internalType: "address",
            name: "from",
            type: "address",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "fromAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minToAmount",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "swapCallData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "permit",
            type: "bytes",
          },
        ],
        internalType: "struct SwapData[]",
        name: "_swapData",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "address",
            name: "callTo",
            type: "address",
          },
          {
            internalType: "address",
            name: "approveTo",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "extraNative",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "permit",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
        ],
        internalType: "struct CrossChainData[]",
        name: "_genericData",
        type: "tuple[]",
      },
    ],
    name: "swapAndBridge",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_routers",
        type: "address[]",
      },
      {
        internalType: "bytes4[]",
        name: "_selectors",
        type: "bytes4[]",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "isAvailable",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "offset",
            type: "uint256",
          },
        ],
        internalType: "struct CallToFunctionInfo[]",
        name: "_infos",
        type: "tuple[]",
      },
    ],
    name: "updateSelectorInfo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080806040523461001657612d11908161001c8239f35b600080fdfe6080604052600436101561001257600080fd5b6000803560e01c9081631303c5cb1461005a575080632bd19fde1461005557806330f5134314610050576339d25b771461004b57600080fd5b6106cf565b610497565b610374565b60031960a0368201126100d357602435610073816100d7565b60443591610080836100d7565b6001600160401b03926064358481116100cf576100a19036906004016102a4565b916084359485116100cf5760a09085360301126100cb576100c89360040192600435610e09565b80f35b8480fd5b8580fd5b5080fd5b6001600160a01b038116036100e857565b600080fd5b35906100f8826100d7565b565b634e487b7160e01b600052604160045260246000fd5b60a081019081106001600160401b0382111761012b57604052565b6100fa565b608081019081106001600160401b0382111761012b57604052565b6001600160401b03811161012b57604052565b604081019081106001600160401b0382111761012b57604052565b90601f801991011681019081106001600160401b0382111761012b57604052565b6040519061010082018281106001600160401b0382111761012b57604052565b6040519060c082018281106001600160401b0382111761012b57604052565b604051906100f882610110565b604051906100f882610130565b60405190606082018281106001600160401b0382111761012b57604052565b604051906100f88261015e565b6001600160401b03811161012b57601f01601f191660200190565b9291926102468261021f565b916102546040519384610179565b8294818452818301116100e8578281602093846000960137010152565b9080601f830112156100e85781602061028c9335910161023a565b90565b801515036100e857565b35906100f88261028f565b919091610100818403126100e8576102ba61019a565b928135916001600160401b0383116100e8576102dd60e09261033d948301610271565b85526102eb602082016100ed565b60208601526102fc604082016100ed565b604086015261030d606082016100ed565b60608601526080810135608086015260a081013560a086015261033260c08201610299565b60c086015201610299565b60e0830152565b9181601f840112156100e8578235916001600160401b0383116100e8576020808501948460051b0101116100e857565b346100e85760603660031901126100e8576001600160401b036004358181116100e8576103a5903690600401610344565b91906024358281116100e8576103bf903690600401610344565b90604435948486116100e857366023870112156100e85785600401359485116100e8573660248660061b880101116100e85760246103fe960193610c83565b005b6001600160401b03811161012b5760051b60200190565b9080601f830112156100e85781359061042f82610400565b9261043d6040519485610179565b828452602092838086019160051b830101928084116100e857848301915b84831061046b5750505050505090565b82356001600160401b0381116100e857869161048c848480948901016102a4565b81520192019161045b565b60a03660031901126100e8576024356004356104b2826100d7565b604435916104bf836100d7565b6001600160401b03916064358381116100e8576104e0903690600401610417565b926084359081116100e8576104f9903690600401610344565b90936001600080516020612cbc833981519152818154146106bd578190556001600160a01b0392838816156106ab5747963488039788116106a657908392918994519160005b898482106105d9578b818b7f0a3fbd7f5f4b5c2572cdbad5070d20258b366784b54ee268fb0f593f880d10c98b8d61058c8d61057c84998761225b565b6040519384933398169684611108565b0390a360009047818111156105d2576105a59250610f5f565b806105c2575b6103fe6000600080516020612cbc83398151915255565b6105cb91611c3e565b80806105ab565b50506105a5565b86975082846106918461068b6106999561067e6105fc848e9f9e9b9c9d9e61107d565b5161061161060b868a8a611091565b826116b7565b61067888610670610659602085019661063188516001600160a01b031690565b908c6106516106478d60808b0198895194611091565b6060810190610f6c565b939092611db4565b9b819b6106698e9b938651610f5f565b8552611091565b905190611561565b90611306565b516001600160a01b031690565b92610f5f565b908d8d6123c5565b019291908a95949361053f565b610f49565b60405163d92e233d60e01b8152600490fd5b6040516329f745a760e01b8152600490fd5b60c03660031901126100e8576106e66024356100d7565b6106f16044356100d7565b6001600160401b036064358181116100e857610711903690600401610417565b6084358281116100e857610729903690600401610344565b91909260a4359081116100e857610744903690600401610344565b600080516020612cbc83398151915260018154146106bd57600190556001600160a01b0360443516156106ab57479485348103116106a65783519160009361078b8761112d565b96855b85811061083f578989896107a660243560043561225b565b7f5b933538777d4d2b404c0e416ef67cf2aba4c5905535de12260c6035dd7a6ae6604051806107e933956001600160a01b036024351695604435600435856111e9565b0390a34760009134810382116000146108385761080a925034900390610f5f565b80610826576103fe6000600080516020612cbc83398151915255565b61083290604435611c3e565b806105ab565b505061080a565b610849818961107d565b5161085e610858838787611091565b8261177f565b60c081015115610a625761087e60606108788a868a6111c7565b01610b07565b6001600160a01b036108a961089d60208501516001600160a01b031690565b6001600160a01b031690565b911603610a50576108c060406108788a868a6111c7565b976108d76108cf82868a6111c7565b602435612179565b999099916108ef8b6108ea83898d6111c7565b6117c3565b906080860151808310610a295750926109d98f956109d3856109cd8f976109fe9a6109e5998f99610a039f9e9c889b828f6080015281610a08575b6109ae61094061093b8884886111c7565b610b07565b9461099e60806109718a61095a6040610878838a896111c7565b9661096b606061087884848a6111c7565b956111c7565b01359361098e61097f6101ba565b6001600160a01b039099168952565b6001600160a01b03166020880152565b6001600160a01b03166040860152565b6060840152608083015260a08201526109c7838361107d565b5261107d565b506111b8565b9e610f5f565b90602435600435612469565b6106786109f3848989611091565b608083015190611561565b6111b8565b61078e565b610a2482604435610a1f60406108788b878b6111c7565b611c51565b61092a565b604051633b5d56ed60e11b81526004810191909152602481019290925250604490fd5b0390fd5b6040516310ec1e7b60e11b8152600490fd5b906109fe826109e56020610a03950161068b6109d98a610aac8b610a8d86516001600160a01b031690565b610aa16106478c60808c0196875195611091565b929091602435611db4565b939093948592610abd868251610f5f565b9052516001600160a01b031690565b634e487b7160e01b600052603260045260246000fd5b9190811015610af25760061b0190565b610acc565b9190811015610af25760051b0190565b3561028c816100d7565b6001600160a01b03166000527fce396784280ca8c28b49c2b35d3831ae85d835e669ecffd49f1b7f40af160fdb602052604060002090565b6001600160e01b03198116036100e857565b3561028c81610b49565b9060206001918035610b768161028f565b60ff8019865416911515161784550135910155565b9190808252602080920192916000905b828210610ba9575050505090565b909192936001908535610bbb8161028f565b1515815285830135838201526040908101950193920190610b9b565b9196959390969492948060608401606085525260808301979060005b818110610c5857505050602087838299038285015282815201949060005b818110610c2e5750505061028c9495506040818503910152610b8b565b90919588806001928935610c4181610b49565b6001600160e01b0319168152019701929101610c11565b9091986001906001600160a01b038b35610c71816100d7565b16815260209081019a01929101610bf3565b92909493946001600160a01b037fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c132054163303610da5575b60005b6001600160401b039081811683811015610d685790610d6187610d5c84610d45610d40610d388f8f858d610cfa60019d61093b94610d0096610ae2565b99610af7565b6001600160a01b03166000527fb3e4a49ab08524dc6db84ad11f9bc8ccc24b8e40e08ccbe0b1e2807aa1909a2c602052604060002090565b928b8d610af7565b610b5b565b63ffffffff60e01b16600052602052604060002090565b610b65565b0116610cbd565b5050509390947f8621ad378521883daa8108c9f45a36f29f3afaf85b0a464009b9b206aa7126ec95610da09360405196879687610bd7565b0390a1565b63ffffffff60e01b600035166000527f075a38625ef0b246753147848d592c62b62122f46a8fd0865dd31aa776ea07a2602052604060002033600052602052600160ff6040600020541615150315610cba5760405163be24598360e01b8152600490fd5b90919392600080516020612cbc83398151915260018154146106bd57600190556001600160a01b0393848616156106ab5747943486039586116106a657610e5082846116b7565b602083019181835116610e7a6080860191825190610e716060860186610f6c565b9290918b611db4565b9490928251928484039384116106a65783610ea1928795610e9b9352611561565b87611306565b610eab888861225b565b5116938382039182116106a657610eea8994610efa937fd97c9cfcfbf7c112cea3ee823fe81993aefdf65ceb21be0782752fc2c6fba5b6978a8a612469565b6040519384933398169684611058565b0390a36000904781811115610f4257610f139250610f5f565b80610f32575b50506100f86000600080516020612cbc83398151915255565b610f3b91611c3e565b3880610f19565b5050610f13565b634e487b7160e01b600052601160045260246000fd5b919082039182116106a657565b903590601e19813603018212156100e857018035906001600160401b0382116100e8576020019181360383136100e857565b60005b838110610fb15750506000910152565b8181015183820152602001610fa1565b90602091610fda81518092818552858086019101610f9e565b601f01601f1916010190565b9061028c9060e0806110018551610100808652850190610fc1565b946001600160a01b0380602083015116602086015280604083015116604086015260608201511660608501526080810151608085015260a081015160a085015260c0810151151560c0850152015191019015159052565b6001600160a01b0361028c949360609383521660208201528160408201520190610fe6565b8051821015610af25760209160051b010190565b9190811015610af25760051b81013590609e19813603018212156100e8570190565b90815180825260208092019182818360051b85019501936000915b8483106110de5750505050505090565b90919293949584806110f883856001950387528a51610fe6565b98019301930191949392906110ce565b6001600160a01b0361028c9493606093835216602082015281604082015201906110b3565b9061113782610400565b604061114581519283610179565b8382528193611156601f1991610400565b019060005b8281106111685750505050565b81519060c08201918083106001600160401b0384111761012b57602092845260008152826000818301526000858301526000606083015260006080830152600060a083015282870101520161115b565b60001981146106a65760010190565b9190811015610af25760051b8101359060fe19813603018212156100e8570190565b919082526001600160a01b03908160209116818401526080926112166040958587840152858301906110b3565b92606091828186039101528280885195868152019701946000925b85841061124357505050505050505090565b8651805184168a528086015184168a8701528089015184168a8a0152808201518a830152808301518a84015260a090810151908a015260c09098019795840195600190930192611231565b90602082018092116106a657565b90601f82018092116106a657565b60040190816004116106a657565b919082018092116106a657565b3d156112f0573d906112d68261021f565b916112e46040519384610179565b82523d6000602084013e565b606090565b90602061028c928181520190610fc1565b6000918291829061132160208201516001600160a01b031690565b6001600160a01b03811615851461139757506080915001515b608061135c61135084516001600160a01b031690565b926040850151906112b8565b92015191602083519301915af16113716112c5565b901561137a5750565b6040516343373c4f60e01b8152908190610a4c90600483016112f5565b6113ba9160806113b160208701516001600160a01b031690565b91015191611934565b61133a565b604051906113cc82610110565b606060808360008152600060208201526000604082015282808201520152565b906004116100e85790600490565b9092919283116100e8579190565b909392938483116100e85784116100e8578101920390565b6001600160e01b0319903581811693926004811061143d57505050565b60040360031b82901b16169150565b90604051604081018181106001600160401b0382111761012b5760405260206001829460ff815416151584520154910152565b919060a0838203126100e8576040519061149882610110565b819380356114a5816100d7565b835260208101356114b5816100d7565b6020840152604081013560408401526060810135916001600160401b03928381116100e857816114e6918401610271565b606085015260808201359283116100e8576080926115049201610271565b910152565b908092918237016000815290565b94936100f89392919281604051978894611549876020988994858a013787019183830160008152815194859201610f9e565b01918583013701600083820152038085520183610179565b6115696113bf565b50611576610d0082610b07565b6115a261159d6080840192610d456115976115918688610f6c565b906113ec565b90611420565b61144c565b8051156116a557602001805190929015611696579061163860408361167b6116506116326115d261168998610b07565b996116246116486116426115e860208901610b07565b9c6115f660608a018a610f6c565b9b909c61160e611606828d610f6c565b8551916113fa565b9890978d51978891602083019190602083019252565b03601f198101885287610179565b8a610f6c565b928391925161128e565b91611408565b939092611517565b9661166b61165c6101d9565b6001600160a01b03909a168a52565b6001600160a01b03166020890152565b01356040860152369161023a565b6060830152608082015290565b91505061028c9150369061147f565b60405163364ebe9560e21b8152600490fd5b906116dc6116cf60608401516001600160a01b031690565b6001600160a01b03161590565b61176d5760808201511561175b5760a082015146146117495761170a61170461170e92610b07565b3b151590565b1590565b6117375760c08101516117255760e0015161172557565b604051631437241760e21b8152600490fd5b6040516309ee12d560e01b8152600490fd5b604051634ac09ad360e01b8152600490fd5b60405163162908e360e11b8152600490fd5b604051631e4ec46b60e01b8152600490fd5b6117966116cf60608301516001600160a01b031690565b61176d5760808101511561175b5760a0015146146117495761170a6117046117bd92610b07565b61173757565b906001600160a01b0360408301356117da816100d7565b1615801561189c575b8061184c575b80611813575b15611801576117fd916129d4565b9091565b604051632514e60160e21b8152600490fd5b506118478235611822816100d7565b61184161183c61183560c0870187610f6c565b369161023a565b612202565b906118b7565b6117ef565b5060ff611895833561185d816100d7565b6001600160a01b03166000527f1320e8dec30758ce5a03ca6f87d88a48e797de017e006b5d757ee663c6643136602052604060002090565b54166117e9565b5060ff6118b0602084013561185d816100d7565b54166117e3565b60ff9160016118fb611914936001600160a01b03166000527f1320e8dec30758ce5a03ca6f87d88a48e797de017e006b5d757ee663c6643136602052604060002090565b019063ffffffff60e01b16600052602052604060002090565b541690565b908160209103126100e8575190565b6040513d6000823e3d90fd5b906001600160a01b03809216918215611992578116156119e957604051636eb1769f60e11b81523060048201526001600160a01b038216602482015292602084604481865afa9384156119e4576000946119b4575b50808410611998575b50505050565b6119ab936119a591610f5f565b916119fb565b38808080611992565b6119d691945060203d81116119dd575b6119ce8183610179565b810190611919565b9238611989565b503d6119c4565b611928565b6040516363ba9bff60e01b8152600490fd5b604051636eb1769f60e11b81523060048201526001600160a01b03831660248201529192602083806044810103816001600160a01b0386165afa9283156119e457600093611a97575b5082018092116106a65760405163095ea7b360e01b60208201526001600160a01b03909316602484015260448301919091526100f89190611a9282606481015b03601f198101845283610179565b611ab7565b611ab091935060203d81116119dd576119ce8183610179565b9138611a44565b604051611b15916001600160a01b0316611ad08261015e565b6000806020958685527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656487860152868151910182855af1611b0f6112c5565b91611ba5565b8051828115918215611b85575b5050905015611b2e5750565b6084906040519062461bcd60e51b82526004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152fd5b83809293500103126100e857810151611b9d8161028f565b808238611b22565b91929015611c075750815115611bb9575090565b3b15611bc25790565b60405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b825190915015611c1a5750805190602001fd5b60405162461bcd60e51b815260206004820152908190610a4c906024830190610fc1565b9080611c48575050565b6100f891611d07565b9291909281611c61575b50509050565b6001600160a01b03169283611c8357611c7b929350611d07565b803880611c5b565b6040516370a0823160e01b815230600482015293602085602481845afa9485156119e457600095611ce7575b50848311611cc757611cc2939450611d7b565b611c7b565b60405163cf47918160e01b81526004810184905260248101869052604490fd5b611d0091955060203d81116119dd576119ce8183610179565b9338611caf565b6001600160a01b03811615611d6957478211611d4857600080809381935af1611d2e6112c5565b5015611d3657565b604051633d2cec6f60e21b8152600490fd5b5060405163cf47918160e01b81526004810191909152476024820152604490fd5b6040516321f7434560e01b8152600490fd5b60405163a9059cbb60e01b60208201526001600160a01b03909216602483015260448201929092526100f891611a928260648101611a84565b9391929060ff611dc386610b11565b541615611e15576001600160a01b038116611dee575b505050611de86117fd926125a6565b9061250d565b83949192941561175b576117fd94611de89385611e0e9330903390611e47565b9238611dd9565b604051630f52085360e31b8152600490fd5b60031115611e3157565b634e487b7160e01b600052602160045260246000fd5b91929390948101906040818303126100e85780359160038310156100e85760208201356001600160401b0381116100e857611e829201610271565b90611e8c81611e27565b80611ea6575090611ea16100f8959282612923565b612031565b80611eb5600192959395611e27565b03611ec557506100f8935061280d565b91906001600160a01b0390817f5ad1013e2f44a8f3f90c76a394005c75f0c0d03ea554f1c24aa305e63ea1d8e854169280519081611f6c575b5050823b156100e857604051631b63c28b60e11b81526001600160a01b03968716600482015293861660248501529316841660448301529190921660648301526000908290608490829084905af180156119e457611f595750565b80611f666100f89261014b565b80612639565b611f8481602080611fc695611fb795010191016126a6565b959291611fa8611f96969295966101e6565b6001600160a01b038a1681529661098e565b65ffffffffffff166040860152565b65ffffffffffff166060840152565b611fce6101f3565b9182523060208301526040820152843b156100e8576040516302b67b5760e41b81529160009183918291612007919033600485016126fc565b038183885af180156119e45761201e575b80611efe565b80611f6661202b9261014b565b38612018565b916001600160a01b0380931692831561212857811615611d69576040516370a0823160e01b8082526001600160a01b03831660048301526020949092908583602481845afa9384156119e4578787946000966120ff575b5061209990846120bd97988561213a565b6040518095819482938352600483019190916001600160a01b036020820193169052565b03915afa9081156119e4576120db936000926120e2575b5050610f5f565b0361175b57565b6120f89250803d106119dd576119ce8183610179565b38806120d4565b6120bd9650908461211f61209993883d8a116119dd576119ce8183610179565b97505090612088565b60405163346fafc360e21b8152600490fd5b90926100f893604051936323b872dd60e01b60208601526001600160a01b038092166024860152166044840152606483015260648252611a9282610110565b9060ff61218583610b11565b541615611e1557604081016001600160a01b0381356121a3816100d7565b166121c0575b5060806121b86117fd936125a6565b91013561250d565b6080820135801561175b576117fd936121fa6121b8926121e1608095610b07565b6121ee60e0880188610f6c565b92909130903390611e47565b9350506121a9565b805115612210576020015190565b50600090565b9060405161222381610130565b6060600382948054845260018101546020850152600281015460408501520154910152565b818102929181159184041417156106a657565b61226482610b11565b61227261170a825460ff1690565b611e155761228f6001612294920160008052602052604060002090565b612216565b91602083015160009381612344575b507f5a5e26d1ba5745deaa746a9beb2d7bfa1e6b4e772d13d55a574f5c1e162d39de916123006122e0866001600160a01b03948161230557610f5f565b604080516000815260208101989098528701529116939081906060820190565b0390a3565b61233f8261233a7fce396784280ca8c28b49c2b35d3831ae85d835e669ecffd49f1b7f40af160fde546001600160a01b031690565b611d07565b610f5f565b6001600160a01b03919450916123006122e061239161238860607f5a5e26d1ba5745deaa746a9beb2d7bfa1e6b4e772d13d55a574f5c1e162d39de97015189612248565b620f4240900490565b8761239d82809a610f5f565b6123ad575b9450505050916122a3565b6123c06123ba8383610f5f565b86611d07565b6123a2565b92916080917fdbff15bf7c10a4fcd5d083f8297e5e7653625aab6c4c8548c23686f8118a13259380612459575b8661241f575b60405196600188526001600160a01b038094166020890152604088015260608701521693a3565b612454876001600160a01b037fce396784280ca8c28b49c2b35d3831ae85d835e669ecffd49f1b7f40af160fde541685611c51565b6123f8565b612464818385611c51565b6123f2565b92916080917fdbff15bf7c10a4fcd5d083f8297e5e7653625aab6c4c8548c23686f8118a132593806124fd575b866124c3575b60405196600088526001600160a01b038094166020890152604088015260608701521693a3565b6124f8876001600160a01b037fce396784280ca8c28b49c2b35d3831ae85d835e669ecffd49f1b7f40af160fde541685611c51565b61249c565b612508818385611c51565b612496565b90916000926000928151908161252257505050565b604092955061028c939450906125379161253c565b930151835b906000198183098183029182808310920391808303921461259a57620f424090828211156100e8577fde8f6cefed634549b62c77574f722e1ac57e23f24d8fd5cb790fb65668c26139940990828211900360fa1b910360061c170290565b5050620f424091500490565b60036001600160a01b03916060604093849283516125c381610130565b6000938185809352826020820152828782015201521681527fce396784280ca8c28b49c2b35d3831ae85d835e669ecffd49f1b7f40af160fdb6020526001828220018180526020522082519261261884610130565b81548452600182015460208501526002820154908401520154606082015290565b60009103126100e857565b519065ffffffffffff821682036100e857565b909291926126648161021f565b916126726040519384610179565b8294828452828201116100e85760206100f8930190610f9e565b9080601f830112156100e857815161028c92602001612657565b91909160a0818403126100e85780516126be816100d7565b926126cb60208301612644565b926126d860408401612644565b9260608101519260808201516001600160401b0381116100e85761028c920161268c565b9061028c93926040916001600160a01b03809116845281518181511660208601528160208201511684860152606065ffffffffffff9182868201511682880152015116608085015260208201511660a0840152015160c0820152610100908160e08201520190610fc1565b916060838303126100e85782519260208101519260408201516001600160401b0381116100e85761028c920161268c565b91926127f661028c959460406001600160a01b03946127cb878251602080916001600160a01b0381511684520151910152565b60208181015188840152910151606087015281516001600160a01b03166080870152015160a0850152565b1660c0820152610100908160e08201520190610fc1565b7f5ad1013e2f44a8f3f90c76a394005c75f0c0d03ea554f1c24aa305e63ea1d8e8549092916001600160a01b03916128519083169160208082518301019101612767565b939091921691612871612862610212565b6001600160a01b039097168752565b84602087015261287f6101f3565b95865260208601526040850152612894610212565b308152926020840152803b156100e8576128cb93600080946040519687958694859363187945bd60e11b8552339160048601612798565b03925af180156119e457611f595750565b906004916323f2ebc360e21b81526128fd8251809360208685019101610f9e565b010190565b9060049163d505accf60e01b81526128fd8251809360208685019101610f9e565b9080518061293057505050565b60009060e0810361298d57505060009182918260405161296681612958602082019586612902565b03601f198101835282610179565b51925af16129726112c5565b505b1561297b57565b60405163ddafbaef60e01b8152600490fd5b909290610100036129c2578291826040516129b0816129586020820195866128dc565b51925af16129bc6112c5565b50612974565b604051636abdccad60e11b8152600490fd5b906129e461170a61170484610b07565b612b35576080820135908115612b23576129fd91610f5f565b6040820190612a13612a0e83610b07565b612b47565b9160608401612a24612a0e82610b07565b906000612a336116cf85610b07565b15612afb5750600080855b612a4789610b07565b90612a5560c08b018b610f6c565b9190612a6660405180948193611509565b03925af1612a726112c5565b9015612ad4575060a09161233f612a0e612a8b93610b07565b940135808510612ab35750612ab0929161068b612a0e612aaa93610b07565b90610f5f565b91565b604051633b5d56ed60e11b8152600481019190915260248101859052604490fd5b80612ae1610a4c92612bda565b5060405163729a0b5b60e01b8152918291600483016112f5565b60008091612b1e87612b0c88610b07565b612b1860208d01610b07565b90611934565b612a3e565b60405163391b81e760e21b8152600490fd5b6040516303777f6960e51b8152600490fd5b6000906001600160a01b031680612b5e5750504790565b6020602491604051928380926370a0823160e01b82523060048301525afa9182156119e45791612b8c575090565b61028c915060203d81116119dd576119ce8183610179565b6020818303126100e8578051906001600160401b0382116100e857019080601f830112156100e857815161028c92602001612657565b9081519160448310612cb75760031990838201908482116106a65781612bff8161129c565b10612ca5578051612c0f836112aa565b11612c935781612c3f57505050905061028c60405160008152602081016040525b60208082518301019101612ba4565b9390600460405193601f8316801560051b9182828801019586010197010101945b808310612c8057508252601f01601f191660405290915061028c90612c30565b8551835260209586019590920191612c60565b604051633b99b53d60e01b8152600490fd5b6040516323d5783d60e11b8152600490fd5b915056fe915a8417f17f6c12745609d69d1f941b3ec085ae09c933faba719ad633433425a2646970667358221220136163f16bdd19408e593d3f2a6ce8e4fa59555b1f1a678211fd91f4e1c61b4c64736f6c63430008130033";

type CrossChainFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CrossChainFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CrossChainFacet__factory extends ContractFactory {
  constructor(...args: CrossChainFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CrossChainFacet> {
    return super.deploy(overrides || {}) as Promise<CrossChainFacet>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): CrossChainFacet {
    return super.attach(address) as CrossChainFacet;
  }
  override connect(signer: Signer): CrossChainFacet__factory {
    return super.connect(signer) as CrossChainFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CrossChainFacetInterface {
    return new utils.Interface(_abi) as CrossChainFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CrossChainFacet {
    return new Contract(address, _abi, signerOrProvider) as CrossChainFacet;
  }
}
