/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  CrossChainFacet,
  CrossChainFacetInterface,
} from "../../../../contracts/Bridge/Facets/CrossChainFacet";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes",
        name: "reason",
        type: "bytes",
      },
    ],
    name: "BridgeCallFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "CannotBridgeToSameNetwork",
    type: "error",
  },
  {
    inputs: [],
    name: "ContractCallNotAllowed",
    type: "error",
  },
  {
    inputs: [],
    name: "InformationMismatch",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "contractBalance",
        type: "uint256",
      },
    ],
    name: "InsufficientBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "IntegratorNotAllowed",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidContract",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidPermit",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidPermitData",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidReceiver",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidSwapDetails",
    type: "error",
  },
  {
    inputs: [],
    name: "NativeTransferFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "NoSwapFromZeroBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "NoTransferToNullAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "NotAContract",
    type: "error",
  },
  {
    inputs: [],
    name: "NullAddrIsNotAValidSpender",
    type: "error",
  },
  {
    inputs: [],
    name: "NullAddrIsNotAnERC20Token",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "leftOverAmount",
        type: "uint256",
      },
    ],
    name: "PartialSwap",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyError",
    type: "error",
  },
  {
    inputs: [],
    name: "SliceOutOfBounds",
    type: "error",
  },
  {
    inputs: [],
    name: "SliceOverflow",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "minAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "returnAmount",
        type: "uint256",
      },
    ],
    name: "SlippageTooHigh",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "reason",
        type: "bytes",
      },
    ],
    name: "SwapCallFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "UnAuthorized",
    type: "error",
  },
  {
    inputs: [],
    name: "UnAuthorizedCallToFunction",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAddress",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "transactionId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "integrator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "refundee",
        type: "address",
      },
      {
        components: [
          {
            internalType: "string",
            name: "bridge",
            type: "string",
          },
          {
            internalType: "address",
            name: "from",
            type: "address",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "minAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "destinationChainId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "hasSourceSwaps",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "hasDestinationCall",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct BridgeData",
        name: "bridgeData",
        type: "tuple",
      },
    ],
    name: "BridgeTransferStarted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "transactionId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "integrator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "refundee",
        type: "address",
      },
      {
        components: [
          {
            internalType: "string",
            name: "bridge",
            type: "string",
          },
          {
            internalType: "address",
            name: "from",
            type: "address",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "minAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "destinationChainId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "hasSourceSwaps",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "hasDestinationCall",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct BridgeData[]",
        name: "bridgeData",
        type: "tuple[]",
      },
    ],
    name: "MultiTokenBridgeTransferStarted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address[]",
        name: "routers",
        type: "address[]",
      },
      {
        indexed: false,
        internalType: "bytes4[]",
        name: "selectors",
        type: "bytes4[]",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "isAvailable",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "offset",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct CallToFunctionInfo[]",
        name: "info",
        type: "tuple[]",
      },
    ],
    name: "SelectorToInfoUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "transactionId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "integrator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "refundee",
        type: "address",
      },
      {
        components: [
          {
            internalType: "string",
            name: "bridge",
            type: "string",
          },
          {
            internalType: "address",
            name: "from",
            type: "address",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "minAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "destinationChainId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "hasSourceSwaps",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "hasDestinationCall",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct BridgeData[]",
        name: "bridgeData",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "address",
            name: "dex",
            type: "address",
          },
          {
            internalType: "address",
            name: "fromToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "toToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "fromAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "leftOverFromAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "returnToAmount",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct SwapInfo[]",
        name: "swapInfo",
        type: "tuple[]",
      },
    ],
    name: "SwapBridgeTransferStarted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "transactionId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "dex",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "fromAssetId",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "toAssetId",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fromAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "toAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "leftoverFromAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "SwappedTokens",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_transactionId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "_integrator",
        type: "address",
      },
      {
        internalType: "address",
        name: "_refundee",
        type: "address",
      },
      {
        components: [
          {
            internalType: "string",
            name: "bridge",
            type: "string",
          },
          {
            internalType: "address",
            name: "from",
            type: "address",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "minAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "destinationChainId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "hasSourceSwaps",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "hasDestinationCall",
            type: "bool",
          },
        ],
        internalType: "struct BridgeData",
        name: "_bridgeData",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "callTo",
            type: "address",
          },
          {
            internalType: "address",
            name: "approveTo",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "extraNative",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "permit",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
        ],
        internalType: "struct CrossChainData",
        name: "_genericData",
        type: "tuple",
      },
    ],
    name: "bridge",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_transactionId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "_integrator",
        type: "address",
      },
      {
        internalType: "address",
        name: "_refundee",
        type: "address",
      },
      {
        components: [
          {
            internalType: "string",
            name: "bridge",
            type: "string",
          },
          {
            internalType: "address",
            name: "from",
            type: "address",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "minAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "destinationChainId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "hasSourceSwaps",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "hasDestinationCall",
            type: "bool",
          },
        ],
        internalType: "struct BridgeData[]",
        name: "_bridgeData",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "address",
            name: "callTo",
            type: "address",
          },
          {
            internalType: "address",
            name: "approveTo",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "extraNative",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "permit",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
        ],
        internalType: "struct CrossChainData[]",
        name: "_genericData",
        type: "tuple[]",
      },
    ],
    name: "bridgeMultipleTokens",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_router",
        type: "address",
      },
      {
        internalType: "bytes4",
        name: "_selector",
        type: "bytes4",
      },
    ],
    name: "getSelectorInfo",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "isAvailable",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "offset",
            type: "uint256",
          },
        ],
        internalType: "struct CallToFunctionInfo",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_transactionId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "_integrator",
        type: "address",
      },
      {
        internalType: "address",
        name: "_refundee",
        type: "address",
      },
      {
        components: [
          {
            internalType: "string",
            name: "bridge",
            type: "string",
          },
          {
            internalType: "address",
            name: "from",
            type: "address",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "minAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "destinationChainId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "hasSourceSwaps",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "hasDestinationCall",
            type: "bool",
          },
        ],
        internalType: "struct BridgeData[]",
        name: "_bridgeData",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "address",
            name: "callTo",
            type: "address",
          },
          {
            internalType: "address",
            name: "approveTo",
            type: "address",
          },
          {
            internalType: "address",
            name: "from",
            type: "address",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "fromAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minToAmount",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "swapCallData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "permit",
            type: "bytes",
          },
        ],
        internalType: "struct SwapData[]",
        name: "_swapData",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "address",
            name: "callTo",
            type: "address",
          },
          {
            internalType: "address",
            name: "approveTo",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "extraNative",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "permit",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
        ],
        internalType: "struct CrossChainData[]",
        name: "_genericData",
        type: "tuple[]",
      },
    ],
    name: "swapAndBridge",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_routers",
        type: "address[]",
      },
      {
        internalType: "bytes4[]",
        name: "_selectors",
        type: "bytes4[]",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "isAvailable",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "offset",
            type: "uint256",
          },
        ],
        internalType: "struct CallToFunctionInfo[]",
        name: "_infos",
        type: "tuple[]",
      },
    ],
    name: "updateSelectorInfo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080806040523461001657612dd5908161001c8239f35b600080fdfe6080604052600436101561001257600080fd5b6000803560e01c9081631303c5cb1461006a575080632bd19fde1461006557806330f513431461006057806339d25b771461005b5763af5839851461005657600080fd5b610aee565b6106df565b6104a7565b610384565b60031960a0368201126100e357602435610083816100e7565b60443591610090836100e7565b6001600160401b03926064358481116100df576100b19036906004016102b4565b916084359485116100df5760a09085360301126100db576100d89360040192600435610f00565b80f35b8480fd5b8580fd5b5080fd5b6001600160a01b038116036100f857565b600080fd5b3590610108826100e7565b565b634e487b7160e01b600052604160045260246000fd5b604081019081106001600160401b0382111761013b57604052565b61010a565b60a081019081106001600160401b0382111761013b57604052565b608081019081106001600160401b0382111761013b57604052565b6001600160401b03811161013b57604052565b90601f801991011681019081106001600160401b0382111761013b57604052565b6040519061010082018281106001600160401b0382111761013b57604052565b6040519060c082018281106001600160401b0382111761013b57604052565b6040519061010882610140565b604051906101088261015b565b60405190606082018281106001600160401b0382111761013b57604052565b6040519061010882610120565b6001600160401b03811161013b57601f01601f191660200190565b9291926102568261022f565b916102646040519384610189565b8294818452818301116100f8578281602093846000960137010152565b9080601f830112156100f85781602061029c9335910161024a565b90565b801515036100f857565b35906101088261029f565b919091610100818403126100f8576102ca6101aa565b928135916001600160401b0383116100f8576102ed60e09261034d948301610281565b85526102fb602082016100fd565b602086015261030c604082016100fd565b604086015261031d606082016100fd565b60608601526080810135608086015260a081013560a086015261034260c082016102a9565b60c0860152016102a9565b60e0830152565b9181601f840112156100f8578235916001600160401b0383116100f8576020808501948460051b0101116100f857565b346100f85760603660031901126100f8576001600160401b036004358181116100f8576103b5903690600401610354565b91906024358281116100f8576103cf903690600401610354565b90604435948486116100f857366023870112156100f85785600401359485116100f8573660248660061b880101116100f857602461040e960193610d57565b005b6001600160401b03811161013b5760051b60200190565b9080601f830112156100f85781359061043f82610410565b9261044d6040519485610189565b828452602092838086019160051b830101928084116100f857848301915b84831061047b5750505050505090565b82356001600160401b0381116100f857869161049c848480948901016102b4565b81520192019161046b565b60a03660031901126100f8576024356004356104c2826100e7565b604435916104cf836100e7565b6001600160401b03916064358381116100f8576104f0903690600401610427565b926084359081116100f857610509903690600401610354565b90936001600080516020612d80833981519152818154146106cd578190556001600160a01b0392838816156106bb5747963488039788116106b657908392918994519160005b898482106105e9578b818b7f0a3fbd7f5f4b5c2572cdbad5070d20258b366784b54ee268fb0f593f880d10c98b8d61059c8d61058c84998761231f565b60405193849333981696846111ff565b0390a360009047818111156105e2576105b59250611056565b806105d2575b61040e6000600080516020612d8083398151915255565b6105db91611d02565b80806105bb565b50506105b5565b86975082846106a18461069b6106a99561068e61060c848e9f9e9b9c9d9e611174565b5161062161061b868a8a611188565b8261177b565b61068888610680610669602085019661064188516001600160a01b031690565b908c6106616106578d60808b0198895194611188565b6060810190611063565b939092611e78565b9b819b6106798e9b938651611056565b8552611188565b905190611625565b906113fd565b516001600160a01b031690565b92611056565b908d8d612489565b019291908a95949361054f565b611040565b60405163d92e233d60e01b8152600490fd5b6040516329f745a760e01b8152600490fd5b60c03660031901126100f8576106f66024356100e7565b6107016044356100e7565b6001600160401b036064358181116100f857610721903690600401610427565b6084358281116100f857610739903690600401610354565b91909260a4359081116100f857610754903690600401610354565b600080516020612d8083398151915260018154146106cd57600190556001600160a01b0360443516156106bb57479485348103116106b65783519160009361079b87611224565b96855b85811061084f578989896107b660243560043561231f565b7f5b933538777d4d2b404c0e416ef67cf2aba4c5905535de12260c6035dd7a6ae6604051806107f933956001600160a01b036024351695604435600435856112e0565b0390a34760009134810382116000146108485761081a925034900390611056565b806108365761040e6000600080516020612d8083398151915255565b61084290604435611d02565b806105bb565b505061081a565b6108598189611174565b5161086e610868838787611188565b82611843565b60c081015115610a725761088e60606108888a868a6112be565b01610bed565b6001600160a01b036108b96108ad60208501516001600160a01b031690565b6001600160a01b031690565b911603610a60576108d060406108888a868a6112be565b976108e76108df82868a6112be565b60243561223d565b999099916108ff8b6108fa83898d6112be565b611887565b906080860151808310610a395750926109e98f956109e3856109dd8f97610a0e9a6109f5998f99610a139f9e9c889b828f6080015281610a18575b6109be61095061094b8884886112be565b610bed565b946109ae60806109818a61096a6040610888838a896112be565b9661097b606061088884848a6112be565b956112be565b01359361099e61098f6101ca565b6001600160a01b039099168952565b6001600160a01b03166020880152565b6001600160a01b03166040860152565b6060840152608083015260a08201526109d78383611174565b52611174565b506112af565b9e611056565b9060243560043561252d565b610688610a03848989611188565b608083015190611625565b6112af565b61079e565b610a3482604435610a2f60406108888b878b6112be565b611d15565b61093a565b604051633b5d56ed60e11b81526004810191909152602481019290925250604490fd5b0390fd5b6040516310ec1e7b60e11b8152600490fd5b90610a0e826109f56020610a13950161069b6109e98a610abc8b610a9d86516001600160a01b031690565b610ab16106578c60808c0196875195611188565b929091602435611e78565b939093948592610acd868251611056565b9052516001600160a01b031690565b6001600160e01b03198116036100f857565b346100f85760403660031901126100f8576040610b84600435610b10816100e7565b610b6c60243591610b2083610adc565b600060208651610b2f81610120565b82815201526001600160a01b03166000527ff2509122aff6f9c4e0746a057c63717c29bd65928dec2a594e638e7e04887340602052604060002090565b9063ffffffff60e01b16600052602052604060002090565b8151610b8f81610120565b6020600160ff845416151593848452015491019081528251918252516020820152f35b634e487b7160e01b600052603260045260246000fd5b9190811015610bd85760061b0190565b610bb2565b9190811015610bd85760051b0190565b3561029c816100e7565b6001600160a01b03166000527fadf38b383de83e03163f4bb9c9eeeeff060c277df907ebce1fd27038d38e2e08602052604060002090565b3561029c81610adc565b9060206001918035610c4a8161029f565b60ff8019865416911515161784550135910155565b9190808252602080920192916000905b828210610c7d575050505090565b909192936001908535610c8f8161029f565b1515815285830135838201526040908101950193920190610c6f565b9196959390969492948060608401606085525260808301979060005b818110610d2c57505050602087838299038285015282815201949060005b818110610d025750505061029c9495506040818503910152610c5f565b90919588806001928935610d1581610adc565b6001600160e01b0319168152019701929101610ce5565b9091986001906001600160a01b038b35610d45816100e7565b16815260209081019a01929101610cc7565b92909493946001600160a01b037fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c132054163303610e79575b60005b6001600160401b039081811683811015610e3c5790610e3587610e3084610e19610e14610e0c8f8f858d610dce60019d61094b94610dd496610bc8565b99610bdd565b6001600160a01b03166000527ff2509122aff6f9c4e0746a057c63717c29bd65928dec2a594e638e7e04887340602052604060002090565b928b8d610bdd565b610c2f565b63ffffffff60e01b16600052602052604060002090565b610c39565b0116610d91565b5050509390947f8621ad378521883daa8108c9f45a36f29f3afaf85b0a464009b9b206aa7126ec95610e749360405196879687610cab565b0390a1565b63ffffffff60e01b600035166000527f5d54ae78bb256b3b2ab9aba21ec80ea50728352673b79651649d3494dfcade6a602052604060002033600052602052600160ff6040600020541615150315610d8e5760405163be24598360e01b8152600490fd5b90604051610eea81610120565b60206001829460ff815416151584520154910152565b90919392600080516020612d8083398151915260018154146106cd57600190556001600160a01b0393848616156106bb5747943486039586116106b657610f47828461177b565b602083019181835116610f716080860191825190610f686060860186611063565b9290918b611e78565b9490928251928484039384116106b65783610f98928795610f929352611625565b876113fd565b610fa2888861231f565b5116938382039182116106b657610fe18994610ff1937fd97c9cfcfbf7c112cea3ee823fe81993aefdf65ceb21be0782752fc2c6fba5b6978a8a61252d565b604051938493339816968461114f565b0390a360009047818111156110395761100a9250611056565b80611029575b50506101086000600080516020612d8083398151915255565b61103291611d02565b3880611010565b505061100a565b634e487b7160e01b600052601160045260246000fd5b919082039182116106b657565b903590601e19813603018212156100f857018035906001600160401b0382116100f8576020019181360383136100f857565b60005b8381106110a85750506000910152565b8181015183820152602001611098565b906020916110d181518092818552858086019101611095565b601f01601f1916010190565b9061029c9060e0806110f885516101008086528501906110b8565b946001600160a01b0380602083015116602086015280604083015116604086015260608201511660608501526080810151608085015260a081015160a085015260c0810151151560c0850152015191019015159052565b6001600160a01b0361029c9493606093835216602082015281604082015201906110dd565b8051821015610bd85760209160051b010190565b9190811015610bd85760051b81013590609e19813603018212156100f8570190565b90815180825260208092019182818360051b85019501936000915b8483106111d55750505050505090565b90919293949584806111ef83856001950387528a516110dd565b98019301930191949392906111c5565b6001600160a01b0361029c9493606093835216602082015281604082015201906111aa565b9061122e82610410565b604061123c81519283610189565b838252819361124d601f1991610410565b019060005b82811061125f5750505050565b81519060c08201918083106001600160401b0384111761013b57602092845260008152826000818301526000858301526000606083015260006080830152600060a0830152828701015201611252565b60001981146106b65760010190565b9190811015610bd85760051b8101359060fe19813603018212156100f8570190565b919082526001600160a01b039081602091168184015260809261130d6040958587840152858301906111aa565b92606091828186039101528280885195868152019701946000925b85841061133a57505050505050505090565b8651805184168a528086015184168a8701528089015184168a8a0152808201518a830152808301518a84015260a090810151908a015260c09098019795840195600190930192611328565b90602082018092116106b657565b90601f82018092116106b657565b60040190816004116106b657565b919082018092116106b657565b3d156113e7573d906113cd8261022f565b916113db6040519384610189565b82523d6000602084013e565b606090565b90602061029c9281815201906110b8565b6000918291829061141860208201516001600160a01b031690565b6001600160a01b03811615851461148e57506080915001515b608061145361144784516001600160a01b031690565b926040850151906113af565b92015191602083519301915af16114686113bc565b90156114715750565b6040516343373c4f60e01b8152908190610a5c90600483016113ec565b6114b19160806114a860208701516001600160a01b031690565b910151916119f8565b611431565b604051906114c382610140565b606060808360008152600060208201526000604082015282808201520152565b906004116100f85790600490565b9092919283116100f8579190565b909392938483116100f85784116100f8578101920390565b6001600160e01b0319903581811693926004811061153457505050565b60040360031b82901b16169150565b919060a0838203126100f8576040519061155c82610140565b81938035611569816100e7565b83526020810135611579816100e7565b6020840152604081013560408401526060810135916001600160401b03928381116100f857816115aa918401610281565b606085015260808201359283116100f8576080926115c89201610281565b910152565b908092918237016000815290565b9493610108939291928160405197889461160d876020988994858a013787019183830160008152815194859201611095565b01918583013701600083820152038085520183610189565b61162d6114b6565b5061163a610dd482610bed565b6116666116616080840192610e1961165b6116558688611063565b906114e3565b90611517565b610edd565b8051156117695760200180519092901561175a57906116fc60408361173f6117146116f661169661174d98610bed565b996116e861170c6117066116ac60208901610bed565b9c6116ba60608a018a611063565b9b909c6116d26116ca828d611063565b8551916114f1565b9890978d51978891602083019190602083019252565b03601f198101885287610189565b8a611063565b9283919251611385565b916114ff565b9390926115db565b9661172f6117206101e9565b6001600160a01b03909a168a52565b6001600160a01b03166020890152565b01356040860152369161024a565b6060830152608082015290565b91505061029c91503690611543565b60405163364ebe9560e21b8152600490fd5b906117a061179360608401516001600160a01b031690565b6001600160a01b03161590565b6118315760808201511561181f5760a0820151461461180d576117ce6117c86117d292610bed565b3b151590565b1590565b6117fb5760c08101516117e95760e001516117e957565b604051631437241760e21b8152600490fd5b6040516309ee12d560e01b8152600490fd5b604051634ac09ad360e01b8152600490fd5b60405163162908e360e11b8152600490fd5b604051631e4ec46b60e01b8152600490fd5b61185a61179360608301516001600160a01b031690565b6118315760808101511561181f5760a00151461461180d576117ce6117c861188192610bed565b6117fb57565b906001600160a01b03604083013561189e816100e7565b16158015611960575b80611910575b806118d7575b156118c5576118c191612a98565b9091565b604051632514e60160e21b8152600490fd5b5061190b82356118e6816100e7565b6119056119006118f960c0870187611063565b369161024a565b6122c6565b9061197b565b6118b3565b5060ff6119598335611921816100e7565b6001600160a01b03166000527f87c11dafdbe0f066e67358ee4040ba0de12255453b9477c97fa61212e07ca30c602052604060002090565b54166118ad565b5060ff6119746020840135611921816100e7565b54166118a7565b60ff9160016119bf6119d8936001600160a01b03166000527f87c11dafdbe0f066e67358ee4040ba0de12255453b9477c97fa61212e07ca30c602052604060002090565b019063ffffffff60e01b16600052602052604060002090565b541690565b908160209103126100f8575190565b6040513d6000823e3d90fd5b906001600160a01b03809216918215611a5657811615611aad57604051636eb1769f60e11b81523060048201526001600160a01b038216602482015292602084604481865afa938415611aa857600094611a78575b50808410611a5c575b50505050565b611a6f93611a6991611056565b91611abf565b38808080611a56565b611a9a91945060203d8111611aa1575b611a928183610189565b8101906119dd565b9238611a4d565b503d611a88565b6119ec565b6040516363ba9bff60e01b8152600490fd5b604051636eb1769f60e11b81523060048201526001600160a01b03831660248201529192602083806044810103816001600160a01b0386165afa928315611aa857600093611b5b575b5082018092116106b65760405163095ea7b360e01b60208201526001600160a01b03909316602484015260448301919091526101089190611b5682606481015b03601f198101845283610189565b611b7b565b611b7491935060203d8111611aa157611a928183610189565b9138611b08565b604051611bd9916001600160a01b0316611b9482610120565b6000806020958685527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656487860152868151910182855af1611bd36113bc565b91611c69565b8051828115918215611c49575b5050905015611bf25750565b6084906040519062461bcd60e51b82526004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152fd5b83809293500103126100f857810151611c618161029f565b808238611be6565b91929015611ccb5750815115611c7d575090565b3b15611c865790565b60405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b825190915015611cde5750805190602001fd5b60405162461bcd60e51b815260206004820152908190610a5c9060248301906110b8565b9080611d0c575050565b61010891611dcb565b9291909281611d25575b50509050565b6001600160a01b03169283611d4757611d3f929350611dcb565b803880611d1f565b6040516370a0823160e01b815230600482015293602085602481845afa948515611aa857600095611dab575b50848311611d8b57611d86939450611e3f565b611d3f565b60405163cf47918160e01b81526004810184905260248101869052604490fd5b611dc491955060203d8111611aa157611a928183610189565b9338611d73565b6001600160a01b03811615611e2d57478211611e0c57600080809381935af1611df26113bc565b5015611dfa57565b604051633d2cec6f60e21b8152600490fd5b5060405163cf47918160e01b81526004810191909152476024820152604490fd5b6040516321f7434560e01b8152600490fd5b60405163a9059cbb60e01b60208201526001600160a01b039092166024830152604482019290925261010891611b568260648101611b48565b9391929060ff611e8786610bf7565b541615611ed9576001600160a01b038116611eb2575b505050611eac6118c19261266a565b906125d1565b83949192941561181f576118c194611eac9385611ed29330903390611f0b565b9238611e9d565b604051630f52085360e31b8152600490fd5b60031115611ef557565b634e487b7160e01b600052602160045260246000fd5b91929390948101906040818303126100f85780359160038310156100f85760208201356001600160401b0381116100f857611f469201610281565b90611f5081611eeb565b80611f6a575090611f656101089592826129e7565b6120f5565b80611f79600192959395611eeb565b03611f89575061010893506128d1565b91906001600160a01b0390817fa5e67a2ca7abbd3d386941b8010a32368804ac328a911a128f9ea68fdba5470f54169280519081612030575b5050823b156100f857604051631b63c28b60e11b81526001600160a01b03968716600482015293861660248501529316841660448301529190921660648301526000908290608490829084905af18015611aa85761201d5750565b8061202a61010892610176565b806126fd565b6120488160208061208a9561207b950101910161276a565b95929161206c61205a969295966101f6565b6001600160a01b038a1681529661099e565b65ffffffffffff166040860152565b65ffffffffffff166060840152565b612092610203565b9182523060208301526040820152843b156100f8576040516302b67b5760e41b815291600091839182916120cb919033600485016127c0565b038183885af18015611aa8576120e2575b80611fc2565b8061202a6120ef92610176565b386120dc565b916001600160a01b038093169283156121ec57811615611e2d576040516370a0823160e01b8082526001600160a01b03831660048301526020949092908583602481845afa938415611aa8578787946000966121c3575b5061215d90846121819798856121fe565b6040518095819482938352600483019190916001600160a01b036020820193169052565b03915afa908115611aa85761219f936000926121a6575b5050611056565b0361181f57565b6121bc9250803d10611aa157611a928183610189565b3880612198565b612181965090846121e361215d93883d8a11611aa157611a928183610189565b9750509061214c565b60405163346fafc360e21b8152600490fd5b909261010893604051936323b872dd60e01b60208601526001600160a01b038092166024860152166044840152606483015260648252611b5682610140565b9060ff61224983610bf7565b541615611ed957604081016001600160a01b038135612267816100e7565b16612284575b50608061227c6118c19361266a565b9101356125d1565b6080820135801561181f576118c1936122be61227c926122a5608095610bed565b6122b260e0880188611063565b92909130903390611f0b565b93505061226d565b8051156122d4576020015190565b50600090565b906040516122e78161015b565b6060600382948054845260018101546020850152600281015460408501520154910152565b818102929181159184041417156106b657565b61232882610bf7565b6123366117ce825460ff1690565b611ed9576123536001612358920160008052602052604060002090565b6122da565b91602083015160009381612408575b507f5a5e26d1ba5745deaa746a9beb2d7bfa1e6b4e772d13d55a574f5c1e162d39de916123c46123a4866001600160a01b0394816123c957611056565b604080516000815260208101989098528701529116939081906060820190565b0390a3565b612403826123fe7fadf38b383de83e03163f4bb9c9eeeeff060c277df907ebce1fd27038d38e2e0b546001600160a01b031690565b611dcb565b611056565b6001600160a01b03919450916123c46123a461245561244c60607f5a5e26d1ba5745deaa746a9beb2d7bfa1e6b4e772d13d55a574f5c1e162d39de9701518961230c565b620f4240900490565b8761246182809a611056565b612471575b945050505091612367565b61248461247e8383611056565b86611dcb565b612466565b92916080917fdbff15bf7c10a4fcd5d083f8297e5e7653625aab6c4c8548c23686f8118a1325938061251d575b866124e3575b60405196600188526001600160a01b038094166020890152604088015260608701521693a3565b612518876001600160a01b037fadf38b383de83e03163f4bb9c9eeeeff060c277df907ebce1fd27038d38e2e0b541685611d15565b6124bc565b612528818385611d15565b6124b6565b92916080917fdbff15bf7c10a4fcd5d083f8297e5e7653625aab6c4c8548c23686f8118a132593806125c1575b86612587575b60405196600088526001600160a01b038094166020890152604088015260608701521693a3565b6125bc876001600160a01b037fadf38b383de83e03163f4bb9c9eeeeff060c277df907ebce1fd27038d38e2e0b541685611d15565b612560565b6125cc818385611d15565b61255a565b9091600092600092815190816125e657505050565b604092955061029c939450906125fb91612600565b930151835b906000198183098183029182808310920391808303921461265e57620f424090828211156100f8577fde8f6cefed634549b62c77574f722e1ac57e23f24d8fd5cb790fb65668c26139940990828211900360fa1b910360061c170290565b5050620f424091500490565b60036001600160a01b03916060604093849283516126878161015b565b6000938185809352826020820152828782015201521681527fadf38b383de83e03163f4bb9c9eeeeff060c277df907ebce1fd27038d38e2e08602052600182822001818052602052208251926126dc8461015b565b81548452600182015460208501526002820154908401520154606082015290565b60009103126100f857565b519065ffffffffffff821682036100f857565b909291926127288161022f565b916127366040519384610189565b8294828452828201116100f8576020610108930190611095565b9080601f830112156100f857815161029c9260200161271b565b91909160a0818403126100f8578051612782816100e7565b9261278f60208301612708565b9261279c60408401612708565b9260608101519260808201516001600160401b0381116100f85761029c9201612750565b9061029c93926040916001600160a01b03809116845281518181511660208601528160208201511684860152606065ffffffffffff9182868201511682880152015116608085015260208201511660a0840152015160c0820152610100908160e082015201906110b8565b916060838303126100f85782519260208101519260408201516001600160401b0381116100f85761029c9201612750565b91926128ba61029c959460406001600160a01b039461288f878251602080916001600160a01b0381511684520151910152565b60208181015188840152910151606087015281516001600160a01b03166080870152015160a0850152565b1660c0820152610100908160e082015201906110b8565b7fa5e67a2ca7abbd3d386941b8010a32368804ac328a911a128f9ea68fdba5470f549092916001600160a01b0391612915908316916020808251830101910161282b565b939091921691612935612926610222565b6001600160a01b039097168752565b846020870152612943610203565b95865260208601526040850152612958610222565b308152926020840152803b156100f85761298f93600080946040519687958694859363187945bd60e11b855233916004860161285c565b03925af18015611aa85761201d5750565b906004916323f2ebc360e21b81526129c18251809360208685019101611095565b010190565b9060049163d505accf60e01b81526129c18251809360208685019101611095565b908051806129f457505050565b60009060e08103612a51575050600091829182604051612a2a81612a1c6020820195866129c6565b03601f198101835282610189565b51925af1612a366113bc565b505b15612a3f57565b60405163ddafbaef60e01b8152600490fd5b90929061010003612a8657829182604051612a7481612a1c6020820195866129a0565b51925af1612a806113bc565b50612a38565b604051636abdccad60e11b8152600490fd5b90612aa86117ce6117c884610bed565b612bf9576080820135908115612be757612ac191611056565b6040820190612ad7612ad283610bed565b612c0b565b9160608401612ae8612ad282610bed565b906000612af761179385610bed565b15612bbf5750600080855b612b0b89610bed565b90612b1960c08b018b611063565b9190612b2a604051809481936115cd565b03925af1612b366113bc565b9015612b98575060a091612403612ad2612b4f93610bed565b940135808510612b775750612b74929161069b612ad2612b6e93610bed565b90611056565b91565b604051633b5d56ed60e11b8152600481019190915260248101859052604490fd5b80612ba5610a5c92612c9e565b5060405163729a0b5b60e01b8152918291600483016113ec565b60008091612be287612bd088610bed565b612bdc60208d01610bed565b906119f8565b612b02565b60405163391b81e760e21b8152600490fd5b6040516303777f6960e51b8152600490fd5b6000906001600160a01b031680612c225750504790565b6020602491604051928380926370a0823160e01b82523060048301525afa918215611aa85791612c50575090565b61029c915060203d8111611aa157611a928183610189565b6020818303126100f8578051906001600160401b0382116100f857019080601f830112156100f857815161029c9260200161271b565b9081519160448310612d7b5760031990838201908482116106b65781612cc381611393565b10612d69578051612cd3836113a1565b11612d575781612d0357505050905061029c60405160008152602081016040525b60208082518301019101612c68565b9390600460405193601f8316801560051b9182828801019586010197010101945b808310612d4457508252601f01601f191660405290915061029c90612cf4565b8551835260209586019590920191612d24565b604051633b99b53d60e01b8152600490fd5b6040516323d5783d60e11b8152600490fd5b915056fea4b36ced7e8b039500cc9c7c393a04e0c8af96ee265b143e79175cc5679ca539a26469706673582212208fcb5681b147d2a200f9cf62a8aaf4495b58d07e4836c5896b38329be692e7d064736f6c63430008130033";

type CrossChainFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CrossChainFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CrossChainFacet__factory extends ContractFactory {
  constructor(...args: CrossChainFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CrossChainFacet> {
    return super.deploy(overrides || {}) as Promise<CrossChainFacet>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): CrossChainFacet {
    return super.attach(address) as CrossChainFacet;
  }
  override connect(signer: Signer): CrossChainFacet__factory {
    return super.connect(signer) as CrossChainFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CrossChainFacetInterface {
    return new utils.Interface(_abi) as CrossChainFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CrossChainFacet {
    return new Contract(address, _abi, signerOrProvider) as CrossChainFacet;
  }
}
