/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  Create2Deployer,
  Create2DeployerInterface,
} from "../../contracts/Create2Deployer";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "codeHash",
        type: "bytes32",
      },
    ],
    name: "computeAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "codeHash",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "deployer",
        type: "address",
      },
    ],
    name: "computeAddressWithDeployer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "code",
        type: "bytes",
      },
    ],
    name: "deploy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
    ],
    name: "deployERC1820Implementer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6080806040523461005e576000543360018060a01b0382167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a36001600160a81b0319163360ff60a01b19161760005561078b90816100648239f35b600080fdfe60406080815260048036101561001f575b5050361561001d57600080fd5b005b600091823560e01c8063076c37b2146104235780633f4ba83a14610380578063481286e61461035357806356299481146103105780635c975abb146102eb57806366cfa0571461024a578063715018a6146101ed5780638456cb591461018e5780638da5cb5b146101645763f2fde38b1461009a5750610010565b34610160576020366003190112610160578135916001600160a01b039182841680940361015c576100c96104a0565b831561010a57505082546001600160a01b0319811683178455167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b906020608492519162461bcd60e51b8352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152fd5b8480fd5b8280fd5b83823461018a578160031936011261018a576001600160a01b0360209254169051908152f35b5080fd5b83823461018a578160031936011261018a5760207f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258916101cc6104a0565b6101d46104f8565b835460ff60a01b1916600160a01b17845551338152a180f35b83346102475780600319360112610247576102066104a0565b80546001600160a01b03198116825581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b80fd5b50503461018a57606036600319011261018a5760443567ffffffffffffffff918282116102e757366023830112156102e757818101359283116102d4578361029b601f8501601f1916602001610464565b92848452366024868301011161018a57846102d09560246020930183870137840101526102c66104f8565b602435903561053f565b5080f35b634e487b7160e01b845260419052602483fd5b8380fd5b83823461018a578160031936011261018a5760ff6020925460a01c1690519015158152f35b50823461024757606036600319011261024757604435926001600160a01b03918285168503610247575060209361034b916024359035610638565b915191168152f35b508234610247578160031936011261024757506001600160a01b0361034b60209330906024359035610638565b50903461016057826003193601126101605761039a6104a0565b82549060ff8260a01c16156103e0575060ff60a01b19168255513381527f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa90602090a180f35b606490602084519162461bcd60e51b8352820152601460248201527f5061757361626c653a206e6f74207061757365640000000000000000000000006044820152fd5b50346101605736600319011261018a576102d09061043f6104f8565b60fd9061044e60208301610464565b918083526106596020840139602435903561053f565b6040519190601f01601f1916820167ffffffffffffffff81118382101761048a57604052565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b036000541633036104b457565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b60ff60005460a01c1661050757565b60405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606490fd5b9190918047106105f3578151156105af5760208251920190f5906001600160a01b0382161561056a57565b60405162461bcd60e51b815260206004820152601960248201527f437265617465323a204661696c6564206f6e206465706c6f79000000000000006044820152606490fd5b606460405162461bcd60e51b815260206004820152602060248201527f437265617465323a2062797465636f6465206c656e677468206973207a65726f6044820152fd5b60405162461bcd60e51b815260206004820152601d60248201527f437265617465323a20696e73756666696369656e742062616c616e63650000006044820152606490fd5b90605592600b92604051926040840152602083015281520160ff8153209056fe608080604052346100155760e2908161001b8239f35b600080fdfe6080806040526004361015601257600080fd5b600090813560e01c63249cb3fa14602857600080fd5b3460a857604036600319011260a85760243573ffffffffffffffffffffffffffffffffffffffff811680910360a45791602092600435825281845260408220908252835260ff60408220541660001460a057507fa2ef4600d742022d532d4747cb3547474667d6f13804902513b2ec01c848f4b48152f35b8152f35b8280fd5b5080fdfea264697066735822122055ba33a1735578e989300df4b10bf5a1281bc3f66a7f27a76261694c74e5013264736f6c63430008130033a2646970667358221220ffe483e14e817194743ecc52dc0a060d91834e3d155855887d391560a4f04eb964736f6c63430008130033";

type Create2DeployerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: Create2DeployerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Create2Deployer__factory extends ContractFactory {
  constructor(...args: Create2DeployerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Create2Deployer> {
    return super.deploy(overrides || {}) as Promise<Create2Deployer>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Create2Deployer {
    return super.attach(address) as Create2Deployer;
  }
  override connect(signer: Signer): Create2Deployer__factory {
    return super.connect(signer) as Create2Deployer__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): Create2DeployerInterface {
    return new utils.Interface(_abi) as Create2DeployerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Create2Deployer {
    return new Contract(address, _abi, signerOrProvider) as Create2Deployer;
  }
}
