/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  AccessManagerFacet,
  AccessManagerFacetInterface,
} from "../../../../contracts/Shared/Facets/AccessManagerFacet";

const _abi = [
  {
    inputs: [],
    name: "CannotAuthorizeSelf",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyContractOwner",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes4",
        name: "method",
        type: "bytes4",
      },
    ],
    name: "ExecutionAllowed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes4",
        name: "method",
        type: "bytes4",
      },
    ],
    name: "ExecutionDenied",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_selector",
        type: "bytes4",
      },
      {
        internalType: "address",
        name: "_executor",
        type: "address",
      },
    ],
    name: "addressCanExecuteMethod",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4[]",
        name: "_selector",
        type: "bytes4[]",
      },
      {
        internalType: "address[]",
        name: "_executor",
        type: "address[]",
      },
      {
        internalType: "bool[]",
        name: "_canExecute",
        type: "bool[]",
      },
    ],
    name: "setBatchCanExecute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_selector",
        type: "bytes4",
      },
      {
        internalType: "address",
        name: "_executor",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_canExecute",
        type: "bool",
      },
    ],
    name: "setCanExecute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080806040523461001657610544908161001c8239f35b600080fdfe6040608081526004908136101561001557600080fd5b600091823560e01c80635b1be424146101a2578063612ad9cb1461012a5763a4c3366e1461004257600080fd5b346101265760603660031901126101265761005b61035b565b90610064610372565b604435918215158303610122576001600160a01b0382169430861461011557505061008d6104c9565b81156101065761009d90836103bb565b156100d4576001600160e01b031916907fd97cb52d6a919c35d1a9848f69806a32611c1381fa1078e5ea866186ee4c46c78380a380f35b6001600160e01b031916907f2fb75e73eca07a04ac148df401d1f013ddb4c8177a453af29c97c88037bac8488380a380f35b6101109083610450565b61009d565b51636d582a3160e11b8152fd5b8580fd5b8280fd5b50503461019e578060031936011261019e5760ff8160209361014a61035b565b610152610372565b9063ffffffff60e01b1682527f075a38625ef0b246753147848d592c62b62122f46a8fd0865dd31aa776ea07a286526001600160a01b0383832091168252855220541690519015158152f35b5080fd5b5090346101265760603660031901126101265767ffffffffffffffff8235818111610321576101d49036908501610325565b60249391933583811161031d576101ee9036908701610325565b9093604435908111610319576102079036908801610325565b969092885b818110610217578980f35b61022281838a610388565b3563ffffffff60e01b8116908181036103155761024083878b610388565b35906001600160a01b038216918281036103115730831461030157610281858e8196959461029a946102866102818f9b8560019d61027c6104c9565b610388565b6103ae565b156102f357610294916103bb565b8b610388565b156102ca577fd97cb52d6a919c35d1a9848f69806a32611c1381fa1078e5ea866186ee4c46c78d80a35b0161020c565b7f2fb75e73eca07a04ac148df401d1f013ddb4c8177a453af29c97c88037bac8488d80a36102c4565b6102fc91610450565b610294565b8951636d582a3160e11b81528790fd5b8d80fd5b8b80fd5b8780fd5b8680fd5b8480fd5b9181601f840112156103565782359167ffffffffffffffff8311610356576020808501948460051b01011161035657565b600080fd5b600435906001600160e01b03198216820361035657565b602435906001600160a01b038216820361035657565b91908110156103985760051b0190565b634e487b7160e01b600052603260045260246000fd5b3580151581036103565790565b906001600160a01b03169030821461043e5763ffffffff60e01b16907fcdd2f8ab598ea828ea63b4a6cfc86ccf7d40784556f0783753603ba712c83b0060008381527f075a38625ef0b246753147848d592c62b62122f46a8fd0865dd31aa776ea07a26020526040812083825260205260408120600160ff1982541617905580a3565b604051636d582a3160e11b8152600490fd5b63ffffffff60e01b16907f4e2965fe48abf86ff779f17f9368d20e8eb4eebd1473e650a0aae103adc4b68b60008381527f075a38625ef0b246753147848d592c62b62122f46a8fd0865dd31aa776ea07a26020526001600160a01b03604082209316928382526020526040812060ff19815416905580a3565b6001600160a01b037fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c1320541633036104fc57565b6040516304efaedf60e31b8152600490fdfea2646970667358221220c0f4d4ab2ff98861ecb02f4f04c3edef37e3f58cda6a43dae9a1124b3e0a7c6664736f6c63430008130033";

type AccessManagerFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AccessManagerFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AccessManagerFacet__factory extends ContractFactory {
  constructor(...args: AccessManagerFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<AccessManagerFacet> {
    return super.deploy(overrides || {}) as Promise<AccessManagerFacet>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): AccessManagerFacet {
    return super.attach(address) as AccessManagerFacet;
  }
  override connect(signer: Signer): AccessManagerFacet__factory {
    return super.connect(signer) as AccessManagerFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AccessManagerFacetInterface {
    return new utils.Interface(_abi) as AccessManagerFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AccessManagerFacet {
    return new Contract(address, _abi, signerOrProvider) as AccessManagerFacet;
  }
}
