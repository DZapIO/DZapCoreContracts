/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  DexManagerFacet,
  DexManagerFacetInterface,
} from "../../../../contracts/Shared/Facets/DexManagerFacet";

const _abi = [
  {
    inputs: [],
    name: "CannotAuthorizeSelf",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidContract",
    type: "error",
  },
  {
    inputs: [],
    name: "UnAuthorized",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "dexAddress",
        type: "address",
      },
    ],
    name: "DexAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "dexAddress",
        type: "address",
      },
    ],
    name: "DexRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "dex",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes4",
        name: "functionSignature",
        type: "bytes4",
      },
      {
        indexed: true,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "FunctionSignatureApprovalChanged",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_dex",
        type: "address",
      },
    ],
    name: "addDex",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_dexs",
        type: "address[]",
      },
    ],
    name: "batchAddDex",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_dexs",
        type: "address[]",
      },
    ],
    name: "batchRemoveDex",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_dexs",
        type: "address[]",
      },
      {
        internalType: "bytes4[]",
        name: "_signatures",
        type: "bytes4[]",
      },
      {
        internalType: "bool[]",
        name: "_approval",
        type: "bool[]",
      },
    ],
    name: "batchSetFunctionApprovalBySignature",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_dex",
        type: "address",
      },
    ],
    name: "isContractApproved",
    outputs: [
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_dex",
        type: "address",
      },
      {
        internalType: "bytes4",
        name: "_signature",
        type: "bytes4",
      },
    ],
    name: "isFunctionApproved",
    outputs: [
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_dex",
        type: "address",
      },
    ],
    name: "removeDex",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_dex",
        type: "address",
      },
      {
        internalType: "bytes4",
        name: "_signature",
        type: "bytes4",
      },
      {
        internalType: "bool",
        name: "_approval",
        type: "bool",
      },
    ],
    name: "setFunctionApprovalBySignature",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080806040523461001657610865908161001c8239f35b600080fdfe60406080815260048036101561001457600080fd5b600091823560e01c8063070d39d9146105aa578063124f1ead1461052d578063536db266146104a75780638f1d3486146103c95780639afc19c714610309578063ba41a89b146101a5578063e94dfcfd146101515763fcd8e49e1461007857600080fd5b3461014d57602036600319011261014d57813567ffffffffffffffff8111610149576100a7903690840161060f565b926001600160a01b0391826000805160206108108339815191525416330361013c575b855b8581106100d7578680f35b6100ea6100e5828885610640565b610666565b8481169030821461012c579061010260019392610724565b7f7e0058dd0cbc0a8b7beaa013a4825655d8e9e81a5e2cc6582818deded0a41b998980a2016100cc565b8651636d582a3160e11b81528590fd5b6101446106bf565b6100ca565b8380fd5b8280fd5b8382346101a157806003193601126101a15760ff816020936101716105dd565b600161018461017e6105f8565b92610687565b6001600160e01b0319909216835201855220549151911615158152f35b5080fd5b50903461014d57606036600319011261014d5767ffffffffffffffff918135838111610305576101d8903690840161060f565b919092602435858111610301576101f2903690830161060f565b90956044359081116102fd5761020b903690840161060f565b9690926001600160a01b039586600080516020610810833981519152541633036102f0575b895b84811061023d578a80f35b61024b6100e582848c610640565b908882163081146102e0578c90610263838989610640565b359063ffffffff60e01b821691828103610149576102cc8f86818e60019a7f18fafce0b07829fdc1ccae78ead6e172d6c358be05d9211683e2a79562af9a29966102b96102b4866102b49886610640565b61067a565b156102d7576102c79161077c565b610640565b15159380a401610232565b6102c7916107ae565b8851636d582a3160e11b81528590fd5b6102f86106bf565b610230565b8780fd5b8680fd5b8480fd5b5050346101a15760203660031901126101a15780359067ffffffffffffffff821161014d5761033a9136910161060f565b6001600160a01b039081600080516020610810833981519152541633036103bc575b835b818110610369578480f35b8061038261037d6100e56001948689610640565b610757565b836103916100e5838689610640565b167f78e0a2ffcdfbbb49ba5c8050d8630fab2176d825e8360809db049cd98f462a788780a20161035e565b6103c46106bf565b61035c565b503461014d57606036600319011261014d576103e36105dd565b6103eb6105f8565b9060443580151594858203610301576001600160a01b038060008051602061081083398151915254163314158061049a575b61048d575b8316943086146104805750508290600014610472576104409161077c565b6001600160e01b031916907f18fafce0b07829fdc1ccae78ead6e172d6c358be05d9211683e2a79562af9a298480a480f35b61047b916107ae565b610440565b51636d582a3160e11b8152fd5b6104956106bf565b610422565b6104a26106bf565b61041d565b50903461014d57602036600319011261014d576104c26105dd565b906001600160a01b038060008051602061081083398151915254163303610520575b8216923084146104805750506104f990610724565b7f7e0058dd0cbc0a8b7beaa013a4825655d8e9e81a5e2cc6582818deded0a41b998280a280f35b6105286106bf565b6104e4565b83346105a75760203660031901126105a7576105476105dd565b6001600160a01b0390816000805160206108108339815191525416330361059a575b61057281610757565b167f78e0a2ffcdfbbb49ba5c8050d8630fab2176d825e8360809db049cd98f462a788280a280f35b6105a26106bf565b610569565b80fd5b8382346101a15760203660031901126101a15760209060ff6105d26105cd6105dd565b610687565b541690519015158152f35b600435906001600160a01b03821682036105f357565b600080fd5b602435906001600160e01b0319821682036105f357565b9181601f840112156105f35782359167ffffffffffffffff83116105f3576020808501948460051b0101116105f357565b91908110156106505760051b0190565b634e487b7160e01b600052603260045260246000fd5b356001600160a01b03811681036105f35790565b3580151581036105f35790565b6001600160a01b03166000527f87c11dafdbe0f066e67358ee4040ba0de12255453b9477c97fa61212e07ca30c602052604060002090565b63ffffffff60e01b600035166000527f5d54ae78bb256b3b2ab9aba21ec80ea50728352673b79651649d3494dfcade6a602052604060002033600052602052600160ff6040600020541615150361071257565b60405163be24598360e01b8152600490fd5b61072d816107d9565b60ff61073882610687565b54166107545761074790610687565b805460ff19166001179055565b50565b60ff61076282610687565b5416156107545761077290610687565b805460ff19169055565b61078b6001916105cd816107d9565b019063ffffffff60e01b166000526020526040600020600160ff19825416179055565b6107b9600191610687565b019063ffffffff60e01b16600052602052604060002060ff198154169055565b6001600160a01b03811615908115610805575b506107f357565b6040516303777f6960e51b8152600490fd5b90503b15386107ec56fec8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c1320a2646970667358221220861842dc4daf3d54108b525f5a75a4a97edba520c82a90946ccd442bd4cdecc264736f6c63430008130033";

type DexManagerFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DexManagerFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DexManagerFacet__factory extends ContractFactory {
  constructor(...args: DexManagerFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DexManagerFacet> {
    return super.deploy(overrides || {}) as Promise<DexManagerFacet>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): DexManagerFacet {
    return super.attach(address) as DexManagerFacet;
  }
  override connect(signer: Signer): DexManagerFacet__factory {
    return super.connect(signer) as DexManagerFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DexManagerFacetInterface {
    return new utils.Interface(_abi) as DexManagerFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DexManagerFacet {
    return new Contract(address, _abi, signerOrProvider) as DexManagerFacet;
  }
}
