/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  DiamondInit,
  DiamondInitInterface,
} from "../../../../contracts/Shared/Facets/DiamondInit";

const _abi = [
  {
    inputs: [],
    name: "AlreadyInitialized",
    type: "error",
  },
  {
    inputs: [],
    name: "FeeTooHigh",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidFee",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyContractOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAddress",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_permit2",
        type: "address",
      },
      {
        internalType: "address",
        name: "_protocolFeeVault",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_maxTokenFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maxFixedNativeFeeAmount",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080806040523461001657610229908161001c8239f35b600080fdfe608060408181526004908136101561001657600080fd5b600092833560e01c63eb990c591461002d57600080fd5b346101ef5760803660031901126101ef5782359173ffffffffffffffffffffffffffffffffffffffff908184168094036101eb57602435928284168094036101e757604435927fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c1320541633036101d9575083156101ca5782156101ca5781156101bb57620f424082116101ac577fa5e67a2ca7abbd3d386941b8010a32368804ac328a911a128f9ea68fdba5470f9182549260ff8460a01c1661019d577fadf38b383de83e03163f4bb9c9eeeeff060c277df907ebce1fd27038d38e2e0b9687549360ff8560a01c16610191575050600160a01b74ffffffffffffffffffffffffffffffffffffffffff1994851696909617861790557fadf38b383de83e03163f4bb9c9eeeeff060c277df907ebce1fd27038d38e2e09556064357fadf38b383de83e03163f4bb9c9eeeeff060c277df907ebce1fd27038d38e2e0a55161717905580f35b5162dc149f60e41b8152fd5b825162dc149f60e41b81528790fd5b5163cd4e616760e01b81528490fd5b516358d620b360e01b81528490fd5b5163d92e233d60e01b81528490fd5b6304efaedf60e31b81528590fd5b8680fd5b8580fd5b8380fdfea26469706673582212201cbfe294cb0d7f65d350d4af00cb353f74db14a15b64273f5671f1c4b01dac3464736f6c63430008130033";

type DiamondInitConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DiamondInitConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DiamondInit__factory extends ContractFactory {
  constructor(...args: DiamondInitConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DiamondInit> {
    return super.deploy(overrides || {}) as Promise<DiamondInit>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): DiamondInit {
    return super.attach(address) as DiamondInit;
  }
  override connect(signer: Signer): DiamondInit__factory {
    return super.connect(signer) as DiamondInit__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DiamondInitInterface {
    return new utils.Interface(_abi) as DiamondInitInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DiamondInit {
    return new Contract(address, _abi, signerOrProvider) as DiamondInit;
  }
}
