/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  DiamondLoupeFacet,
  DiamondLoupeFacetInterface,
} from "../../../../contracts/Shared/Facets/DiamondLoupeFacet";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_functionSelector",
        type: "bytes4",
      },
    ],
    name: "facetAddress",
    outputs: [
      {
        internalType: "address",
        name: "facetAddress_",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "facetAddresses",
    outputs: [
      {
        internalType: "address[]",
        name: "facetAddresses_",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_facet",
        type: "address",
      },
    ],
    name: "facetFunctionSelectors",
    outputs: [
      {
        internalType: "bytes4[]",
        name: "facetFunctionSelectors_",
        type: "bytes4[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "facets",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "facetAddress",
            type: "address",
          },
          {
            internalType: "bytes4[]",
            name: "functionSelectors",
            type: "bytes4[]",
          },
        ],
        internalType: "struct IDiamondLoupe.Facet[]",
        name: "facets_",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080806040523461001657610746908161001c8239f35b600080fdfe6080604081815260048036101561001557600080fd5b600092833560e01c90816301ffc9a71461045e5750806352ef6b2c1461037a5780637a0ed62714610176578063adfca15e146100bd5763cdffacc61461005a57600080fd5b346100b95760203660031901126100b9573563ffffffff60e01b81168091036100b95781836001600160a01b0392602095527fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c85522054169051908152f35b8280fd5b5090346100b9576020918260031936011261017257356001600160a01b0381168103610172578361012961012485936001600160a01b03166000527fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131d602052604060002090565b610533565b9083519383808695860192818752855180945286019401925b82811061015157505050500390f35b83516001600160e01b03191685528695509381019392810192600101610142565b8380fd5b5091346103775780600319360112610377577fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131e8054906101b5826104f1565b946101c2855196876104b9565b828652601f196101d1846104f1565b01845b81811061033057505050825b8281106102965750505082825191602080840191818552835180935285850182878560051b880101950196825b85841061021a5787870388f35b90919293809596603f19898203018552895182606081878501936001600160a01b038151168652015193878382015284518094520192019084905b80821061027257505050988101989695946001019301919061020d565b82516001600160e01b03191684528994938401939092019160019190910190610255565b6001908285526103116001600160a01b03827fb5c239a29faf02594141bbc5e6982a9b85ba2b4d59c3ed3baaf4cb8e5e11cbef015416806102d7848b610509565b51526001600160a01b03166000527fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131d602052604060002090565b6103286020610320848b610509565b510191610533565b9052016101e0565b865187810181811067ffffffffffffffff821117610364579060209291895287815282606081830152828b010152016101d4565b634e487b7160e01b885260418552602488fd5b80fd5b8284346103775780600319360112610377579080519182907fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131e918254808652602080960190819484527fb5c239a29faf02594141bbc5e6982a9b85ba2b4d59c3ed3baaf4cb8e5e11cbef90845b81811061044157505050816103fd9103826104b9565b83519485948186019282875251809352850193925b82811061042157505050500390f35b83516001600160a01b031685528695509381019392810192600101610412565b82546001600160a01b0316845292880192600192830192016103e7565b9291905034610172576020366003190112610172573563ffffffff60e01b81168091036101725783527fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131f602090815292205460ff1615158152f35b90601f8019910116810190811067ffffffffffffffff8211176104db57604052565b634e487b7160e01b600052604160045260246000fd5b67ffffffffffffffff81116104db5760051b60200190565b805182101561051d5760209160051b010190565b634e487b7160e01b600052603260045260246000fd5b906040918251809382549283835260209182840191600052826000209460005b81600782011061069d57846105ae97549383831061067d575b83831061065d575b83831061063d575b83831061061d575b8383106105fd575b8383106105e0575b508282106105c4575b50106105b0575b50905003836104b9565b565b6001600160e01b03191681520180386105a4565b83811b6001600160e01b0319168552909301926001018461059d565b84901b6001600160e01b0319168552909301926001018438610594565b606085901b6001600160e01b03191686529481019460019092019161058c565b608085901b6001600160e01b031916865294810194600190920191610584565b60a085901b6001600160e01b03191686529481019460019092019161057c565b60c085901b6001600160e01b031916865294810194600190920191610574565b60e085901b6001600160e01b03191686529481019460019092019161056c565b86546001600160e01b031960e082811b8216875260c083811b83168989015260a084811b8416888a0152608085811b85166060808c019190915286901b8516908a015284881b84169089015283891b8316908801529116908501526001909601958895506101009093019260080161055356fea26469706673582212204d9304d68fc992dfea6376f937a8eb64b61104cdb353bc338ccbe15d7d66c19e64736f6c63430008130033";

type DiamondLoupeFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DiamondLoupeFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DiamondLoupeFacet__factory extends ContractFactory {
  constructor(...args: DiamondLoupeFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DiamondLoupeFacet> {
    return super.deploy(overrides || {}) as Promise<DiamondLoupeFacet>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): DiamondLoupeFacet {
    return super.attach(address) as DiamondLoupeFacet;
  }
  override connect(signer: Signer): DiamondLoupeFacet__factory {
    return super.connect(signer) as DiamondLoupeFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DiamondLoupeFacetInterface {
    return new utils.Interface(_abi) as DiamondLoupeFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DiamondLoupeFacet {
    return new Contract(address, _abi, signerOrProvider) as DiamondLoupeFacet;
  }
}
