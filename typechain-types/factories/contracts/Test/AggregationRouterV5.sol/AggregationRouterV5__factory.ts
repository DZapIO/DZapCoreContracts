/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  AggregationRouterV5,
  AggregationRouterV5Interface,
} from "../../../../contracts/Test/AggregationRouterV5.sol/AggregationRouterV5";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IWETH",
        name: "weth",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AccessDenied",
    type: "error",
  },
  {
    inputs: [],
    name: "AdvanceNonceFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "AlreadyFilled",
    type: "error",
  },
  {
    inputs: [],
    name: "ArbitraryStaticCallFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "BadPool",
    type: "error",
  },
  {
    inputs: [],
    name: "BadSignature",
    type: "error",
  },
  {
    inputs: [],
    name: "ETHTransferFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "ETHTransferFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "EmptyPools",
    type: "error",
  },
  {
    inputs: [],
    name: "GetAmountCallFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "IncorrectDataLength",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidMsgValue",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidMsgValue",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidatedOrder",
    type: "error",
  },
  {
    inputs: [],
    name: "MakingAmountExceeded",
    type: "error",
  },
  {
    inputs: [],
    name: "MakingAmountTooLow",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyOneAmountShouldBeZero",
    type: "error",
  },
  {
    inputs: [],
    name: "OrderExpired",
    type: "error",
  },
  {
    inputs: [],
    name: "PermitLengthTooLow",
    type: "error",
  },
  {
    inputs: [],
    name: "PredicateIsNotTrue",
    type: "error",
  },
  {
    inputs: [],
    name: "PrivateOrder",
    type: "error",
  },
  {
    inputs: [],
    name: "RFQBadSignature",
    type: "error",
  },
  {
    inputs: [],
    name: "RFQPrivateOrder",
    type: "error",
  },
  {
    inputs: [],
    name: "RFQSwapWithZeroAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "RFQZeroTargetIsForbidden",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyDetected",
    type: "error",
  },
  {
    inputs: [],
    name: "RemainingAmountIsZero",
    type: "error",
  },
  {
    inputs: [],
    name: "ReservesCallFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "ReturnAmountIsNotEnough",
    type: "error",
  },
  {
    inputs: [],
    name: "SafePermitBadLength",
    type: "error",
  },
  {
    inputs: [],
    name: "SafeTransferFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "SafeTransferFromFailed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "res",
        type: "bytes",
      },
    ],
    name: "SimulationResults",
    type: "error",
  },
  {
    inputs: [],
    name: "SwapAmountTooLarge",
    type: "error",
  },
  {
    inputs: [],
    name: "SwapWithZeroAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "TakingAmountExceeded",
    type: "error",
  },
  {
    inputs: [],
    name: "TakingAmountIncreased",
    type: "error",
  },
  {
    inputs: [],
    name: "TakingAmountTooHigh",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferFromMakerToTakerFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferFromTakerToMakerFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "UnknownOrder",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongGetter",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroMinReturn",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroReturnAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroTargetIsForbidden",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "maker",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newNonce",
        type: "uint256",
      },
    ],
    name: "NonceIncreased",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "maker",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "orderHash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "remainingRaw",
        type: "uint256",
      },
    ],
    name: "OrderCanceled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "maker",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "orderHash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "remaining",
        type: "uint256",
      },
    ],
    name: "OrderFilled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "orderHash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "makingAmount",
        type: "uint256",
      },
    ],
    name: "OrderFilledRFQ",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "amount",
        type: "uint8",
      },
    ],
    name: "advanceNonce",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "offsets",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "and",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "arbitraryStaticCall",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "salt",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "makerAsset",
            type: "address",
          },
          {
            internalType: "address",
            name: "takerAsset",
            type: "address",
          },
          {
            internalType: "address",
            name: "maker",
            type: "address",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "address",
            name: "allowedSender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "makingAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "takingAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "offsets",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "interactions",
            type: "bytes",
          },
        ],
        internalType: "struct OrderLib.Order",
        name: "order",
        type: "tuple",
      },
    ],
    name: "cancelOrder",
    outputs: [
      {
        internalType: "uint256",
        name: "orderRemaining",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "orderHash",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "orderInfo",
        type: "uint256",
      },
    ],
    name: "cancelOrderRFQ",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "orderInfo",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "additionalMask",
        type: "uint256",
      },
    ],
    name: "cancelOrderRFQ",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "salt",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "makerAsset",
            type: "address",
          },
          {
            internalType: "address",
            name: "takerAsset",
            type: "address",
          },
          {
            internalType: "address",
            name: "maker",
            type: "address",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "address",
            name: "allowedSender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "makingAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "takingAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "offsets",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "interactions",
            type: "bytes",
          },
        ],
        internalType: "struct OrderLib.Order",
        name: "order",
        type: "tuple",
      },
    ],
    name: "checkPredicate",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IClipperExchangeInterface",
        name: "clipperExchange",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "srcToken",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "dstToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "inputAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "outputAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "goodUntil",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "vs",
        type: "bytes32",
      },
    ],
    name: "clipperSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "returnAmount",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IClipperExchangeInterface",
        name: "clipperExchange",
        type: "address",
      },
      {
        internalType: "address payable",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "srcToken",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "dstToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "inputAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "outputAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "goodUntil",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "vs",
        type: "bytes32",
      },
    ],
    name: "clipperSwapTo",
    outputs: [
      {
        internalType: "uint256",
        name: "returnAmount",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IClipperExchangeInterface",
        name: "clipperExchange",
        type: "address",
      },
      {
        internalType: "address payable",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "srcToken",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "dstToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "inputAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "outputAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "goodUntil",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "vs",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "permit",
        type: "bytes",
      },
    ],
    name: "clipperSwapToWithPermit",
    outputs: [
      {
        internalType: "uint256",
        name: "returnAmount",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "eq",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "salt",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "makerAsset",
            type: "address",
          },
          {
            internalType: "address",
            name: "takerAsset",
            type: "address",
          },
          {
            internalType: "address",
            name: "maker",
            type: "address",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "address",
            name: "allowedSender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "makingAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "takingAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "offsets",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "interactions",
            type: "bytes",
          },
        ],
        internalType: "struct OrderLib.Order",
        name: "order",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "interaction",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "makingAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "takingAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "skipPermitAndThresholdAmount",
        type: "uint256",
      },
    ],
    name: "fillOrder",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "info",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "makerAsset",
            type: "address",
          },
          {
            internalType: "address",
            name: "takerAsset",
            type: "address",
          },
          {
            internalType: "address",
            name: "maker",
            type: "address",
          },
          {
            internalType: "address",
            name: "allowedSender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "makingAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "takingAmount",
            type: "uint256",
          },
        ],
        internalType: "struct OrderRFQLib.OrderRFQ",
        name: "order",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "flagsAndAmount",
        type: "uint256",
      },
    ],
    name: "fillOrderRFQ",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "info",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "makerAsset",
            type: "address",
          },
          {
            internalType: "address",
            name: "takerAsset",
            type: "address",
          },
          {
            internalType: "address",
            name: "maker",
            type: "address",
          },
          {
            internalType: "address",
            name: "allowedSender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "makingAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "takingAmount",
            type: "uint256",
          },
        ],
        internalType: "struct OrderRFQLib.OrderRFQ",
        name: "order",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "vs",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "flagsAndAmount",
        type: "uint256",
      },
    ],
    name: "fillOrderRFQCompact",
    outputs: [
      {
        internalType: "uint256",
        name: "filledMakingAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "filledTakingAmount",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "orderHash",
        type: "bytes32",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "info",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "makerAsset",
            type: "address",
          },
          {
            internalType: "address",
            name: "takerAsset",
            type: "address",
          },
          {
            internalType: "address",
            name: "maker",
            type: "address",
          },
          {
            internalType: "address",
            name: "allowedSender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "makingAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "takingAmount",
            type: "uint256",
          },
        ],
        internalType: "struct OrderRFQLib.OrderRFQ",
        name: "order",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "flagsAndAmount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "fillOrderRFQTo",
    outputs: [
      {
        internalType: "uint256",
        name: "filledMakingAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "filledTakingAmount",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "orderHash",
        type: "bytes32",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "info",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "makerAsset",
            type: "address",
          },
          {
            internalType: "address",
            name: "takerAsset",
            type: "address",
          },
          {
            internalType: "address",
            name: "maker",
            type: "address",
          },
          {
            internalType: "address",
            name: "allowedSender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "makingAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "takingAmount",
            type: "uint256",
          },
        ],
        internalType: "struct OrderRFQLib.OrderRFQ",
        name: "order",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "flagsAndAmount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "permit",
        type: "bytes",
      },
    ],
    name: "fillOrderRFQToWithPermit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "salt",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "makerAsset",
            type: "address",
          },
          {
            internalType: "address",
            name: "takerAsset",
            type: "address",
          },
          {
            internalType: "address",
            name: "maker",
            type: "address",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "address",
            name: "allowedSender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "makingAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "takingAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "offsets",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "interactions",
            type: "bytes",
          },
        ],
        internalType: "struct OrderLib.Order",
        name: "order_",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "interaction",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "makingAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "takingAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "skipPermitAndThresholdAmount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "fillOrderTo",
    outputs: [
      {
        internalType: "uint256",
        name: "actualMakingAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "actualTakingAmount",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "orderHash",
        type: "bytes32",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "salt",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "makerAsset",
            type: "address",
          },
          {
            internalType: "address",
            name: "takerAsset",
            type: "address",
          },
          {
            internalType: "address",
            name: "maker",
            type: "address",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "address",
            name: "allowedSender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "makingAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "takingAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "offsets",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "interactions",
            type: "bytes",
          },
        ],
        internalType: "struct OrderLib.Order",
        name: "order",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "interaction",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "makingAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "takingAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "skipPermitAndThresholdAmount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "permit",
        type: "bytes",
      },
    ],
    name: "fillOrderToWithPermit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "gt",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "salt",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "makerAsset",
            type: "address",
          },
          {
            internalType: "address",
            name: "takerAsset",
            type: "address",
          },
          {
            internalType: "address",
            name: "maker",
            type: "address",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "address",
            name: "allowedSender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "makingAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "takingAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "offsets",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "interactions",
            type: "bytes",
          },
        ],
        internalType: "struct OrderLib.Order",
        name: "order",
        type: "tuple",
      },
    ],
    name: "hashOrder",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "increaseNonce",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "maker",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "slot",
        type: "uint256",
      },
    ],
    name: "invalidatorForOrderRFQ",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "lt",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "nonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "makerAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "makerNonce",
        type: "uint256",
      },
    ],
    name: "nonceEquals",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "offsets",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "or",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "orderHash",
        type: "bytes32",
      },
    ],
    name: "remaining",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "orderHash",
        type: "bytes32",
      },
    ],
    name: "remainingRaw",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "orderHashes",
        type: "bytes32[]",
      },
    ],
    name: "remainingsRaw",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "rescueFunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "simulate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IAggregationExecutor",
        name: "executor",
        type: "address",
      },
      {
        components: [
          {
            internalType: "contract IERC20",
            name: "srcToken",
            type: "address",
          },
          {
            internalType: "contract IERC20",
            name: "dstToken",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "srcReceiver",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "dstReceiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minReturnAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "flags",
            type: "uint256",
          },
        ],
        internalType: "struct GenericRouter.SwapDescription",
        name: "desc",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "permit",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "swap",
    outputs: [
      {
        internalType: "uint256",
        name: "returnAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "spentAmount",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "time",
        type: "uint256",
      },
    ],
    name: "timestampBelow",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "timeNonceAccount",
        type: "uint256",
      },
    ],
    name: "timestampBelowAndNonceEquals",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minReturn",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "pools",
        type: "uint256[]",
      },
    ],
    name: "uniswapV3Swap",
    outputs: [
      {
        internalType: "uint256",
        name: "returnAmount",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "amount0Delta",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "amount1Delta",
        type: "int256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "uniswapV3SwapCallback",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minReturn",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "pools",
        type: "uint256[]",
      },
    ],
    name: "uniswapV3SwapTo",
    outputs: [
      {
        internalType: "uint256",
        name: "returnAmount",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "srcToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minReturn",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "pools",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "permit",
        type: "bytes",
      },
    ],
    name: "uniswapV3SwapToWithPermit",
    outputs: [
      {
        internalType: "uint256",
        name: "returnAmount",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "srcToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minReturn",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "pools",
        type: "uint256[]",
      },
    ],
    name: "unoswap",
    outputs: [
      {
        internalType: "uint256",
        name: "returnAmount",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "srcToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minReturn",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "pools",
        type: "uint256[]",
      },
    ],
    name: "unoswapTo",
    outputs: [
      {
        internalType: "uint256",
        name: "returnAmount",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "srcToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minReturn",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "pools",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "permit",
        type: "bytes",
      },
    ],
    name: "unoswapToWithPermit",
    outputs: [
      {
        internalType: "uint256",
        name: "returnAmount",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6101c03462000227576001600160401b0390601f6200458f38819003918201601f1916830192919084841183851017620002115781602092849260409687528339810103126200022757516001600160a01b03928382169081830362000227578351936200006d856200022c565b601885526001602086017f31696e6368204167677265676174696f6e20526f757465720000000000000000815260208351620000a9816200022c565b8381520196603560f81b88525190209520958560e052610100968088524660a052825160208101917f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f988984528583015260608201524660808201523060a082015260a0815260c08101948186109086111762000211578484525190206080523060c05261012095865260008054336001600160a01b03198216811783559216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a36101409084825261016092858452610180948686526101a0968752156200020257505194614346968762000249883960805187612a3e015260a05187612af9015260c05187612a0f015260e05187612a8d01525186612ab301525185612a6a015251848181611ab101528181611bd20152611c0d015251838181612352015261245e0152518261395a01525181612de90152f35b63d92e233d60e01b8152600490fd5b634e487b7160e01b600052604160045260246000fd5b600080fd5b604081019081106001600160401b03821117620002115760405256fe6080604052600436101561001b575b361561001957600080fd5b005b60003560e01c80630502b1c5146102db578063093d4fa5146102d657806312aa3caf146102d15780632521b930146102cc5780632cc2878d146102c75780632d9a56f6146102c257806337e7316f146102bd5780633c15fd91146102b85780633eca9c0a146102b35780634f38e2b8146102ae57806356f16124146102a95780635a099843146102a457806362e238bb1461029f57806363592c2b1461029a5780636c838250146102955780636fe7b0ba1461029057806370ae92d21461028b57806370ccbd3114610286578063715018a61461028157806372c244a81461027c578063742611451461027757806378e3214f146102725780637e54f0921461026d578063825caba11461026857806384bd6d29146102635780638da5cb5b1461025e578063942461bb146102595780639570eeee14610254578063bc1ed74c1461024f578063bc80f1a81461024a578063bd61951d14610245578063bddccd3514610240578063bf15fcd81461023b578063bfa7514314610236578063c53a029214610231578063c805a6661461022c578063ca4ece2214610227578063cf6fc6e314610222578063d365c6951461021d578063e449022e14610218578063e5d7bde614610213578063f2fde38b1461020e578063f78dc253146102095763fa461e330361000e576116b1565b611657565b611590565b61150a565b6114cd565b61142b565b6113ea565b6113b9565b611324565b6112bd565b6112a4565b61128b565b611219565b6111be565b61113b565b6110f2565b610f68565b610ed3565b610e5a565b610e08565b610deb565b610dbf565b610d8c565b610d73565b610ce0565b610c82565b610bf5565b610bb7565b610b86565b610b6e565b610b4f565b610ad4565b610a7f565b610a33565b6109f8565b610963565b610834565b610819565b61074a565b6106e6565b6106c0565b610413565b610389565b610335565b6001600160a01b038116036102f157565b600080fd5b60643590610303826102e0565b565b9181601f840112156102f1578235916001600160401b0383116102f1576020808501948460051b0101116102f157565b60803660031901126102f15760043561034d816102e0565b6064356001600160401b0381116102f157602091610372610381923690600401610305565b91604435906024359033612062565b604051908152f35b6101203660031901126102f15760206103816004356103a7816102e0565b6024356103b3816102e0565b6044356103bf816102e0565b606435916103cc836102e0565b610104359360e4359360c4359360a435936084359361195f565b9181601f840112156102f1578235916001600160401b0383116102f157602083818601950101116102f157565b6101403660031901126102f1576004803561042d816102e0565b60e03660231901126102f1576001600160401b0391610104358381116102f15761045a90369083016103e6565b919093610124359081116102f15761047590369083016103e6565b9360009460c4359283156106445761048b611d1e565b97610494611d2a565b9661049e8a611d84565b60e4359960028b161561062157811561061c575060a4355b34111561060b57906104da949392915b156105cc575b505060a43580943390611f4e565b80956104e63086611dc4565b80156105bb5760001990810196600116156105a7576105053083611dc4565b6001811161057f575b5050508561051f6105259287611d71565b92611d71565b1161057057508161054d915b6001600160a01b03610541611d42565b16610562573390611e79565b604080519182526020820192909252f35b0390f35b61056a611d42565b90611e79565b60405163f32bec2f60e01b8152fd5b0196506105259161051f906105a16105978a83611d64565b998a943390611e79565b9261050e565b505050831061057057508161054d91610531565b6040516328ebf24760e01b81528590fd5b806105fa575b50506105f36105df611d36565b6001600160a01b0360a4359116338c611cae565b38806104cc565b610604918b611874565b38806105d2565b604051631841b4e160e01b81528890fd5b6104b6565b811561063f575060a4355b340361060b57906104da949392916104c6565b61062c565b6040516298b77960e21b81528590fd5b60c06003198201126102f15760043561066c816102e0565b91602435610679816102e0565b9160443591606435916001600160401b03916084358381116102f157826106a291600401610305565b9390939260a4359182116102f1576106bc916004016103e6565b9091565b346102f15760206103816106e16106d636610654565b919792969395611874565b6122b0565b346102f15760203660031901126102f1576020610704600435613328565b6040519015158152f35b90816101409103126102f15790565b60206003198201126102f157600435906001600160401b0382116102f1576107479160040161070e565b90565b346102f1576107583661071d565b6060810135610766816102e0565b6001600160a01b03339116036108075761078890610782612a05565b906140c3565b61079c816000526002602052604060002090565b54600181146107f557604080518381526020810183905233917fcbfa7d191838ece7ba4783ca3a30afd316619b7f368094b57ee7ffde9a923db191a261054d6107ef836000526002602052604060002090565b60019055565b6040516341a26a6360e01b8152600490fd5b604051634ca8886760e01b8152600490fd5b346102f157602061038161082c3661071d565b610782612a05565b346102f157602061038161085961084a36610654565b90869496989298979397611874565b612062565b634e487b7160e01b600052604160045260246000fd5b6001600160401b03811161088757604052565b61085e565b60c081019081106001600160401b0382111761088757604052565b90601f801991011681019081106001600160401b0382111761088757604052565b60c43590610303826102e0565b60843590610303826102e0565b60e09060031901126102f1576040519060e082018281106001600160401b038211176108875760405281600435815260243561091d816102e0565b602082015260443561092e816102e0565b604082015260643561093f816102e0565b606082015261094c6108d5565b608082015260a43560a082015260c060c435910152565b6101203660031901126102f157610979366108e2565b60e4356001600160401b0381116102f15761055e9161099f6109ac9236906004016103e6565b3392610104359290612b1f565b604080519384526020840192909252908201529081906060820190565b9060406003198301126102f15760043591602435906001600160401b0382116102f1576106bc916004016103e6565b346102f1576020610a14610a0b366109c9565b9092919261336e565b81929192610a29575b50506040519015158152f35b1190503880610a1d565b346102f15760403660031901126102f1576001600160a01b03600435610a58816102e0565b16600052600360205260406000206024356000526020526020604060002054604051908152f35b6101403660031901126102f157610a95366108e2565b60e4356001600160401b0381116102f15761055e91610abb6109ac9236906004016103e6565b610124359291610aca846102e0565b6101043592612b1f565b60c03660031901126102f1576001600160401b036004358181116102f157610b0090369060040161070e565b906024358181116102f157610b199036906004016103e6565b6044939193359283116102f15761055e93610b3b6109ac9436906004016103e6565b339460a43594608435946064359492613749565b346102f15760203660031901126102f157602060405160043542108152f35b346102f1576020610704610b813661071d565b6140a6565b346102f1576020610b99610a0b366109c9565b81929192610bad5750506040519015158152f35b1490503880610a1d565b346102f15760203660031901126102f1576001600160a01b03600435610bdc816102e0565b1660005260016020526020604060002054604051908152f35b346102f1576101603660031901126102f157610c10366108e2565b6001600160401b0360e4358181116102f157610c309036906004016103e6565b90926101243591610c40836102e0565b610144359384116102f15761055e94610aca610c636109ac9636906004016103e6565b906001600160a01b03604087015116611874565b60009103126102f157565b346102f157600080600319360112610cdd57610c9c6142b8565b80546001600160a01b03198116825581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b80fd5b346102f15760203660031901126102f15760043560ff81168091036102f1578015610d615760009033825260016020526040822054908101809111610d5c5733825260016020528060408320556040519081527ffc69110dd11eb791755e4abd6b7d281bae236de95736d38a23782814be5e10db60203392a280f35b611d4e565b60405163bd71636d60e01b8152600490fd5b346102f1576020610704610d86366109c9565b916131d4565b346102f15760403660031901126102f157610019600435610dac816102e0565b610db46142b8565b602435903390611e79565b346102f15760203660031901126102f15760043560005260026020526020604060002054604051908152f35b346102f15760203660031901126102f1576100196004353361316c565b6101003660031901126102f1576020610381600435610e26816102e0565b60243590610e33826102e0565b604435610e3f816102e0565b60e4359260c4359260a435926084359260643592339061195f565b346102f15760003660031901126102f15760206001600160a01b0360005416604051908152f35b6001600160401b0381116108875760051b60200190565b6020908160408183019282815285518094520193019160005b828110610ebf575050505090565b835185529381019392810192600101610eb1565b346102f1576020806003193601126102f1576004356001600160401b0381116102f157366023820112156102f157806004013590610f1082610e81565b91610f1e60405193846108a7565b80835260248484019160051b830101913683116102f157602401905b828210610f595761055e610f4d856135cd565b60405191829182610e98565b81358152908401908401610f3a565b6101403660031901126102f157610f7e366108e2565b60e4356101243561010435610fe4610f94612a05565b85601f190180517f74ab4f0cde46aaf927859983f7d04002116dd057d4c4941f6dbfb775c3e31f4582526101008220915260405161190160f01b8152600281019290925260228201526042902090565b92600160fe1b8316156110d057600160fd1b83161561109d576110239161101f918561101a60608901516001600160a01b031690565b6129ad565b1590565b61108b5761055e92611037915b3391612d31565b604080518481526020810184905291949293917fc3b639f02b125bfa160e50739b8c44eb2d1b6908e2b6d5925c6d770f2ca781279190a1604051938493846040919493926060820195825260208201520152565b6040516317c2b1f160e01b8152600490fd5b6110bf9161101f91856110ba60608901516001600160a01b031690565b61295c565b61108b5761055e9261103791611030565b6110bf9161101f91856110ed60608901516001600160a01b031690565b6128c5565b346102f15760203660031901126102f157600435600052600260205260406000205480156111295760209060405190600019018152f35b604051635c1c6f4b60e11b8152600490fd5b60803660031901126102f157600435611153816102e0565b6064356001600160401b0381116102f157602091611178610381923690600401610305565b9160443590602435906122b0565b9060406003198301126102f15760043561119f816102e0565b91602435906001600160401b0382116102f1576106bc916004016103e6565b346102f1576000806111cf36611186565b90816040519283928337810184815203915af46111ea611e3a565b6040805163032695f960e31b81529215156004840152602483015281906112159060448301906125c3565b0390fd5b346102f15760403660031901126102f15760043566ffffffffffffff8160081c1690600160ff60243592161b1760009133835260036020526040832081845280602052604084205491838084161461127957845260205217604082205580f35b604051637b8fded160e11b8152600490fd5b346102f157602061038161129e36611186565b91613302565b346102f15760206107046112b7366109c9565b91613240565b346102f157600080600319360112610cdd573381526001602052604081205460018101809111610d5c5733825260016020528060408320556040519081527ffc69110dd11eb791755e4abd6b7d281bae236de95736d38a23782814be5e10db60203392a280f35b346102f1576101403660031901126102f157600435611342816102e0565b6024359061134f826102e0565b60443561135b816102e0565b6113636102f6565b9261012435926001600160401b0384116102f15761055e9461138c6113a99536906004016103e6565b949093610104359360e4359360c4359360a4359360843593611858565b6040519081529081906020820190565b346102f15760206113cc610a0b366109c9565b819291926113e05750506040519015158152f35b1090503880610a1d565b346102f15760403660031901126102f157602061070460043561140c816102e0565b602435906001600160a01b031660005260016020526040600020541490565b346102f1576101003660031901126102f1576001600160401b036004358181116102f15761145d90369060040161070e565b906024358181116102f1576114769036906004016103e6565b6044358381116102f15761148e9036906004016103e6565b9290916114996108c8565b9160e4359586116102f15761055e966114b96109ac9736906004016103e6565b96909560a435946084359460643594613651565b60603660031901126102f1576044356001600160401b0381116102f1576103816114fd6020923690600401610305565b90602435600435336122b0565b60e03660031901126102f1576001600160401b036004358181116102f15761153690369060040161070e565b906024358181116102f15761154f9036906004016103e6565b6044939193359283116102f15761055e936115716109ac9436906004016103e6565b60c435949161157f866102e0565b60a435946084359460643594613749565b346102f15760203660031901126102f1576004356115ad816102e0565b6115b56142b8565b6001600160a01b03809116801561160357600080546001600160a01b03198116831782559092167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b60a03660031901126102f15760043561166f816102e0565b60243561167b816102e0565b608435906001600160401b0382116102f1576020926116a1610381933690600401610305565b9290916064359160443591612062565b346102f15760603660031901126102f15760048035906044356001600160401b0381116102f1576116e590369083016103e6565b50506040519060158201907f0dfe1681d21220a7ddca3f43a9059cbb23b872dd000000000000000000000000908184526020838286335afa1561185357603584019460208683808801335afa15611853576020605586018360088801335afa15611853576000811360011461182757507fe34f199b19b2b4f47f68442619d555527d244f78a3297ea89325f843f87b8b54855195602435945b7fff1f98431c8ad98523631ae4a59f267346ea31f9840000000000000000000000875260608120905252336001600160a01b03605586201618611818575082526084356001308214146117f457610019936000601085829560649560146020990152336034830152605482015201915af1611f91565b506044610019936000600c6020958295336010830152603082015201915af1611f91565b635960139160e11b6000908152fd5b947fe34f199b19b2b4f47f68442619d555527d244f78a3297ea89325f843f87b8b54908451969461177e565b611f87565b9091929394959697986107479a61186f9185611874565b61195f565b600092919060e083036118975761188b9350611914565b1561189257565b611908565b9161010081036118f6576040516323f2ebc360e21b8152602092859290819060048401376004019082855af191826118d1575b505061188b565b9091503d156118ed57600191505114601f3d11165b38806118ca565b503b15156118e6565b604051636827585760e01b8152600490fd5b6040513d6000823e3d90fd5b9291602091600091806040519263d505accf60e01b845260048401376004019082865af191826119415750565b9091503d156119595750600160005114601f3d111690565b3b151590565b9192949790966001600160a01b039384811680159081600014611c0b5750863403611bf9575b15611a1057509160009697916101499593889795936040519a8b976309ea6d0960e21b895260048901528660248901528c6044890152606488015260848701528160ff1c601b0160a487015260c486015260018060ff1b031660e485015261012061010485015264a62929c86960d31b610143850152165af115611a07575090565b3d6000823e3d90fd5b939496958581169687158015611bce575b15611b4a57908694939291604051998a9763132da19360e21b8952600489015260248801528b6044880152606487015215600114611b3f573060848601525b601b60ff83901c0160a486015260c48501526001600160ff1b031660e484015261012061010484015264a62929c86960d31b6101438401526000958692839261014992918491165af115611b3757507f000000000000000000000000000000000000000000000000000000000000000016809114611adf575b50505090565b604051630d0e30db60e41b815292828060048688865af115611b2d57604484848094819463a9059cbb60e01b845260048401528860248401525af115611b255780611ad9565b3d90823e3d90fd5b50503d90823e3d90fd5b3d84823e3d90fd5b886084860152611a60565b60009889985099889593916101699895939b6040519c8d99630ad9469b60e21b8b5260048b015260248a015260448901528c6064890152608488015260a48701528160ff1c601b0160c487015260e486015260018060ff1b031661010485015261014061012485015264a62929c86960d31b610163850152165af115611a07575090565b50867f0000000000000000000000000000000000000000000000000000000000000000168814611a21565b604051631841b4e160e01b8152600490fd5b7f0000000000000000000000000000000000000000000000000000000000000000871691908203611c94575060019034611bf957604051906323b872dd60e01b82526004820190338252306024840152896044840152600091828060648682865af115611b2d576024848480948e8295632e1a7d4d60e01b8552525af115611b25575050611985565b905034611bf957611ca9878787163385611cae565b611985565b9260209291606491600093604051926323b872dd60e01b845260048401526024830152604482015282855af19081611cfb575b5015611ce957565b60405163f405907160e01b8152600490fd5b90503d15611d165750600160005114601f3d11165b38611ce1565b3b1515611d10565b602435610747816102e0565b604435610747816102e0565b606435610747816102e0565b608435610747816102e0565b634e487b7160e01b600052601160045260246000fd5b91908203918211610d5c57565b81810292918115918404141715610d5c57565b6001600160a01b03168015908115611d9a575090565b73eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee91501490565b908160209103126102f1575190565b611dcd81611d84565b15611dd757503190565b6020906024604051809481936370a0823160e01b83526001600160a01b038092166004840152165afa90811561189257600091611e12575090565b610747915060203d8111611e33575b611e2b81836108a7565b810190611db5565b503d611e21565b3d15611e74573d906001600160401b0382116108875760405191611e68601f8201601f1916602001846108a7565b82523d6000602084013e565b606090565b82611e8357505050565b611e8c81611d84565b15611edf5750814710611ecd5760008080936001600160a01b038294165af1611eb3611e3a565b5015611ebb57565b60405163b12d13eb60e01b8152600490fd5b604051631e9acf1760e31b8152600490fd5b9160446020926000926001600160a01b036040519263a9059cbb60e01b8452166004830152602482015282855af19081611f2b575b506103035760405163fb7f507960e01b8152600490fd5b90503d15611f465750600160005114601f3d11165b38611f14565b3b1515611f40565b90600093948493816040519788946325b2724960e11b865260048601526024850137602482840101526044019134905af115611a075750565b3d6000803e3d6000fd5b15611f8757600160005114601f3d11163d151715611fab57565b633c9fd93960e21b60005260046000fd5b90919395949295630240bc6b60e21b8252604082600481885afa156118535760603d0361205157600094859460a49486938a8651918293602089015192612046575b633b9aca009293945002920282019102049863022c0d9f60e01b85521580158a026004860152890260248501526044840152608060648401528160848401525af11561185357565b919384935091611ffe565b632173563760e21b60005260046000fd5b92939594959190916dffffffffffffffffffffffffffff821161226b576040519660c0880160405260051b810191813593806000146121ff57346121ee576020600060648b826120d8956323b872dd60e01b83523360048401526001600160a01b038b1660248401528760448401525af1611f91565b9190915b916020809101915b8083106121b157505050600160fe1b821615612183576024929161212891309160a081901c63ffffffff1691600160ff1b8216916001600160a01b0316908a611fbc565b94632e1a7d4d60e01b815285600482015260008093819282735aea5775959fbc2557cc8789bc1bf90a239d9a915af1156118535781808681935af115611853575b821061217157565b60405163f32bec2f60e01b8152600490fd5b906121ab939563ffffffff8260a01c16926001600160a01b03600160ff1b8416931691611fbc565b91612169565b906121e4839594829435956001600160a01b03908c8289169363ffffffff8360a01c1693600160ff1b8416931691611fbc565b93940191906120e4565b631841b4e160e01b60005260046000fd5b503481036121ee57630d0e30db60e41b8852735aea5775959fbc2557cc8789bc1bf90a239d9a9160008060048b85855af11561185357600060448a82809463a9059cbb60e01b83526001600160a01b038a1660048401528660248401525af115611853579190916120dc565b636785a69d60e11b60005260046000fd5b634e487b7160e01b600052603260045260246000fd5b901561229b5790565b61227c565b919081101561229b5760051b0190565b929493919482156124c257341515926000198101908385600160fd1b6122d78585886122a0565b351615159661244d575b60019586841115612405575061230b9190156123ff57305b6123038487612292565b359030612693565b93805b8382106123de57505061233993929161233091866000146123ce5730936122a0565b35903090612693565b935b8410612171576123485750565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690813b156102f157604051632e1a7d4d60e01b815260048101859052916000908390602490829084905af1908115611892576103039285926123b5575b506124d4565b806123c26123c892610874565b80610c77565b386123af565b6001600160a01b038816936122a0565b6123f782966123ef839486896122a0565b353030612693565b95019061230e565b336122f9565b612430965094909350916124299150861561243d5730935b15612436573092612292565b3591612693565b9361233b565b3392612292565b6001600160a01b0388169361241d565b853403611bf9576001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016803b156102f15760008791600460405180948193630d0e30db60e41b83525af18015611892576124af575b506122e1565b806123c26124bc92610874565b386124a9565b6040516333f3e07b60e11b8152600490fd5b8147106125685760008080936001600160a01b038294165af16124f5611e3a565b50156124fd57565b60405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d617920686176652072657665727465640000000000006064820152608490fd5b60405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e63650000006044820152606490fd5b91908260409103126102f1576020825192015190565b919082519283825260005b8481106125ef575050826000602080949584010152601f8019910116010190565b6020818301810151848301820152016125ce565b61074793926001600160a01b0360a09316825260006020830152604082015273fffd8963efd1fc6a506488495d951d5263988d25606082015281608082015201906125c3565b909260a0926001600160a01b0361074796951683521515602083015260408201526401000276a4606082015281608082015201906125c3565b600160ff1b8114610d5c5760000390565b9092600160ff1b83161591908215612765579160006001600160a01b03604095936126ef6126c46126e1999761285e565b88516001600160a01b039098166020890152969889906040820190565b03601f1981018a52896108a7565b61270e875198899788968794630251596160e31b865260048601612649565b0393165af1908115611892576107479161273091600091612735575b50612682565b61280f565b612756915060403d811161275e575b61274e81836108a7565b8101906125ad565b90503861272a565b503d612744565b6127a592509360006001600160a01b03604095936127b36127886127cf9961285e565b88516001600160a01b039096166020870152949687906040820190565b03601f1981018852876108a7565b8651630251596160e31b81529788968795869360048501612603565b0393165af19081156118925761074791612730916000916127f05750612682565b612808915060403d811161275e5761274e81836108a7565b503861272a565b6000811261281a5790565b606460405162461bcd60e51b815260206004820152602060248201527f53616665436173743a2076616c7565206d75737420626520706f7369746976656044820152fd5b6001600160ff1b03811161286f5790565b60405162461bcd60e51b815260206004820152602860248201527f53616665436173743a2076616c756520646f65736e27742066697420696e2061604482015267371034b73a191a9b60c11b6064820152608490fd5b9291906001600160a01b038085169081156129515760006001600160ff1b038616816fa2a8918ca85bafe22016d0b997e4df5f600160ff1b03821061291f575b50501614612916576107479361295c565b50505050600190565b6080602092604051908882528a60ff1c601b0185830152896040830152606082015282805260015afa50513881612905565b505050505050600090565b60a460209293600092969596839760405192630b135d3f60e11b9788855260048501526040602485015260406044850152606484015260848301525afa6129a05750565b600051143d602014169150565b60a560209293600092969596839760405192630b135d3f60e11b9788855260048501526040602485015260416044850152606484015260018060ff1b038116608484015260ff1c601b0160a48301535afa6129a05750565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016301480612af6575b15612a60577f000000000000000000000000000000000000000000000000000000000000000090565b60405160208101907f000000000000000000000000000000000000000000000000000000000000000082527f000000000000000000000000000000000000000000000000000000000000000060408201527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260a08152612af08161088c565b51902090565b507f00000000000000000000000000000000000000000000000000000000000000004614612a37565b9290949391612b2f610f94612a05565b95600160fe1b831615612bc357600160fd1b8316151580612bb8575b61108b57612b719161101f9188612b6c60608901516001600160a01b031690565b612cd8565b61108b57612b7e92612d31565b60408051858152602081018490529294919391927fc3b639f02b125bfa160e50739b8c44eb2d1b6908e2b6d5925c6d770f2ca781279190a1565b506041821415612b4b565b612b719161101f9188612be060608901516001600160a01b031690565b9291906001600160a01b03808516801561295157604091828614928315612ccd575b83612c18575b5050506129165761074793612cd8565b90919250600090805190878281604114612cb55750604014612c8a57505080805b612c49575b501614388080612c08565b816fa2a8918ca85bafe22016d0b997e4df5f600160ff1b03606083015110612c72575b50612c3e565b608082876020945282805260015afa50513881612c6c565b819060208881810135928360ff1c601b01838601528401376001600160ff1b03166060820152612c39565b91809150880135841a60208301528781830137612c39565b604187149350612c02565b6000906020929395949582968060405192630b135d3f60e11b978885526004850152604060248501528160448501526064840137606401915afa6129a05750565b908160209103126102f1575180151581036102f15790565b92906001600160a01b038084161561310f5760608501516001600160a01b03169080612d6760808801516001600160a01b031690565b168015159081613104575b506130f2578551906040916001600160401b0381841c1680151590816130e8575b506130d757612da2908461316c565b60a087015160c088015197906001600160fc1b0386168061306b575097965b88158015613063575b61305257838986602098612de78a8701516001600160a01b031690565b7f000000000000000000000000000000000000000000000000000000000000000088169716908188149081613042575b501561303057505090516323b872dd60e01b81526001600160a01b0387166004820152306024820152604481018b90526000929150878160648186895af1801561189257613013575b50833b1561300f578451632e1a7d4d60e01b8152600481018b905290828260248183895af1918215611892578392839283928e92612ffc575b505af1612ea4611e3a565b5015612feb5782905b0181612ecf612ec383516001600160a01b031690565b6001600160a01b031690565b1480612fe2575b15612fa85750853403612f9757803b156102f1578151630d0e30db60e41b8152906000826004818a855af193841561189257600086948994612f4997612f84575b505163a9059cbb60e01b81526001600160a01b0390921660048301526024820193909352938492839182906044820190565b03925af1801561189257612f5b575050565b81612f7a92903d10612f7d575b612f7281836108a7565b810190612d19565b50565b503d612f68565b806123c2612f9192610874565b38612f17565b8151631841b4e160e01b8152600490fd5b9293505034612fd2575061030391612fcb612ec38693516001600160a01b031690565b3390611cae565b51631841b4e160e01b8152600490fd5b50341515612ed6565b825163b12d13eb60e01b8152600490fd5b806123c261300992610874565b38612e99565b5080fd5b61302990883d8a11612f7d57612f7281836108a7565b5038612e60565b9061303d93959491611cae565b612ead565b600160fc1b161515905038612e17565b83516307b6e79f60e01b8152600490fd5b508715612dca565b9098600160ff1b8716156130a357898211613092579061308c91819a613141565b96612dc1565b845163551a5b4b60e11b8152600490fd5b9097988189116130c657906130bb6130c0928a611d71565b613121565b97612dc1565b8451637f902a9360e01b8152600490fd5b82516362b439dd60e11b8152600490fd5b9050421138612d93565b60405163e8c6632160e01b8152600490fd5b905033141538612d72565b604051630349722f60e51b8152600490fd5b811561312b570490565b634e487b7160e01b600052601260045260246000fd5b919061314c91611d71565b90808201809211610d5c576000198201918211610d5c5761074791613121565b90600160ff66ffffffffffffff8360081c1692161b6001600160a01b0360009316835260036020526040832082845280602052604084205490828083161461127957604093855260205217912055565b909392938483116102f15784116102f1578101920390565b929091600090815b63ffffffff86841c16908115613234576131fb826132019285896131bc565b9061336e565b81613229575b5061321e579160208101809111610d5c57916131dc565b505050915050600190565b600191501438613207565b50505050915050600090565b929091600090815b63ffffffff86841c1690811561329f576131fb826132679285896131bc565b9015908115613293575b50613288579160208101809111610d5c5791613248565b505050915050600090565b60019150141538613271565b50505050915050600190565b916132b59161336e565b819291926132c257505090565b14919050565b916132d29161336e565b819291926132df57505090565b10919050565b916132ef9161336e565b819291926132fc57505090565b11919050565b9061330d9291613593565b90156133165790565b604051631f1b8f6160e01b8152600490fd5b8060d01c42109081613338575090565b61074791506001600160a01b0365ffffffffffff8260a01c1691166001600160a01b031660005260016020526040600020541490565b9061338e61338561337f8385613571565b60e01c90565b63ffffffff1690565b916133998282613541565b92632cc2878d81146135355763bf15fcd88082101561346c5750636fe7b0ba808210156134295750634f38e2b881036133fd57506133e192916133db9161357d565b916132e5565b600090156133f757506001905b60ff6001921690565b906133ee565b6363592c2b14613413576106bc92505b30613593565b505060009042106000146133f757506001908190565b9193929181036134475750613441906133e19361357d565b916132ab565b90919063742611451461345e57506106bc9161340d565b90610d86906133e19361357d565b63ca4ece22808310156134ca575081036134a55750916134976001600160a01b03926134a09461357d565b92909116613302565b600191565b90929063bfa75143146134bc57506106bc9161340d565b906112b7906133e19361357d565b9294939282141590506134eb57506134e5906133e19361357d565b916132c8565b90919063cf6fc6e31461350257506106bc9161340d565b906135186001600160a01b03916133e194613562565b91166001600160a01b031660005260016020526040600020541490565b5050506133e190613328565b90602411613550576004013590565b60405163779ab6bd60e11b8152600490fd5b90604411613550576024013590565b90600411613550573590565b9190916064831061355057606401916063190190565b916000906020928294826040519283375afa60203d141691826135b257565b6000519150565b805182101561229b5760209160051b010190565b80516135d881610e81565b916040916135e8835194856108a7565b8084526135f7601f1991610e81565b016020903682860137600091825b815181101561363f5761361881836135b9565b518452600283528484205461362d82886135b9565b526000198114610d5c57600101613605565b505050505090565b35610747816102e0565b90919293949596979860148b1061368f576001600160a01b0361367a6136889c613683936136a1565b92909116611874565b613749565b9192909190565b60405163367871b760e21b8152600490fd5b916014821061355057823560601c92601401916013190190565b908060209392818452848401376000828201840152601f01601f1916010190565b93909161074798969360e0969386526001600160a01b0380921660208701521660408501526060840152608083015260a08201528160c082015201916136bb565b90926080926001600160a01b0361074797951683526020830152604082015281606082015201916136bb565b92919895979394979690966001600160a01b039182861615613eb757613776613770612a05565b866140c3565b988a9b839161378f8c6000526002602052604060002090565b5460018114613ea55760a089016137a8612ec382613647565b15159081613e90575b50613e7e5780613e7157506137d19161101f918d612be060608c01613647565b613e5f5760c086013592846137e588614015565b9190600160ff1b86161580613e54575b613e14575b5050505b61380787613fe4565b9050613df1575b80158c158103613829576040516271529160e11b8152600490fd5b15613d56575050818b11613d4d575b6138758b61386661385f8c868a8561384f82613fb3565b60c060e0850135940135916141a0565b9c8d611d71565b926001600160ff1b0316611d71565b10613d3b575b89158015613d33575b613d21578980910395600187016138a58a6000526002602052604060002090565b5560608501936138b7612ec386613647565b604080518c8152602081018b9052909891907fb9ed0243fdf00f0545c63a0af8850c090d86bb46682baec4bf3c496814fe4f02908a90a260146138f988614046565b90501015613c96575b61101f61393391602095613917878b01613647565b906139218a613647565b9261392b8c613f26565b949093614133565b613c85578b848c85936014861015613bcc575b50509250505085850161395881613647565b7f000000000000000000000000000000000000000000000000000000000000000083169216821480613bc3575b15613b425750893410613b3157893411613b08575b803b156102f1578551630d0e30db60e41b81526000816004818e865af1801561189257613a1c9284928d92613af5575b50608088016139db612ec382613647565b613ae757506139e987613647565b60008a5180968195829463a9059cbb60e01b845260048401602090939291936001600160a01b0360408201951681520152565b03925af1801561189257613ac9575b50505b6014613a3984614077565b90501015613a49575b5050505050565b613a5e613a58613a6a94614077565b906136a1565b94919290921692613647565b94823b156102f1578895613a9e8b958a94600098948995519a8b998a988997631a8276b160e11b8952339160048a016136dc565b03925af1801561189257613ab6575b80808080613a42565b806123c2613ac392610874565b38613aad565b81613adf92903d10612f7d57612f7281836108a7565b503880613a2b565b613af090613647565b6139e9565b806123c2613b0292610874565b386139ca565b60008080808d3403335af1613b1b611e3a565b5061399a57855163b12d13eb60e01b8152600490fd5b8551631841b4e160e01b8152600490fd5b91505034613bb25761101f613b59613b8d92613647565b60808601613b69612ec382613647565b613ba35750613b7785613647565b905b8b613b8388613f54565b9390923390614133565b15613a2e57835163478a520560e01b8152600490fd5b613bac90613647565b90613b79565b8451631841b4e160e01b8152600490fd5b50341515613985565b600095613bd8916136a1565b9691939094613bfd8d519889978896879463ccee33d760e01b8652336004870161371d565b0393165af190811561189257600091613c68575b5089811180613c53575b80613c38575b613c30575b818b848c84613946565b985038613c26565b50613c4e61101f613c4887613fb3565b90613ec9565b613c21565b50613c6361101f613c4887613f82565b613c1b565b613c7f9150823d8411611e3357611e2b81836108a7565b38613c11565b8651630e1407e960e31b8152600490fd5b925083613ca5613a5888614046565b919290921690613cb488613647565b91803b156102f1578f918f948f9194613cec8f968f936000988995519a8b998a9889976396a10e3360e01b8952339160048a016136dc565b03925af18015611892578d946139339261101f92613d0e575b50915050613902565b806123c2613d1b92610874565b38613d05565b604051637dd2d13b60e11b8152600490fd5b508815613884565b60405163fb8ae12960e01b8152600490fd5b99508099613838565b909a5082809c5060c0613d828c613d6c8a613f82565b9490868c60e08101359687910135978893614179565b9d8e11613db2575b50508a613866613d9a928e611d71565b111561387b5760405163240f51c960e11b8152600490fd5b8b919d50613dd0929c50849081809f613dca8b613fb3565b906141a0565b99808b11613ddf573880613d8a565b6040516324e7108160e21b8152600490fd5b613dfd61101f886140a6565b1561380e57604051635b314e0160e11b8152600490fd5b613e219261367a916136a1565b613e358b6000526002602052604060002090565b54613e42573885816137fa565b60405163c5f2be5160e01b8152600490fd5b5060148310156137f5565b604051635cd5d23360e01b8152600490fd5b91505060001901926137fe565b604051636a6fed7f60e11b8152600490fd5b613e9a9150613647565b8716331415386137b1565b604051633b3bcd9960e21b8152600490fd5b60405163b0c4d05f60e01b8152600490fd5b600182149182613ed857505090565b9091501561229b57356001600160f81b031916600f60fb1b1490565b903590601e19813603018212156102f157018035906001600160401b0382116102f1576020019181360383136102f157565b6101006106bc91613f3b610120820182613ef4565b92909101359163ffffffff8084169360201b16916131bc565b6101006106bc91613f69610120820182613ef4565b92909101359163ffffffff808460201c169316916131bc565b6101006106bc91613f97610120820182613ef4565b92909101359163ffffffff808460401c169360201c16916131bc565b6101006106bc91613fc8610120820182613ef4565b92909101359163ffffffff808460601c169360401c16916131bc565b6101006106bc91613ff9610120820182613ef4565b92909101359163ffffffff808460801c169360601c16916131bc565b6101006106bc9161402a610120820182613ef4565b92909101359163ffffffff808460a01c169360801c16916131bc565b6101006106bc9161405b610120820182613ef4565b92909101359163ffffffff808460c01c169360a01c16916131bc565b6101006106bc9161408c610120820182613ef4565b92909101359163ffffffff8360e01c9360c01c16916131bc565b6131fb6140b291613fe4565b816140bb575090565b600191501490565b90610160610747926101206140da81830183613ef4565b604051939181908537832061014084015260208301377f0a244ca8a150ac294c14fcff9277051ced9a5b23e966a0ff0522e989da23116c81522060405161190160f01b8152600281019290925260228201526042902090565b929480600095602097879495604051966323b872dd60e01b88526004880152602487015260448601526064850137606401925af1600160005114601f3d11163d15171690565b959493929190801561418e57610747966141e1565b50935061074794506130bb9250611d71565b95949392919080156141b557610747966141e1565b5091925092506107479350613141565b8260609694959392823701928352602083015260408201520190565b9194959092939560018414600014614230575050906141ff91613ec9565b1561421e570361420c5790565b6040516349986e7360e01b8152600490fd5b60405163bec74c8560e01b8152600490fd5b926000965086955061424a6142609161426e9396946136a1565b92919690956040519586946020860198896141c5565b03601f1981018352826108a7565b51915afa61427a611e3a565b901580156142ac575b61429a578060208061074793518301019101611db5565b60405163110b8e7360e01b8152600490fd5b50602081511415614283565b6001600160a01b036000541633036142cc57565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fdfea2646970667358221220e7ed78321271520cea5558c75571aa5b1d10a3b066d68d7d00fbfa9c2581d88c64736f6c63430008130033";

type AggregationRouterV5ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AggregationRouterV5ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AggregationRouterV5__factory extends ContractFactory {
  constructor(...args: AggregationRouterV5ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    weth: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<AggregationRouterV5> {
    return super.deploy(weth, overrides || {}) as Promise<AggregationRouterV5>;
  }
  override getDeployTransaction(
    weth: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(weth, overrides || {});
  }
  override attach(address: string): AggregationRouterV5 {
    return super.attach(address) as AggregationRouterV5;
  }
  override connect(signer: Signer): AggregationRouterV5__factory {
    return super.connect(signer) as AggregationRouterV5__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AggregationRouterV5Interface {
    return new utils.Interface(_abi) as AggregationRouterV5Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AggregationRouterV5 {
    return new Contract(address, _abi, signerOrProvider) as AggregationRouterV5;
  }
}
