/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  GenericRouter,
  GenericRouterInterface,
} from "../../../../contracts/Test/AggregationRouterV5.sol/GenericRouter";

const _abi = [
  {
    inputs: [],
    name: "ETHTransferFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidMsgValue",
    type: "error",
  },
  {
    inputs: [],
    name: "ReturnAmountIsNotEnough",
    type: "error",
  },
  {
    inputs: [],
    name: "SafePermitBadLength",
    type: "error",
  },
  {
    inputs: [],
    name: "SafeTransferFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "SafeTransferFromFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroMinReturn",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroReturnAmount",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "contract IAggregationExecutor",
        name: "executor",
        type: "address",
      },
      {
        components: [
          {
            internalType: "contract IERC20",
            name: "srcToken",
            type: "address",
          },
          {
            internalType: "contract IERC20",
            name: "dstToken",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "srcReceiver",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "dstReceiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minReturnAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "flags",
            type: "uint256",
          },
        ],
        internalType: "struct GenericRouter.SwapDescription",
        name: "desc",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "permit",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "swap",
    outputs: [
      {
        internalType: "uint256",
        name: "returnAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "spentAmount",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60808060405234610016576106a6908161001c8239f35b600080fdfe6080604090808252600480361015610022575b505050361561002057600080fd5b005b600090813560e01c6312aa3caf1461003a5750610012565b6101403660031901126103e3578035916001600160a01b0380841684036103e35760e03660231901126103e35767ffffffffffffffff92610104358481116103df5761008990369083016103e7565b969094610124359081116103db576100a490369084016103e7565b909660c4359283156103ce57506024359785891689036103ca576044359786891689036102d4576100d48a610459565b60e4359b9060028d16156103a75780156103a15760a4355b34111561039157918993918e9695935b15610247575b50509082918460a43596519586926325b2724960e11b8452338b850152602484013786602482840101526044019134905af11561023f5750809661014630886104c2565b90811561022f5760001991820199600116156102195761016630826104c2565b90600182116101d5575b50505086610181610187928a610430565b92610430565b116101c757509184916101ad935b61019d61041a565b16151590506101b957339061054d565b82519182526020820152f35b6101c161041a565b9061054d565b865163f32bec2f60e01b8152fd5b909291985060018383030182811161020657916102006101819261018795949b8c950190339061054d565b92610170565b634e487b7160e01b885260118652602488fd5b50505086106101c757509184916101ad93610195565b8a516328ebf24760e01b81528590fd5b3d86823e3d90fd5b80969395969492946102d8575b505050506064358681168091036102d4578760646020928e51906323b872dd60e01b8252338a830152602482015260a4356044820152828d5af1806102b5575b156102a5578a929187913880610102565b8a5163f405907160e01b81528590fd5b503d156102cb576001875114601f3d1116610294565b883b1515610294565b8780fd5b60e081036103385780602094519263d505accf60e01b84528a840137880190828d5af180610319575b1561030f578a873880610254565b8a513d88823e3d90fd5b503d1561032f576001875114601f3d1116610301565b883b1515610301565b90925090506101008103610381578c516323f2ebc360e21b81526020928a929081908a840137880190828d5af1801561030157503d1561032f576001875114601f3d1116610301565b8c51636827585760e01b81528790fd5b8d51631841b4e160e01b81528890fd5b896100ec565b80156103c45760a4355b340361039157918993918e9695936100fc565b896103b1565b8680fd5b6298b77960e21b81528490fd5b8480fd5b8380fd5b5080fd5b9181601f840112156104155782359167ffffffffffffffff8311610415576020838186019501011161041557565b600080fd5b6084356001600160a01b03811681036104155790565b8181029291811591840414171561044357565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b0316801590811561046f575090565b73eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee91501490565b90601f8019910116810190811067ffffffffffffffff8211176104ac57604052565b634e487b7160e01b600052604160045260246000fd5b6104cb81610459565b156104d557503190565b6020906024604051809481936370a0823160e01b83526001600160a01b038092166004840152165afa90811561054157600091610510575090565b906020823d8211610539575b816105296020938361048a565b8101031261053657505190565b80fd5b3d915061051c565b6040513d6000823e3d90fd5b8261055757505050565b61056081610459565b1561060157508147106105ef576001600160a01b0390600080809481948294165af1903d156105e9573d9067ffffffffffffffff82116105d557604051916105b2601f8201601f19166020018461048a565b825260203d92013e5b156105c3575b565b60405163b12d13eb60e01b8152600490fd5b634e487b7160e01b81526041600452602490fd5b506105bb565b604051631e9acf1760e31b8152600490fd5b9160446020926000926001600160a01b036040519263a9059cbb60e01b8452166004830152602482015282855af1908161064d575b506105c15760405163fb7f507960e01b8152600490fd5b90503d156106685750600160005114601f3d11165b38610636565b3b151561066256fea2646970667358221220ca05a56fa0b675762f66f514ef164b48815a21cd309059b47392c79f788ac19e64736f6c63430008130033";

type GenericRouterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GenericRouterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GenericRouter__factory extends ContractFactory {
  constructor(...args: GenericRouterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<GenericRouter> {
    return super.deploy(overrides || {}) as Promise<GenericRouter>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): GenericRouter {
    return super.attach(address) as GenericRouter;
  }
  override connect(signer: Signer): GenericRouter__factory {
    return super.connect(signer) as GenericRouter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GenericRouterInterface {
    return new utils.Interface(_abi) as GenericRouterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GenericRouter {
    return new Contract(address, _abi, signerOrProvider) as GenericRouter;
  }
}
