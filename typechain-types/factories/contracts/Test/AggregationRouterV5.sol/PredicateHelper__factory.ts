/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  PredicateHelper,
  PredicateHelperInterface,
} from "../../../../contracts/Test/AggregationRouterV5.sol/PredicateHelper";

const _abi = [
  {
    inputs: [],
    name: "AdvanceNonceFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "ArbitraryStaticCallFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "IncorrectDataLength",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "maker",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newNonce",
        type: "uint256",
      },
    ],
    name: "NonceIncreased",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "amount",
        type: "uint8",
      },
    ],
    name: "advanceNonce",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "offsets",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "and",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "arbitraryStaticCall",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "eq",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "gt",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "increaseNonce",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "lt",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "nonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "makerAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "makerNonce",
        type: "uint256",
      },
    ],
    name: "nonceEquals",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "offsets",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "or",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "time",
        type: "uint256",
      },
    ],
    name: "timestampBelow",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "timeNonceAccount",
        type: "uint256",
      },
    ],
    name: "timestampBelowAndNonceEquals",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608080604052346100165761085f908161001c8239f35b600080fdfe6040608081526004908136101561001557600080fd5b600091823560e01c9081632cc2878d146103765781634f38e2b81461034457816363592c2b146103235781636fe7b0ba146102f157816370ae92d2146102bb57816372c244a8146102325781637426114514610216578163bf15fcd8146101c7578163bfa75143146101ab578163c53a02921461013057508063ca4ece22146100f15763cf6fc6e3146100a757600080fd5b346100ed57806003193601126100ed576020906100e46100c56103fd565b602435906001600160a01b031660005260006020526040600020541490565b90519015158152f35b5080fd5b50903461012d57602061011083610107366103c9565b909391936105de565b81939193610123575b5050519015158152f35b1091508380610119565b80fd5b919050346101a757826003193601126101a757338352826020528083205491600183018093116101945750338352826020528181842055519081527ffc69110dd11eb791755e4abd6b7d281bae236de95736d38a23782814be5e10db60203392a280f35b634e487b7160e01b845260119052602483fd5b8280fd5b5050346100ed576020906100e46101c1366103c9565b916104ad565b9050346101a757816003193601126101a7576101e16103fd565b926024359067ffffffffffffffff821161012d57509261020961020f92602095369101610396565b9161056f565b9051908152f35b5050346100ed576020906100e461022c366103c9565b9161042b565b919050346101a75760203660031901126101a75781359160ff83168093036102b75782156102a95733845283602052818420549283018093116101945750338352826020528181842055519081527ffc69110dd11eb791755e4abd6b7d281bae236de95736d38a23782814be5e10db60203392a280f35b905163bd71636d60e01b8152fd5b8380fd5b5050346100ed5760203660031901126100ed57806020926001600160a01b036102e26103fd565b16815280845220549051908152f35b82843461012d57602061030783610107366103c9565b81939193610319575050519015158152f35b1491508380610119565b919050346101a75760203660031901126101a7576020925051903542108152f35b82843461012d57602061035a83610107366103c9565b8193919361036c575050519015158152f35b1191508380610119565b82843461012d57602036600319011261012d57506100e460209235610595565b9181601f840112156103c45782359167ffffffffffffffff83116103c457602083818601950101116103c457565b600080fd5b9060406003198301126103c457600435916024359067ffffffffffffffff82116103c4576103f991600401610396565b9091565b600435906001600160a01b03821682036103c457565b909392938483116103c45784116103c4578101920390565b929091600090815b63ffffffff86841c169081156104a15761045282610458928589610413565b906105de565b81610496575b5061048b5791602081018091116104755791610433565b634e487b7160e01b600052601160045260246000fd5b505050915050600190565b60019150143861045e565b50505050915050600090565b929091600090815b63ffffffff86841c1690811561050c57610452826104d4928589610413565b9015908115610500575b506104f557916020810180911161047557916104b5565b505050915050600090565b600191501415386104de565b50505050915050600190565b91610522916105de565b8192919261052f57505090565b14919050565b9161053f916105de565b8192919261054c57505090565b10919050565b9161055c916105de565b8192919261056957505090565b11919050565b9061057a9291610803565b90156105835790565b604051631f1b8f6160e01b8152600490fd5b8060d01c421090816105a5575090565b6105db91506001600160a01b0365ffffffffffff8260a01c1691166001600160a01b031660005260006020526040600020541490565b90565b906105fe6105f56105ef83856107e1565b60e01c90565b63ffffffff1690565b9161060982826107b1565b92632cc2878d81146107a55763bf15fcd8808210156106dc5750636fe7b0ba808210156106995750634f38e2b8810361066d5750610651929161064b916107ed565b91610552565b6000901561066757506001905b60ff6001921690565b9061065e565b6363592c2b14610683576103f992505b30610803565b5050600090421060001461066757506001908190565b9193929181036106b757506106b190610651936107ed565b91610518565b9091906374261145146106ce57506103f99161067d565b9061022c90610651936107ed565b63ca4ece228083101561073a575081036107155750916107076001600160a01b0392610710946107ed565b9290911661056f565b600191565b90929063bfa751431461072c57506103f99161067d565b906101c190610651936107ed565b92949392821415905061075b575061075590610651936107ed565b91610535565b90919063cf6fc6e31461077257506103f99161067d565b906107886001600160a01b0391610651946107d2565b91166001600160a01b031660005260006020526040600020541490565b50505061065190610595565b906024116107c0576004013590565b60405163779ab6bd60e11b8152600490fd5b906044116107c0576024013590565b906004116107c0573590565b919091606483106107c057606401916063190190565b916000906020928294826040519283375afa60203d1416918261082257565b600051915056fea2646970667358221220544a4e9ce953acf916fd9b78fbde28c537c889ff0de6f6df60c849b218cf85db64736f6c63430008130033";

type PredicateHelperConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PredicateHelperConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PredicateHelper__factory extends ContractFactory {
  constructor(...args: PredicateHelperConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<PredicateHelper> {
    return super.deploy(overrides || {}) as Promise<PredicateHelper>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): PredicateHelper {
    return super.attach(address) as PredicateHelper;
  }
  override connect(signer: Signer): PredicateHelper__factory {
    return super.connect(signer) as PredicateHelper__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PredicateHelperInterface {
    return new utils.Interface(_abi) as PredicateHelperInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PredicateHelper {
    return new Contract(address, _abi, signerOrProvider) as PredicateHelper;
  }
}
