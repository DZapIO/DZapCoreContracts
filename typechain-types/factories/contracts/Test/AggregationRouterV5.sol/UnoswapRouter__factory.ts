/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  UnoswapRouter,
  UnoswapRouterInterface,
} from "../../../../contracts/Test/AggregationRouterV5.sol/UnoswapRouter";

const _abi = [
  {
    inputs: [],
    name: "ReservesCallFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "ReturnAmountIsNotEnough",
    type: "error",
  },
  {
    inputs: [],
    name: "SafePermitBadLength",
    type: "error",
  },
  {
    inputs: [],
    name: "SwapAmountTooLarge",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "srcToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minReturn",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "pools",
        type: "uint256[]",
      },
    ],
    name: "unoswap",
    outputs: [
      {
        internalType: "uint256",
        name: "returnAmount",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "srcToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minReturn",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "pools",
        type: "uint256[]",
      },
    ],
    name: "unoswapTo",
    outputs: [
      {
        internalType: "uint256",
        name: "returnAmount",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "srcToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minReturn",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "pools",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "permit",
        type: "bytes",
      },
    ],
    name: "unoswapToWithPermit",
    outputs: [
      {
        internalType: "uint256",
        name: "returnAmount",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6080806040523461001657610610908161001c8239f35b600080fdfe6080604052600436101561001b575b361561001957600080fd5b005b60003560e01c80630502b1c51461004b5780633c15fd91146100465763f78dc2530361000e5761018e565b6100e7565b60803660031901126100a057600435610063816100a5565b60643567ffffffffffffffff81116100a0576020916100896100989236906004016100b6565b916044359060243590336103c0565b604051908152f35b600080fd5b6001600160a01b038116036100a057565b9181601f840112156100a05782359167ffffffffffffffff83116100a0576020808501948460051b0101116100a057565b346100a05760c03660031901126100a057600435610104816100a5565b60243590610111826100a5565b67ffffffffffffffff6084358181116100a0576101329036906004016100b6565b60a43593918385116100a057366023860112156100a05784600401359384116100a05736602485870101116100a05761018a95602461017a96019360643591604435916101e9565b6040519081529081906020820190565b0390f35b60a03660031901126100a0576004356101a6816100a5565b6024356101b2816100a5565b6084359067ffffffffffffffff82116100a0576020926101d96100989336906004016100b6565b92909160643591604435916103c0565b969590919293949560009160e082146000146102275761020a925083610295565b1561021b57610218956103c0565b90565b6040513d6000823e3d90fd5b906101008103610283576040516323f2ebc360e21b8152602092849290819060048401376004019082865af19081610260575b5061020a565b90503d15610279576001905114601f3d11165b3861025a565b50803b1515610273565b604051636827585760e01b8152600490fd5b9291602091600091806040519263d505accf60e01b845260048401376004019082865af191826102c25750565b9091503d156102da5750600160005114601f3d111690565b3b151590565b3d6000803e3d6000fd5b156102e057600160005114601f3d11163d15171561030457565b633c9fd93960e21b60005260046000fd5b90919395949295630240bc6b60e21b8252604082600481885afa1561039f5760603d036103af57600094859460a49486938a86519182936020890151926103a4575b633b9aca009293945002920282019102049863022c0d9f60e01b85521580158a026004860152890260248501526044840152608060648401528160848401525af11561039f57565b6102e0565b919384935091610357565b632173563760e21b60005260046000fd5b92939594959190916dffffffffffffffffffffffffffff82116105c9576040519660c0880160405260051b8101918135938060001461055d573461054c576020600060648b82610436956323b872dd60e01b83523360048401526001600160a01b038b1660248401528760448401525af16102ea565b9190915b916020809101915b80831061050f57505050600160fe1b8216156104e1576024929161048691309160a081901c63ffffffff1691600160ff1b8216916001600160a01b0316908a610315565b94632e1a7d4d60e01b815285600482015260008093819282735aea5775959fbc2557cc8789bc1bf90a239d9a915af11561039f5781808681935af11561039f575b82106104cf57565b60405163f32bec2f60e01b8152600490fd5b90610509939563ffffffff8260a01c16926001600160a01b03600160ff1b8416931691610315565b916104c7565b90610542839594829435956001600160a01b03908c8289169363ffffffff8360a01c1693600160ff1b8416931691610315565b9394019190610442565b631841b4e160e01b60005260046000fd5b5034810361054c57630d0e30db60e41b8852735aea5775959fbc2557cc8789bc1bf90a239d9a9160008060048b85855af11561039f57600060448a82809463a9059cbb60e01b83526001600160a01b038a1660048401528660248401525af11561039f5791909161043a565b636785a69d60e11b60005260046000fdfea264697066735822122065578eb8b82fb0be8b5f3d438f705ef093c22f788a525fb5277669ccea6aea4364736f6c63430008130033";

type UnoswapRouterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UnoswapRouterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class UnoswapRouter__factory extends ContractFactory {
  constructor(...args: UnoswapRouterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<UnoswapRouter> {
    return super.deploy(overrides || {}) as Promise<UnoswapRouter>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): UnoswapRouter {
    return super.attach(address) as UnoswapRouter;
  }
  override connect(signer: Signer): UnoswapRouter__factory {
    return super.connect(signer) as UnoswapRouter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UnoswapRouterInterface {
    return new utils.Interface(_abi) as UnoswapRouterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UnoswapRouter {
    return new Contract(address, _abi, signerOrProvider) as UnoswapRouter;
  }
}
