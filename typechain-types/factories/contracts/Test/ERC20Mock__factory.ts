/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  ERC20Mock,
  ERC20MockInterface,
} from "../../../contracts/Test/ERC20Mock";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "decimal",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "supply",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "InvalidShortString",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "str",
        type: "string",
      },
    ],
    name: "StringTooLong",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "EIP712DomainChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "eip712Domain",
    outputs: [
      {
        internalType: "bytes1",
        name: "fields",
        type: "bytes1",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "version",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "verifyingContract",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        internalType: "uint256[]",
        name: "extensions",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x61016060409080825234620005435762001c6e803803809162000023828562000548565b83398101608082820312620005435781516001600160401b0393908481116200054357826200005491850162000591565b91602090818501519086821162000543576200007291860162000591565b90828501519460ff861680960362000543576060015191835196848801888110828211176200044257855260019687895283890197603160f81b8952875190838211620004425760038054928284811c9416801562000538575b888510146200052257601f93848111620004d7575b508088858211600114620004645760009162000458575b5060001982841b1c191690831b1781555b855190858211620004425760049687548481811c9116801562000437575b8a8210146200042257858111620003d7575b5088908584116001146200036c5793839491849260009562000360575b50501b92600019911b1c19161784555b60058054336001600160a01b0319821681179092556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3620001b488620005ec565b98610120998a52620001c68b62000794565b98610140998a528681519101209a8b60e052519020916101009a838c524660a052885193878501917f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f83528a86015260608501524660808501523060a085015260a0845260c0840194848610908611176200034b57848952835190206080523060c05260ff19600a541617600a5533156200030a5750505060025490838201809211620002f557506000917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9160025533835282815284832084815401905584519384523393a351916113829384620008ec8539608051846110a4015260a05184611170015260c05184611075015260e051846110f301525183611119015251826105cb015251816105f50152f35b601190634e487b7160e01b6000525260246000fd5b610104606493927f45524332303a206d696e7420746f20746865207a65726f206164647265737300928762461bcd60e51b865260c483015260e48201520152fd5b604186634e487b7160e01b6000525260246000fd5b01519350388062000156565b9190601f1984169289600052848b6000209460005b8d89838310620003bf5750505010620003a4575b50505050811b01845562000166565b01519060f884600019921b161c191690553880808062000395565b86860151895590970196948501948893500162000381565b88600052896000208680860160051c8201928c871062000418575b0160051c019085905b8281106200040b57505062000139565b60008155018590620003fb565b92508192620003f2565b602289634e487b7160e01b6000525260246000fd5b90607f169062000127565b634e487b7160e01b600052604160045260246000fd5b90508b015138620000f8565b8492508c90601f198316856000528b600020928c6000915b838310620004b55750505083116200049c575b5050811b01815562000109565b8d015160001983861b60f8161c1916905538806200048f565b948482949597989293960151815501940192019086949392918f8d906200047c565b82600052886000208580840160051c8201928b851062000518575b0160051c019084905b8281106200050b575050620000e1565b60008155018490620004fb565b92508192620004f2565b634e487b7160e01b600052602260045260246000fd5b93607f1693620000cc565b600080fd5b601f909101601f19168101906001600160401b038211908210176200044257604052565b60005b838110620005805750506000910152565b81810151838201526020016200056f565b81601f82011215620005435780516001600160401b038111620004425760405192620005c8601f8301601f19166020018562000548565b818452602082840101116200054357620005e991602080850191016200056c565b90565b8051602090818110156200066a5750601f8251116200062857808251920151908083106200061957501790565b82600019910360031b1b161790565b6044906200065c9260405193849263305a27a960e01b8452806004850152825192839182602487015286860191016200056c565b601f01601f19168101030190fd5b906001600160401b0382116200044257600654926001938481811c9116801562000789575b838210146200052257601f81116200074f575b5081601f8411600114620006e35750928293918392600094620006d7575b50501b916000199060031b1c19161760065560ff90565b015192503880620006c0565b919083601f198116600660005284600020946000905b888383106200073457505050106200071a575b505050811b0160065560ff90565b015160001960f88460031b161c191690553880806200070c565b858701518855909601959485019487935090810190620006f9565b600660005284601f84600020920160051c820191601f860160051c015b8281106200077c575050620006a2565b600081550185906200076c565b90607f16906200068f565b805160209081811015620007c15750601f8251116200062857808251920151908083106200061957501790565b906001600160401b0382116200044257600754926001938481811c91168015620008e0575b838210146200052257601f8111620008a6575b5081601f84116001146200083a57509282939183926000946200082e575b50501b916000199060031b1c19161760075560ff90565b01519250388062000817565b919083601f198116600760005284600020946000905b888383106200088b575050501062000871575b505050811b0160075560ff90565b015160001960f88460031b161c1916905538808062000863565b85870151885590960195948501948793509081019062000850565b600760005284601f84600020920160051c820191601f860160051c015b828110620008d3575050620007f9565b60008155018590620008c3565b90607f1690620007e656fe6080604081815260048036101561001557600080fd5b600092833560e01c90816306fdde0314610a0757508063095ea7b3146109dd57806318160ddd146109be57806323b872dd146108f3578063313ce567146108d15780633644e515146108ad578063395093511461085e57806340c10f19146107a057806370a082311461076a578063715018a6146107085780637ecebe00146106d157806384b0196e146105b45780638da5cb5b1461058c57806395d89b41146104a2578063a457c2d7146103fa578063a9059cbb146103c9578063d505accf1461020f578063dd62ed3e146101c25763f2fde38b146100f457600080fd5b346101be5760203660031901126101be5761010d610b18565b90610116610b49565b6001600160a01b0380921692831561016c575050600554826bffffffffffffffffffffffff60a01b821617600555167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b906020608492519162461bcd60e51b8352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152fd5b8280fd5b50503461020b578060031936011261020b57806020926101e0610b18565b6101e8610b33565b6001600160a01b0391821683526001865283832091168252845220549051908152f35b5080fd5b5082903461020b5760e036600319011261020b5761022b610b18565b610233610b33565b906044359260643560843560ff811681036103c557814211610382576001600160a01b0390818516928389526008602052898920908154916001830190558a519060208201927f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98452868d840152858a1660608401528a608084015260a083015260c082015260c0815260e0810181811067ffffffffffffffff82111761036f578b525190206103179161030f916102e961106b565b908c519161190160f01b83526002830152602282015260c43591604260a4359220610fdc565b919091610ec2565b160361032c5750610329939450610dc0565b80f35b606490602087519162461bcd60e51b8352820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e617475726500006044820152fd5b634e487b7160e01b8b526041875260248bfd5b875162461bcd60e51b8152602081850152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e650000006044820152606490fd5b8680fd5b50503461020b578060031936011261020b576020906103f36103e9610b18565b6024359033610c52565b5160018152f35b50823461049f578260031936011261049f57610414610b18565b91836024359233815260016020528181206001600160a01b038616825260205220549082821061044e576020856103f38585038733610dc0565b608490602086519162461bcd60e51b8352820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152fd5b80fd5b5090346101be57826003193601126101be57805191838154906104c482610ba1565b808652926001928084169081156105615750600114610505575b61050186866104ef828b0383610c0d565b51918291602083526020830190610ad8565b0390f35b815294507f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b5b828610610549575050506104ef8260206105019582010194386104de565b8054602087870181019190915290950194810161052b565b90506105019750869350602092506104ef94915060ff191682840152151560051b82010194386104de565b50503461020b578160031936011261020b576020906001600160a01b03600554169051908152f35b5090346101be57826003193601126101be576105ef7f0000000000000000000000000000000000000000000000000000000000000000611196565b926106197f0000000000000000000000000000000000000000000000000000000000000000611292565b908251926020928385019585871067ffffffffffffffff8811176106be57509280610674838896610667998b9996528686528151998a99600f60f81b8b5260e0868c015260e08b0190610ad8565b91898303908a0152610ad8565b924660608801523060808801528460a088015286840360c088015251928381520193925b8281106106a757505050500390f35b835185528695509381019392810192600101610698565b634e487b7160e01b845260419052602483fd5b50503461020b57602036600319011261020b57806020926001600160a01b036106f8610b18565b1681526008845220549051908152f35b833461049f578060031936011261049f57610721610b49565b806001600160a01b036005546bffffffffffffffffffffffff60a01b8116600555167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b50503461020b57602036600319011261020b57806020926001600160a01b03610791610b18565b16815280845220549051908152f35b5090346101be57806003193601126101be576107ba610b18565b906001600160a01b03602435921692831561081c57506020827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef926108028795600254610c2f565b60025585855284835280852082815401905551908152a380f35b6020606492519162461bcd60e51b8352820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152fd5b50503461020b578060031936011261020b576103f36020926108a6610881610b18565b91338152600186528481206001600160a01b0384168252865284602435912054610c2f565b9033610dc0565b50503461020b578160031936011261020b576020906108ca61106b565b9051908152f35b50503461020b578160031936011261020b5760209060ff600a54169051908152f35b5082903461020b57606036600319011261020b5761090f610b18565b610917610b33565b9184604435946001600160a01b038416815260016020528181203382526020522054906000198203610952575b6020866103f3878787610c52565b84821061097b5750918391610970602096956103f395033383610dc0565b919394819350610944565b606490602087519162461bcd60e51b8352820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152fd5b50503461020b578160031936011261020b576020906002549051908152f35b50503461020b578060031936011261020b576020906103f36109fd610b18565b6024359033610dc0565b849084346101be57826003193601126101be5782600354610a2781610ba1565b80855291600191808316908115610ab05750600114610a53575b5050506104ef82610501940383610c0d565b9450600385527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5b828610610a98575050506104ef8260206105019582010194610a41565b80546020878701810191909152909501948101610a7b565b6105019750869350602092506104ef94915060ff191682840152151560051b82010194610a41565b919082519283825260005b848110610b04575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201610ae3565b600435906001600160a01b0382168203610b2e57565b600080fd5b602435906001600160a01b0382168203610b2e57565b6001600160a01b03600554163303610b5d57565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b90600182811c92168015610bd1575b6020831014610bbb57565b634e487b7160e01b600052602260045260246000fd5b91607f1691610bb0565b6040810190811067ffffffffffffffff821117610bf757604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff821117610bf757604052565b91908201809211610c3c57565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b03809116918215610d6d5716918215610d1c57600082815280602052604081205491808310610cc857604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef958760209652828652038282205586815220818154019055604051908152a3565b60405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608490fd5b60405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608490fd5b60405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608490fd5b6001600160a01b03809116918215610e715716918215610e215760207f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925918360005260018252604060002085600052825280604060002055604051908152a3565b60405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608490fd5b60405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608490fd5b6005811015610fc65780610ed35750565b60018103610f205760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606490fd5b60028103610f6d5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606490fd5b600314610f7657565b60405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608490fd5b634e487b7160e01b600052602160045260246000fd5b9291907f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831161105f5791608094939160ff602094604051948552168484015260408301526060820152600093849182805260015afa156110525781516001600160a01b0381161561104c579190565b50600190565b50604051903d90823e3d90fd5b50505050600090600390565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630148061116d575b156110c6577f000000000000000000000000000000000000000000000000000000000000000090565b60405160208101907f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f82527f000000000000000000000000000000000000000000000000000000000000000060408201527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260a0815260c0810181811067ffffffffffffffff821117610bf75760405251902090565b507f0000000000000000000000000000000000000000000000000000000000000000461461109d565b60ff81146111d45760ff811690601f82116111c257604051916111b883610bdb565b8252602082015290565b604051632cd44ac360e21b8152600490fd5b506040516006548160006111e783610ba1565b808352926001908181169081156112705750600114611211575b5061120e92500382610c0d565b90565b6006600090815291507ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f5b848310611255575061120e935050810160200138611201565b8193509081602092548385890101520191019091849261123c565b90506020925061120e94915060ff191682840152151560051b82010138611201565b60ff81146112b45760ff811690601f82116111c257604051916111b883610bdb565b506040516007548160006112c783610ba1565b8083529260019081811690811561127057506001146112ed575061120e92500382610c0d565b6007600090815291507fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c6885b848310611331575061120e935050810160200138611201565b8193509081602092548385890101520191019091849261131856fea264697066735822122026869a15a226ea733b11ff31b3c84d8c1ea34b928ae3d2e2a738186d87e11a2664736f6c63430008130033";

type ERC20MockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC20MockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC20Mock__factory extends ContractFactory {
  constructor(...args: ERC20MockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    name: PromiseOrValue<string>,
    symbol: PromiseOrValue<string>,
    decimal: PromiseOrValue<BigNumberish>,
    supply: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC20Mock> {
    return super.deploy(
      name,
      symbol,
      decimal,
      supply,
      overrides || {}
    ) as Promise<ERC20Mock>;
  }
  override getDeployTransaction(
    name: PromiseOrValue<string>,
    symbol: PromiseOrValue<string>,
    decimal: PromiseOrValue<BigNumberish>,
    supply: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      name,
      symbol,
      decimal,
      supply,
      overrides || {}
    );
  }
  override attach(address: string): ERC20Mock {
    return super.attach(address) as ERC20Mock;
  }
  override connect(signer: Signer): ERC20Mock__factory {
    return super.connect(signer) as ERC20Mock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC20MockInterface {
    return new utils.Interface(_abi) as ERC20MockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC20Mock {
    return new Contract(address, _abi, signerOrProvider) as ERC20Mock;
  }
}
