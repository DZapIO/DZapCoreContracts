/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  Permit2,
  Permit2Interface,
} from "../../../../contracts/Test/Permit2Mock.sol/Permit2";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "AllowanceExpired",
    type: "error",
  },
  {
    inputs: [],
    name: "ExcessiveInvalidation",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "InsufficientAllowance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "maxAmount",
        type: "uint256",
      },
    ],
    name: "InvalidAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidContractSignature",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidNonce",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidSignature",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidSignatureLength",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidSigner",
    type: "error",
  },
  {
    inputs: [],
    name: "LengthMismatch",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "signatureDeadline",
        type: "uint256",
      },
    ],
    name: "SignatureExpired",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint160",
        name: "amount",
        type: "uint160",
      },
      {
        indexed: false,
        internalType: "uint48",
        name: "expiration",
        type: "uint48",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "Lockdown",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint48",
        name: "newNonce",
        type: "uint48",
      },
      {
        indexed: false,
        internalType: "uint48",
        name: "oldNonce",
        type: "uint48",
      },
    ],
    name: "NonceInvalidation",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint160",
        name: "amount",
        type: "uint160",
      },
      {
        indexed: false,
        internalType: "uint48",
        name: "expiration",
        type: "uint48",
      },
      {
        indexed: false,
        internalType: "uint48",
        name: "nonce",
        type: "uint48",
      },
    ],
    name: "Permit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "word",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "mask",
        type: "uint256",
      },
    ],
    name: "UnorderedNonceInvalidation",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint160",
        name: "amount",
        type: "uint160",
      },
      {
        internalType: "uint48",
        name: "expiration",
        type: "uint48",
      },
      {
        internalType: "uint48",
        name: "nonce",
        type: "uint48",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint160",
        name: "amount",
        type: "uint160",
      },
      {
        internalType: "uint48",
        name: "expiration",
        type: "uint48",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint48",
        name: "newNonce",
        type: "uint48",
      },
    ],
    name: "invalidateNonces",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "wordPos",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "mask",
        type: "uint256",
      },
    ],
    name: "invalidateUnorderedNonces",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "address",
            name: "spender",
            type: "address",
          },
        ],
        internalType: "struct IAllowanceTransfer.TokenSpenderPair[]",
        name: "approvals",
        type: "tuple[]",
      },
    ],
    name: "lockdown",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "nonceBitmap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "uint160",
                name: "amount",
                type: "uint160",
              },
              {
                internalType: "uint48",
                name: "expiration",
                type: "uint48",
              },
              {
                internalType: "uint48",
                name: "nonce",
                type: "uint48",
              },
            ],
            internalType: "struct IAllowanceTransfer.PermitDetails[]",
            name: "details",
            type: "tuple[]",
          },
          {
            internalType: "address",
            name: "spender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "sigDeadline",
            type: "uint256",
          },
        ],
        internalType: "struct IAllowanceTransfer.PermitBatch",
        name: "permitBatch",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "uint160",
                name: "amount",
                type: "uint160",
              },
              {
                internalType: "uint48",
                name: "expiration",
                type: "uint48",
              },
              {
                internalType: "uint48",
                name: "nonce",
                type: "uint48",
              },
            ],
            internalType: "struct IAllowanceTransfer.PermitDetails",
            name: "details",
            type: "tuple",
          },
          {
            internalType: "address",
            name: "spender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "sigDeadline",
            type: "uint256",
          },
        ],
        internalType: "struct IAllowanceTransfer.PermitSingle",
        name: "permitSingle",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
            ],
            internalType: "struct ISignatureTransfer.TokenPermissions",
            name: "permitted",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
        ],
        internalType: "struct ISignatureTransfer.PermitTransferFrom",
        name: "permit",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "requestedAmount",
            type: "uint256",
          },
        ],
        internalType: "struct ISignatureTransfer.SignatureTransferDetails",
        name: "transferDetails",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "permitTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
            ],
            internalType: "struct ISignatureTransfer.TokenPermissions[]",
            name: "permitted",
            type: "tuple[]",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
        ],
        internalType: "struct ISignatureTransfer.PermitBatchTransferFrom",
        name: "permit",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "requestedAmount",
            type: "uint256",
          },
        ],
        internalType: "struct ISignatureTransfer.SignatureTransferDetails[]",
        name: "transferDetails",
        type: "tuple[]",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "permitTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
            ],
            internalType: "struct ISignatureTransfer.TokenPermissions",
            name: "permitted",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
        ],
        internalType: "struct ISignatureTransfer.PermitTransferFrom",
        name: "permit",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "requestedAmount",
            type: "uint256",
          },
        ],
        internalType: "struct ISignatureTransfer.SignatureTransferDetails",
        name: "transferDetails",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "witness",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "witnessTypeString",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "permitWitnessTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
            ],
            internalType: "struct ISignatureTransfer.TokenPermissions[]",
            name: "permitted",
            type: "tuple[]",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
        ],
        internalType: "struct ISignatureTransfer.PermitBatchTransferFrom",
        name: "permit",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "requestedAmount",
            type: "uint256",
          },
        ],
        internalType: "struct ISignatureTransfer.SignatureTransferDetails[]",
        name: "transferDetails",
        type: "tuple[]",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "witness",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "witnessTypeString",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "permitWitnessTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "from",
            type: "address",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "uint160",
            name: "amount",
            type: "uint160",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
        ],
        internalType: "struct IAllowanceTransfer.AllowanceTransferDetails[]",
        name: "transferDetails",
        type: "tuple[]",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint160",
        name: "amount",
        type: "uint160",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c0346100bb574660a052602081017f8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a86681527f9ac997416e8ff9d2ff6bebeb7149f65cdae5e32e2b90440b566bb3044041d36a60408301524660608301523060808301526080825260a082019180831060018060401b038411176100a55782604052519020608052611b9590816100c1823960805181611296015260a051816112700152f35b634e487b7160e01b600052604160045260246000fd5b600080fdfe6040608081526004908136101561001557600080fd5b600090813560e01c80630d58b1db14610e8c578063137c29fe14610d095780632a2d80d114610ac05780632b67b5701461094a57806330f28b7a146108875780633644e5151461086457806336c785161461081a5780633ff9dcb1146107b85780634fe02b441461077a57806365d9723c1461066957806387517c4514610586578063927da105146104fa578063cc53287f14610417578063edd9444b146102eb5763fe8ec1a7146100c657600080fd5b346102e75760c03660031901126102e7576001600160401b0383358181116102e3576100f59036908601611174565b6024358281116102df5761010c9036908701611144565b610114611058565b916084358581116102db5761012c9036908a016110ed565b98909560a4359081116102d757610145913691016110ed565b96909581519061015482610fba565b606b82527f5065726d697442617463685769746e6573735472616e7366657246726f6d285460208301527f6f6b656e5065726d697373696f6e735b5d207065726d69747465642c61646472838301527f657373207370656e6465722c75696e74323536206e6f6e63652c75696e74323560608301526a0d88191958591b1a5b994b60aa1b608083015282519a8b91816101f1602085018096611940565b918237018a8152039961020c601f199b8c8101835282610ff0565b5190209085515161021c81611608565b908a5b8181106102aa5750506102a7999a61029e91835161025181610245602082018095611649565b03848101835282610ff0565b519020602089810151858b015195519182019687526040820192909252336060820152608081019190915260a081019390935260643560c08401528260e081015b03908101835282610ff0565b519020936119fe565b80f35b806102c26102bc6102d2938c516115f4565b516118f0565b6102cc82866115f4565b5261163a565b61021f565b8880fd5b8780fd5b8480fd5b8380fd5b5080fd5b5091346102e75760803660031901126102e7576001600160401b039080358281116102e35761031d9036908301611174565b6024358381116102df576103349036908401611144565b93909261033f611058565b9160643590811161041357610356913691016110ed565b9490938351519761036689611608565b98885b8181106103f15750506102a7979881516103998161038b602082018095611649565b03601f198101835282610ff0565b5190206020860151828701519083519260208401947ffcf35f5ac6a2c28868dc44c302166470266239195f02b0ee408334829333b7668652840152336060840152608083015260a082015260a0815261029e81610fd5565b808b6102cc826104086102bc61040e968d516115f4565b926115f4565b610369565b8680fd5b5082346104f657602090816003193601126102e3578035906001600160401b0382116102df5761044991369101611144565b929091845b848110610459578580f35b8061046f61046a60019388886117c0565b6117d0565b6104848461047e848a8a6117c0565b016117d0565b338952838552858920916001600160a01b0380911692838b528652868a20911690818a5285528589206bffffffffffffffffffffffff60a01b81541690558551918252848201527f89b1add15eff56b3dfe299ad94e01f2b52fbcb80ae1a3baea6ae8c04cb2b98a4853392a20161044e565b8280fd5b50346102e75760603660031901126102e7576105828161051861102c565b93610521611042565b610529611058565b6001600160a01b03968716835260016020908152848420928816845291825283832090871683528152919020549251938316845260a083901c65ffffffffffff169084015260d09190911c604083015281906060820190565b0390f35b50346102e75760803660031901126102e7576105a061102c565b906105a9611042565b916105b2611058565b906064359265ffffffffffff93848116908181036102db577fda9fa7c1b00402c17d0161b249b1ab8bbec047c5a52207b9c112deffd817036b933389526001602052838920966001600160a01b0380921697888b5260205281858b20991698898b52602052848a2092841560001461066157504216905b82546001600160d01b03191660a09290921b65ffffffffffff60a01b169190911795169485179055815193845260208401523392a480f35b905090610629565b5082346104f65760603660031901126104f65761068461102c565b9061068d611042565b9265ffffffffffff60443581811693908481036102db5733885260209160018352848920966001600160a01b0380911697888b528452858a20981697888a5283528489205460d01c938487111561076b5761ffff90858403161161075d57503380895260018352848920878a528352848920888a52835284892080546001600160d01b031660d09390931b6001600160d01b03191692909217909155835194855290840191909152917f55eb90d810e1700b35a8e7e25395ff7f2b2259abd7415ca2284dfb1c246418f39190a480f35b8451631269ad1360e11b8152fd5b508451633ab3447f60e11b8152fd5b50346102e757806003193601126102e757806020926001600160a01b0361079f61102c565b1681528084528181206024358252845220549051908152f35b5082346104f657816003193601126104f6577f3704902f963766a4e561bbaab6e6cdc1b1dd12f6e9e99648da8843b3f46b918d90359160243533855284602052818520848652602052818520818154179055815193845260208401523392a280f35b82346108615760803660031901126108615761083461102c565b61083c611042565b610844611058565b606435916001600160a01b03831683036102df576102a793611676565b80fd5b50346102e757816003193601126102e75760209061088061126d565b9051908152f35b508290346104f6576101003660031901126104f6576108a536611082565b90806083193601126102e3576108b9611011565b9160e4356001600160401b038111610946576102a7946108db913691016110ed565b9390926108e883516118f0565b6020840151828501519083519260208401947f939c21a48a8dbe3a9a2404a1d46691e4d39f6583d6ec6b35714604c986d801068652840152336060840152608083015260a082015260a0815261093d81610fd5565b5190209161196b565b8580fd5b5091346102e7576101003660031901126102e75761096661102c565b366023190160c081126102e357608085519161098183610f9f565b126102e35784519061099282610f6e565b6001600160a01b03916024358381168103610413578152604435838116810361041357602082015265ffffffffffff60643581811681036102db57888301526084359081168103610413576060820152815260a435938285168503610946576020820194855260c4359087830182815260e4356001600160401b0381116102d757610a2090369084016110ed565b929093804211610aaa575050918591610a9a6102a7999a610aa095610a458851611328565b90898c511690519083519260208401947ff3841cd1ff0085026a6327b620b67997ce40f282c88a8e905a7a5626e310f3d086528401526060830152608082015260808152610a9281610fba565b5190206115c3565b916113c6565b51925116916117e4565b8a5163cd21db4f60e01b81529182015260249150fd5b5091346102e75760606003199181833601126102e357610ade61102c565b92602435916001600160401b0391828411610413578490843603011261094657865196610b0a88610f9f565b838201358381116102db578401366023820112156102db578281013590610b308261111a565b90610b3d84519283610ff0565b82825260209260248484019160071b83010191368311610d0557602401905b828210610ca95750505089526044610b766024870161106e565b95828b01968752013593828a0190858252604435908111610ca557610b9e90369086016110ed565b949095804211610c8f5750508998995151610bb881611608565b908b5b818110610c6c57505092889492610a9a92610c3997958351610be48161038b8682018095611649565b519020906001600160a01b039a8b8b51169151928551948501957faf1b0d30d2cab0380e68f0689007e3254993c596f2fdd0aaa7f4d04f794408638752850152830152608082015260808152610a9281610fba565b51169082515192845b848110610c4d578580f35b80610c668585610c6060019587516115f4565b516117e4565b01610c42565b806102c2610c818e9f9e93610c8794516115f4565b51611328565b9b9a9b610bbb565b845163cd21db4f60e01b81529182015260249150fd5b8980fd5b608082360312610d0557846080918751610cc281610f6e565b610ccb8561106e565b8152610cd883860161106e565b83820152610ce7898601611131565b89820152610cf68d8601611131565b8d820152815201910190610b5c565b8b80fd5b5082346104f6576101403660031901126104f657610d2636611082565b91806083193601126102e357610d3a611011565b6001600160401b0393906101043585811161041357610d5c90369086016110ed565b9093610124359687116102db57610d7c61093d966102a7983691016110ed565b969095825190610d8b82610fba565b606482527f5065726d69745769746e6573735472616e7366657246726f6d28546f6b656e5060208301527f65726d697373696f6e73207065726d69747465642c6164647265737320737065848301527f6e6465722c75696e74323536206e6f6e63652c75696e7432353620646561646c6060830152631a5b994b60e21b6080830152835194859181610e21602085018096611940565b918237018b81520393610e3c601f1995868101835282610ff0565b51902092610e4a86516118f0565b6020878101518589015195519182019687526040820192909252336060820152608081019190915260a081019390935260e43560c08401528260e08101610292565b5082346104f6576020806003193601126102e35781356001600160401b03928382116109465736602383011215610946578101359283116102df576024906007368386831b8401011161041357865b858110610ee6578780f35b80821b830190608060231983360301126102d757610f68888760019460608351610f0f81610f6e565b610f4b6084610f1f8d860161106e565b94858452610f2f6044820161106e565b8097850152610f406064820161106e565b80988501520161106e565b91829101526001600160a01b038080809316951693169116611676565b01610edb565b608081019081106001600160401b03821117610f8957604052565b634e487b7160e01b600052604160045260246000fd5b606081019081106001600160401b03821117610f8957604052565b60a081019081106001600160401b03821117610f8957604052565b60c081019081106001600160401b03821117610f8957604052565b90601f801991011681019081106001600160401b03821117610f8957604052565b60c435906001600160a01b038216820361102757565b600080fd5b600435906001600160a01b038216820361102757565b602435906001600160a01b038216820361102757565b604435906001600160a01b038216820361102757565b35906001600160a01b038216820361102757565b60031901906080821261102757604080519061109d82610f9f565b808294126110275780518181018181106001600160401b03821117610f895782526004356001600160a01b0381168103611027578152602435602082015282526044356020830152606435910152565b9181601f84011215611027578235916001600160401b038311611027576020838186019501011161102757565b6001600160401b038111610f895760051b60200190565b359065ffffffffffff8216820361102757565b9181601f84011215611027578235916001600160401b038311611027576020808501948460061b01011161102757565b91909160608184031261102757604080519161118f83610f9f565b829481356001600160401b039081811161102757830182601f820112156110275780356111bb8161111a565b926111c887519485610ff0565b818452602094858086019360061b85010193818511611027579086899897969594939201925b84841061120b575050505050855280820135908501520135910152565b909192939495969784830312611027578851908982019082821085831117611258578a928992845261123c8761106e565b81528287013583820152815201930191908897969594936111ee565b60246000634e487b7160e01b81526041600452fd5b467f0000000000000000000000000000000000000000000000000000000000000000036112b8577f000000000000000000000000000000000000000000000000000000000000000090565b60405160208101907f8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a86682527f9ac997416e8ff9d2ff6bebeb7149f65cdae5e32e2b90440b566bb3044041d36a60408201524660608201523060808201526080815261132281610fba565b51902090565b60405160208101917f65626cad6cb96493bf6f5ebea28756c966f023ab9e8a83a7101849d5573b367883526001600160a01b038082511660408401526020820151166060830152606065ffffffffffff9182604082015116608085015201511660a082015260a0815260c081018181106001600160401b03821117610f895760405251902090565b9190826040910312611027576020823592013590565b6000843b6114ea575060418203611484576113e3828201826113b0565b9390926040101561146e5760209360009360ff6040608095013560f81c5b60405194855216868401526040830152606082015282805260015afa15611462576001600160a01b03806000511691821561145057160361143e57565b604051632057875960e21b8152600490fd5b604051638baa579f60e01b8152600490fd5b6040513d6000823e3d90fd5b634e487b7160e01b600052603260045260246000fd5b604082036114d857611498918101906113b0565b6001600160ff1b0381169260ff91821c601b019182116114c25760209360009360ff608094611401565b634e487b7160e01b600052601160045260246000fd5b604051634be6321b60e01b8152600490fd5b918093946020926001600160a01b036064604051809881968295630b135d3f60e11b9c8d8552600485015260406024850152816044850152848401378181018301899052601f01601f19168101030192165afa9182156115b6578192611570575b50506001600160e01b0319160361155e57565b604051632c19a72f60e21b8152600490fd5b9091506020813d82116115ae575b8161158b60209383610ff0565b810103126102e75751906001600160e01b0319821682036108615750388061154b565b3d915061157e565b50604051903d90823e3d90fd5b6115cb61126d565b9060405190602082019261190160f01b8452602283015260428201526042815261132281610f6e565b805182101561146e5760209160051b010190565b906116128261111a565b61161f6040519182610ff0565b8281528092611630601f199161111a565b0190602036910137565b60001981146114c25760010190565b805160208092019160005b828110611662575050505090565b835185529381019392810192600101611654565b9291926001600160a01b03604060008284168152600160205282828220961695868252602052818120338252602052209485549565ffffffffffff8760a01c168042116117235750828716968388036116da575b50506116d89550169261173b565b565b87848416116000146116ff5760405163f96fb07160e01b815260048101899052602490fd5b83836116d8990316906bffffffffffffffffffffffff60a01b1617905538806116ca565b60249060405190636c0d979760e11b82526004820152fd5b9060006064926020958295604051946323b872dd60e01b86526004860152602485015260448401525af13d15601f3d116001600051141617161561177b57565b60405162461bcd60e51b815260206004820152601460248201527f5452414e534645525f46524f4d5f4641494c45440000000000000000000000006044820152606490fd5b919081101561146e5760061b0190565b356001600160a01b03811681036110275790565b9065ffffffffffff90816060840151166001600160a01b03908185511694826020820151169280866040809401511695169560009187835260016020528383208984526020528383209916988983526020528282209184835460d01c036118df5791856118d394927fc6a377bfc4eb120024a8ac08eef205be16b817020812c73223e81d1bdb9708ec989796945087156000146118d85742165b6001850160d01b6001600160d01b03191660a09190911b65ffffffffffff60a01b1617179055516001600160a01b03909316835265ffffffffffff938416602084015290921660408201529081906060820190565b0390a4565b508661187e565b8351633ab3447f60e11b8152600490fd5b6040516020808201927f618358ac3db8dc274f0cd8829da7e234bd48cd73c4a740aede1adec9846d06a184526001600160a01b038151166040840152015160608201526060815261132281610f6e565b9081519160005b838110611958575050016000815290565b8060208092840101518185015201611947565b9192909360a4359360408401518042116119e657506020845101518086116119ce5750918591610a9a6119ab946119a6602088015186611b10565b6115c3565b6001600160a01b038091515116926084359182168203611027576116d89361173b565b60249060405190633728b83d60e01b82526004820152fd5b6024906040519063cd21db4f60e01b82526004820152fd5b959093958051519560409283830151804211611af95750848803611acf57611a35918691610a9a60209b6119a68d88015186611b10565b60005b868110611a49575050505050505050565b611a548183516115f4565b5188611a6183878a6117c0565b01359089810151808311611ab8575091818888886001968596611a8b575b50505050505001611a38565b611aad95611aa7926001600160a01b0361046a935116956117c0565b9161173b565b803888888883611a7f565b602490865190633728b83d60e01b82526004820152fd5b83517fff633a38000000000000000000000000000000000000000000000000000000008152600490fd5b60249085519063cd21db4f60e01b82526004820152fd5b906001600160a01b03600160ff83161b9216600052600060205260406000209060081c6000526020526040600020818154188091551615611b4d57565b604051633ab3447f60e11b8152600490fdfea264697066735822122067353fd621e75fb6174a5be6653e6d141e054db2c93ea2518427b99ef8c5c75964736f6c63430008130033";

type Permit2ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: Permit2ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Permit2__factory extends ContractFactory {
  constructor(...args: Permit2ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Permit2> {
    return super.deploy(overrides || {}) as Promise<Permit2>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Permit2 {
    return super.attach(address) as Permit2;
  }
  override connect(signer: Signer): Permit2__factory {
    return super.connect(signer) as Permit2__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): Permit2Interface {
    return new utils.Interface(_abi) as Permit2Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Permit2 {
    return new Contract(address, _abi, signerOrProvider) as Permit2;
  }
}
